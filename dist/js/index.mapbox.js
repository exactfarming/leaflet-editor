!function(e){var t={};function o(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,o),i.l=!0,i.exports}o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)o.d(r,i,function(t){return e[t]}.bind(null,i));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=21)}([function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={changed:"editor:polygon_changed",start_add_new_polygon:"editor:start_add_new_polygon",start_add_new_hole:"editor:start_add_new_hole",marker_group_clear:"editor:marker_group_clear",join_path:"editor:__join_path",hole_created:"editor:polygon:hole_created",polygon_created:"editor:polygon:created",polygon_selected:"editor:polygon:selected",delete_marker:"editor:delete_marker",delete_polygon:"editor:delete_polygon",map_cleared:"editor:map_cleared",last_marker_dblclick_mouseover:"editor:last_marker_dblclick_mouseover",hole_deleted:"editor:polygon:hole_deleted",polygon_deleted:"editor:polygon:deleted",first_marker_mouseover:"editor:first_marker_mouseover",selected_middle_marker_mouseover:"editor:selected_middle_marker_mouseover",selected_marker_mouseover:"editor:selected_marker_mouseover",not_selected_marker_mouseover:"editor:not_selected_marker_mouseover",marker_mouseout:"editor:marker_mouseout",drag_marker:"editor:drag_marker",dragend_marker:"editor:dragend_marker",marker_dragstart:"editor:marker_dragstart",edit_polygon_mousemove:"editor:edit_polygon_mousemove",edit_polygon_mouseover:"editor:edit_polygon_mouseover",edit_polygon_mouseout:"editor:edit_polygon_mouseout",delete_hole:"editor:delete_hole",before_add_marker:"editor:before_add_marker",add_marker:"editor:add_marker",add_hole_marker:"editor:add_hole_marker",marker_group_select:"editor:marker_group_select",view_polygon_mousemove:"editor:view_polygon_mousemove",view_polygon_mouseout:"editor:view_polygon_mouseout"}},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.middleSelectedIcon=t.middleIcon=t.dragIcon=t.icon=t.firstIcon=void 0;var r,i=o(3),n=(r=i)&&r.__esModule?r:{default:r};var s=1;navigator.userAgent.toLowerCase();n.default.isMobileBrowser()&&(s=2);t.firstIcon=L.divIcon({className:"m-editor-div-icon-first",iconSize:[10*s,10*s]}),t.icon=L.divIcon({className:"m-editor-div-icon",iconSize:[10*s,10*s]}),t.dragIcon=L.divIcon({className:"m-editor-div-icon-drag",iconSize:[10*s*3,10*s*3]}),t.middleIcon=L.divIcon({className:"m-editor-middle-div-icon",iconSize:[10*s,10*s]}),t.middleSelectedIcon=L.divIcon({className:"m-editor-middle-div-icon group-selected",iconSize:[10*s,10*s]})},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=s(o(9)),i=s(o(0)),n=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t.default=e,t}(o(1));function s(e){return e&&e.__esModule?e:{default:e}}L.MarkerGroup=r.default.extend({_isHole:!1,_position:null,options:{mIcon:null,mHoverIcon:null},initialize:function(e){L.LayerGroup.prototype.initialize.call(this,e),this._markers=[]},onAdd:function(e){this._map=e},onRemove:function(){this._map.off("mousemove")},_updateDELine:function(e){var t=this.getDELine();return this._firstMarker&&t.update(e),t},getDELine:function(){return this._map.dashedEditLineGroup},hasMinimalMarkersLength:function(){return this.getLayers().filter(function(e){return e._icon.classList.contains("m-editor-div-icon")&&!e._icon.classList.contains("m-editor-middle-div-icon")}).length<=3},setSelected:function(e){var t=this._map;if(this.hasFirstMarker())return t.setSelectedMarker(this.getLast()),void(t._oldSelectedMarker=t._selectedMarker);t._oldSelectedMarker=t._selectedMarker,t.setSelectedMarker(e)},getFirst:function(){return this._firstMarker},getLast:function(){if(this.hasFirstMarker()){var e=this.getLayers();return e[e.length-1]}},hasFirstMarker:function(){return!(!this.getFirst()||!this.getFirst()._hasFirstIcon())},restore:function(e){var t,o=this;if(e._latlngs[0][0]instanceof L.LatLng){if(e._latlngs&&this.setAll(e._latlngs[0]),e._latlngs[1]){var r=(t=e._latlngs,Array.isArray(t)?t:Array.from(t)),i=(r[0],r.slice(1));this.setAllHoles(i)}}else e._latlngs[0][0][0]instanceof L.LatLng&&e._latlngs.forEach(function(e){o.restore({_latlngs:e})})},_add:function(e,t){var o=this,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this._map.isMode("draw")&&(this._firstMarker||(r.icon=n.firstIcon));var s=this.addMarker(e,t,r);return this.getDELine().addLatLng(e),this.getFirst()._hasFirstIcon()?this._map.on("mousemove",function(e){o._updateDELine(e.latlng)}):this.getDELine().clear(),s._mGroup.getLayers().length>2&&s._mGroup._firstMarker._hasFirstIcon()&&s===s._mGroup._lastMarker&&this._map.fire(i.default.last_marker_dblclick_mouseover,{marker:s}),s},setMiddleMarker:function(e){this.addMarker(e,null,{icon:n.middleSelectedIcon})},setMiddleMarkers:function(e){this.setMiddleMarker(e),this.setMiddleMarker(e+2)},set:function(e,t,o){return this._add(e,t,o)},setAll:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];t.forEach(function(t,o){e.set(t,o)}),t.length>0&&this.getFirst().fire("click")},setAllHoles:function(){var e=this;(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).forEach(function(t){var o=e._map.getEHMarkersGroup().addHoleGroup();t._each(function(e,t){o.set(e,t)}),o.getFirst().fire("click")})},_bindLineEvents:void 0});var a=L.MarkerGroup;t.default=a},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={isMobileBrowser:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:window.navigator,t=e.userAgent||e.vendor||window.opera,o=!1;return(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4)))&&(o=!0),o}}},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default={forceToDraw:!0,notifyClickMarkerDeletePolygon:!1,translations:{removePolygon:"remove polygon",removePoint:"remove point"},style:{view:{opacity:.5,fillOpacity:.2,dashArray:null,clickable:!1,fill:!0,stroke:!0,color:"#0aaec9",weight:3},draw:{opacity:.5,fillOpacity:.2,dashArray:"5, 10",clickable:!0,fill:!0,stroke:!0,color:"#00cd00",weight:3},startDraw:{},drawLine:{opacity:.7,fill:!1,fillColor:"#00cd00",color:"#00cd00",weight:3,dashArray:"5, 10",stroke:!0,clickable:!1}},markerIcon:void 0,markerHoverIcon:void 0,errorLineStyle:{color:"red",weight:3,opacity:1,smoothFactor:1},previewErrorLineStyle:{color:"red",weight:3,opacity:1,smoothFactor:1,dashArray:"5, 10"},text:{removePolygon:"Remove polygon",acceptDeletion:"Click again to remove polygon",clickToEdit:"click to edit",clickToAddNewEdges:"<div>click&nbsp;&nbsp;<div class='m-editor-middle-div-icon static group-selected'></div>&nbsp;&nbsp;to add new edges</div>",clickToDrawInnerEdges:"click to draw inner edges",clickToJoinEdges:"click to join edges",clickToRemoveAllSelectedEdges:"<div>click&nbsp;&nbsp;&nbsp;&nbsp;<div class='m-editor-div-icon static group-selected'></div>&nbsp;&nbsp;to remove edge&nbsp;&nbsp;or<br>click&nbsp;&nbsp;<i class='fa fa-trash'></i>&nbsp;&nbsp;to remove all selected edges</div>",clickToSelectEdges:"<div>click&nbsp;&nbsp;&nbsp;&nbsp;<div class='m-editor-div-icon static'></div>&nbsp;/&nbsp;<div class='m-editor-middle-div-icon static'></div>&nbsp;&nbsp;to select edges</div>",dblclickToJoinEdges:"double click to join edges",clickToStartDrawPolygonOnMap:"click to start draw polygon on map",deleteSelectedEdges:"deleted selected edges",rejectChanges:"reject changes",jsonWasLoaded:"JSON was loaded",checkJson:"check JSON",loadJson:"load GeoJSON",forgetToSave:"Save changes by pressing outside of polygon",zoom:"Zoom"},worldCopyJump:!0,geoJSONArea:null}},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(e[r]=o[r])}return e},i=h(o(6)),n=h(o(11)),s=h(o(4));o(13);var a=h(o(14)),l=h(o(15)),d=h(o(16)),c=h(o(2)),u=h(o(18)),_=h(o(19));function h(e){return e&&e.__esModule?e:{default:e}}var f=L.Map.extend({setLayers:function(){this.viewGroup=new a.default,this.editGroup=new l.default([]),this.editPolygon=new d.default,this.editMarkersGroup=new c.default([]),this.dashedEditLineGroup=new u.default,this.editHoleMarkersGroup=new _.default([]),this.viewGroup.addTo(this),this.editGroup.addTo(this),this.editPolygon.addTo(this),this.editMarkersGroup.addTo(this),this.dashedEditLineGroup.addTo(this),this.editHoleMarkersGroup.addTo(this)},removeLayers:function(){this.removeLayer(this.viewGroup),this.removeLayer(this.editGroup),this.removeLayer(this.editPolygon),this.removeLayer(this.editMarkersGroup),this.removeLayer(this.dashedEditLineGroup),this.removeLayer(this.editHoleMarkersGroup)},initialize:function(e,t){var o=this;this.viewGroup=null,this.editGroup=null,this.editPolygon=null,this.editMarkersGroup=null,this.dashedEditLineGroup=null,this.editHoleMarkersGroup=null,t.text&&(r(s.default.text,t.text),delete t.text);var i=t.controls;i&&!1===i.zoom&&(t.zoomControl=!1),t.style&&(t.style.draw&&r(s.default.style.draw,t.style.draw),t.style.view&&r(s.default.style.view,t.style.view),t.style.startDraw&&r(s.default.style.startDraw,t.style.startDraw),t.style.drawLine&&r(s.default.style.drawLine,t.style.drawLine),delete t.style),r(this.options,s.default,t),L.Map.prototype.initialize.call(this,e,t),this.whenReady(function(){o.setLayers()}),this.options.forceToDraw&&this.mode("draw"),this.on("unload",function(){o.removeControl(o.msgHelper),o.removeLayers()})},getVGroup:function(){return this.viewGroup},getEGroup:function(){return this.editGroup},getEPolygon:function(){return this.editPolygon},getEMarkersGroup:function(){return this.editMarkersGroup},getDELine:function(){return this.dashedEditLineGroup},getEHMarkersGroup:function(){return this.editHoleMarkersGroup},setSelectedMGroup:function(e){this._selectedMGroup=e},clearSelectedMGroup:function(){this._selectedMGroup=null},getSelectedMGroup:function(){var e=this._selectedMGroup;return e&&e._map?e:null},getCurrentGeoJSON:function(){var e=this,t=[];this.getVGroup().eachLayer(function(o){o!==e._getSelectedVLayer()&&t.push(o.toGeoJSON().geometry.coordinates)});var o=this.getEPolygon().toGeoJSON().geometry.coordinates;return o.length&&t.push(o),L.GeoJSON.getFeature(this,{type:"MultiPolygon",coordinates:t})}});f.include(i.default),f.addInitHook(n.default),t.default=f},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(e[r]=o[r])}return e},i=l(o(7)),n=o(8),s=l(o(0)),a=l(o(2));function l(e){return e&&e.__esModule?e:{default:e}}t.default=r({hasSelectedVLayer:function(){return void 0!==this._getSelectedVLayer()},_selectedMarker:void 0,_selectedVLayer:void 0,_oldSelectedMarker:void 0,_modeType:"draw",_activeEditLayer:void 0,_errorTimeout:null,mode:function(e){this["__mode_"+e]?(this._setModeType(e),this._clearEvents(),e=this["__mode_"+e]()||e,this._setMode(e)):console.error('Mode "'+e+'" is not defined')},isMode:function(e){return e===this._modeType},__mode_draw:function(){this._bindDrawEvents()},clear:function(){this._clearEvents(),this._clearMap(),this.fire(s.default.map_cleared)},saveState:function(){return this.getEPolygon().isEmpty()||(this._getSelectedVLayer()?this._setEPolygon_To_VGroup():this._addEPolygon_To_VGroup()),this.clear(),this.mode("draw"),{type:"MultiPolygon",coordinates:this.getVGroup().toGeoJSON().features.reduce(function(e,t){return[].concat(function(e){if(Array.isArray(e)){for(var t=0,o=Array(e.length);t<e.length;t++)o[t]=e[t];return o}return Array.from(e)}(e),[t.geometry.coordinates])},[])}},geoJSONArea:function(e){var t=this.options.geoJSONArea||window.turf&&window.turf.area;return t||console.warn('Warning: Implement "geoJSONArea" function ( leaflet-editor )'),t?t(e):0},area:function(){var e,t=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).precLatLng,o=void 0===t?6:t,r=this.getVGroup(),i=this.getEPolygon(),s=this._getSelectedVLayer(),a=i.isEmpty()?0:this.geoJSONArea((0,n.precisionGeoJSON)(i.toGeoJSON(),o)),l=this.geoJSONArea((0,n.precisionGeoJSON)(r.toGeoJSON(),o)),d=s?this.geoJSONArea((0,n.precisionGeoJSON)(s.toGeoJSON(),o)):0;return this.hasSelectedVLayer()&&a>0&&(l-=d),e=a>0?l+a:l,(0,n.precision)(e,o)},getSelectedMarker:function(){return this._selectedMarker},clearSelectedMarker:function(){this._selectedMarker=null},setSelectedMarker:function(e){if(!e||!e._icon)throw new Error('Error in method "setSelectedMarker". Check marker instance');this._selectedMarker=e},removePolygon:function(e){this.getEMarkersGroup().clearLayers(),this.getEHMarkersGroup().clearLayers(),e.clear(),this.clearSelectedMarker(),this._setEPolygon_To_VGroup()},createEditPolygon:function(e){var t=this,o=L.geoJson(e);this._getSelectedVLayer()?this._setEPolygon_To_VGroup():this._addEPolygon_To_VGroup(),this.clear();var r=o.getLayers();return r.length>0&&r.forEach(function(e){var o=e.getLatLngs(),r=t.getVGroup();"MultiPolygon"===e.feature.geometry.type?o.forEach(function(e){r.addLayer(L.polygon(e,{className:"view-polygon"}))}):r.addLayer(L.polygon(o,{className:"view-polygon"}))}),this.mode("draw"),this._fitVBounds(),o},_getSelectedVLayer:function(){return this._selectedVLayer},_setSelectedVLayer:function(e){this._selectedVLayer=e},_clearSelectedVLayer:function(){this._selectedVLayer=void 0},_hideSelectedVLayer:function(e){e.bringToBack(),e&&(this._showSelectedVLayer(this._getSelectedVLayer()),this._setSelectedVLayer(e),e._path.style.visibility="hidden")},_showSelectedVLayer:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._selectedVLayer;e&&(e._path.style.visibility="")},_addEPolygon_To_VGroup:function(){var e=this.getVGroup(),t=this.getEPolygon().getLatLngs();t&&t[0]&&t[0].length<=2||e.addLayer(L.polygon(t,{className:"view-polygon"}))},_setEPolygon_To_VGroup:function(){var e=this.getEPolygon(),t=this._getSelectedVLayer();t&&(t._latlngs=e.getLatLngs(),t.redraw())},_convertToEdit:function(e){if(e instanceof a.default){var t=this.getEPolygon(),o=e.getLayers(),r=(o=o.filter(function(e){return!e.isMiddle()})).map(function(e){return e.getLatLng()}),i=t.getHoles();return i&&(r=[r].concat(i)),t.setLatLngs(r),t.redraw(),t}},_setMode:function(e){var t=this.options;this.getEPolygon().setStyle(t.style[e])},_setModeType:function(e){try{this._container.classList.remove("map-"+this._modeType),this._container.classList.add("map-"+this._modeType),this._modeType=e}catch(e){console.error('Check "_setModeType"')}},_fitVBounds:function(){0!==this.getVGroup().getLayers().length&&this.fitBounds(this.getVGroup().getBounds(),{padding:[30,30]})},_clearMap:function(){this.getEGroup().clearLayers(),this.getEPolygon().clear(),this.getEMarkersGroup().clear();var e=this.getSelectedMGroup();e&&e.getDELine().clear(),this.getEHMarkersGroup().clear(),this._activeEditLayer=void 0,this._showSelectedVLayer(),this._clearSelectedVLayer(),this.clearSelectedMarker()},_clearEvents:function(){this._unBindDrawEvents()},_moveEPolygonOnTop:function(){var e=this.getEPolygon()._container;e&&e.parentElement.insertAdjacentElement("beforeend",e)},_getGeometry:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return e.geometry?e.geometry:e.features&&e.features[0]?this._getGeometry(e.features[0]):{}}},i.default)},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,i=o(1),n=o(0),s=(r=n)&&r.__esModule?r:{default:r};t.default={_bindDrawEvents:function(){var e=this;this._unBindDrawEvents(),this.on("click",function(t){if(!(t.originalEvent&&0===t.originalEvent.clientX&&0===t.originalEvent.clientY||t.target instanceof L.Marker)){var o=t.target.getEMarkersGroup();if(o.isEmpty()){e._addMarker(t),e.fire(s.default.start_add_new_polygon,t);var r=e.options.style.startDraw;return r&&e.getEPolygon().setStyle(r),e._clearSelectedVLayer(),e.setSelectedMGroup(o),!1}var n=o.getFirst();if(n&&n._hasFirstIcon())return t.target instanceof L.Marker||e._addMarker(t),!1;var a=e.getEHMarkersGroup(),l=a.getLastHole();if(n&&!n._hasFirstIcon()&&!(t.target.getEPolygon()._path!==t.originalEvent.target||l&&l.getFirst()&&l.getFirst()._hasFirstIcon())){e.clearSelectedMarker();var d=a.addHoleGroup();return d.set(t.latlng,null,{icon:i.firstIcon}),e.setSelectedMGroup(d),e.fire(s.default.start_add_new_hole),e.getEHMarkersGroup().resetSelection(),e.getEMarkersGroup().resetSelection(),!1}if(l&&!l.isEmpty()&&l.hasFirstMarker()){var c=a.getLastHole().set(t.latlng);return e.fire(s.default.add_hole_marker,{marker:c}),!1}e._getSelectedVLayer()?e._setEPolygon_To_VGroup():e._addEPolygon_To_VGroup(),e.clear(),e.fire(s.default.marker_group_clear),e.fire(s.default.changed,{json:e.saveState()}),e.mode("draw")}}),this.on(s.default.join_path,function(t){var o=t.mGroup;if(o){o._isHole&&e.getEHMarkersGroup().resetLastHole();var r=o.getLayers(),n=-1;r.forEach(function(){var e=o.addMarker(n,null,{icon:i.middleIcon});n=e.position+2}),o.getDELine().clear(),o.select(),e.getEPolygon().setStyle(e.options.style.draw),o._isHole?e.fire(s.default.hole_created):e.fire(s.default.polygon_created)}});var t=this.getVGroup();t.on("click",function(o){var r=e.getSelectedMGroup();r&&r.hasFirstMarker()||(t.onClick(o),e.msgHelper.msg(e.options.text.clickToDrawInnerEdges,null,o.layerPoint),e.fire(s.default.polygon_selected))}),this.on(s.default.delete_marker,function(){e._convertToEdit(e.getEMarkersGroup())}),this.on(s.default.delete_polygon,function(){e.getEHMarkersGroup().remove()})},_addMarker:function(e){var t=e.latlng,o=this.getEMarkersGroup(),r=o.set(t);return this._convertToEdit(o),this.fire(s.default.add_marker,{marker:r}),r},_unBindDrawEvents:function(){this.off("click"),this.getVGroup().off("click"),this.off("dblclick"),this.getDELine().clear(),this.off(s.default.join_path),this._openPopup&&delete this._openPopup}}},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(e[r]=o[r])}return e},i=t.precision=function(e,t){var o=(""+e).split(".");if(t=t||0,!e||1===o.length)return e;var r=0;if(o[1].length>0){var i=o[1].length<t?o[1].length:t;r=e.toPrecision(o[0].length+i)}return Number(r)};t.precisionGeoJSON=function e(t){var o,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(null==t)throw new Error("Please, make sure that first arguments is geoJSON");if(t.features&&t.features[0]&&(t.features=t.features.map(function(t){return e(t,n)},[])),(o=r({},t)).geometry){var s=o.geometry,a=s.type,l=s.coordinates;if(!Array.isArray(l))throw new Error("Please, make sure that geoJSON has correct structure");"Polygon"===a&&n>0&&l.forEach(function(e){e.forEach(function(e){e[0]=i(e[0],n),e[1]=i(e[1],n)})}),"MultiPolygon"===a&&n>0&&l.forEach(function(e){e.forEach(function(e){e.forEach(function(e){e[0]=i(e[0],n),e[1]=i(e[1],n)})})})}return o}},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=s(o(10)),i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t.default=e,t}(o(1)),n=s(o(0));function s(e){return e&&e.__esModule?e:{default:e}}t.default=L.LayerGroup.extend({includes:L.Evented,_selected:!1,_lastMarker:void 0,_firstMarker:void 0,_positionHash:void 0,_lastPosition:0,_markers:[],onRemove:function(){this.clearLayers()},clearLayers:function(){var e=this;this._markers.forEach(function(t){e._map.removeLayer(t)}),this._markers=[]},addTo:function(e){e.addLayer(this)},addLayer:function(e){this._map.addLayer(e),this._markers.push(e),null!=e.position&&this._markers.move(this._markers.length-1,e.position),e.position=null!=e.position?e.position:this._markers.length-1},remove:function(){var e=this,t=this._map,o=this.getLayers();this.getDELine().clear(),o._each(function(t){for(;e.getLayers().length;)e.removeMarker(t)}),this._isHole?t.fire(n.default.hole_deleted):(t.getVGroup().removeLayer(t._getSelectedVLayer()),t.fire(n.default.polygon_deleted))},removeLayer:function(e){var t=e.position;this._map.removeLayer(e),this._markers.splice(t,1)},getLayers:function(){return this._markers},eachLayer:function(e){this._markers.forEach(e)},markerAt:function(e){var t=this._markers[e];return e<0?this.firstMarker():(void 0===t&&(t=this.lastMarker()),t)},firstMarker:function(){return this._markers[0]},lastMarker:function(){var e=this._markers;return e[e.length-1]},removeMarker:function(e){var t=!e.isMiddle(),o=e._prev,r=e._next,i=e._next._next;this.removeMarkerAt(e.position),this.removeMarkerAt(o.position),this.removeMarkerAt(r.position);var s=this._map;this.getLayers().length>0?(this.setMiddleMarker(i.position),t&&s.fire(n.default.delete_marker,{marker:e})):(this._isHole?(s.removeLayer(this),s.fire(n.default.delete_hole,{marker:e})):(s.fire(n.default.delete_polygon),s.removePolygon(s.getEPolygon())),s.fire(n.default.marker_group_clear))},removeMarkerAt:function(e){var t;if(0!==this.getLayers().length&&"number"==typeof e){t=this.markerAt(e);var o=!1,r=this._markers;if(r.forEach(function(e){o&&(e.position=0===e.position?0:e.position-1),e===t&&(t._prev._next=t._next,t._next._prev=t._prev,o=!0)}),this.removeLayer(t),r.length<5&&(this.clear(),!this._isHole)){var i=this._map;i.getEPolygon().clear(),i.getVGroup().removeLayer(i._getSelectedVLayer())}}},hasStartMarker:function(){return!!this.getLayers().some(function(e){return e._icon.classList.contains(i.firstIcon.options.className)})},addMarker:function(e,t,o){if("number"==typeof e){t=this.markerAt(e).position,this._recalcPositions(t);var i=t-1<0?this.lastMarker():this.markerAt(t-1),s=this.markerAt(-1==t?1:t);e=this._getMiddleLatLng(i,s)}var a=new r.default(this,e,o);return this._firstMarker||(this._firstMarker=a,this._lastMarker=a),void 0!==t&&(a.position=t),this.addLayer(a),a.position=void 0!==a.position?a.position:this._lastPosition++,a._prev=this._lastMarker,this._firstMarker._prev=a,a._prev&&(this._lastMarker._next=a,a._next=this._firstMarker),void 0===t&&(this._lastMarker=a),void 0!==t&&this._recalcRelations(a),a.isMiddle()||this._map.fire(n.default.before_add_marker,{marker:a}),a},clear:function(){var e=this,t=this._ids();this.clearLayers(),t.forEach(function(t){e._deleteEvents(t)}),this._lastPosition=0,this._firstMarker=void 0},_deleteEvents:function(e){delete this._map._leaflet_events.viewreset_idx[e],delete this._map._leaflet_events.zoomanim_idx[e]},_getMiddleLatLng:function(e,t){var o=this._map,r=o.project(e.getLatLng()),i=o.project(t.getLatLng());return o.unproject(r._add(i)._divideBy(2))},_recalcPositions:function(e){var t=this,o=this._markers,r=!1;o.forEach(function(o,i){e===i&&(r=!0),r&&(t._markers[i].position+=1)})},_recalcRelations:function(){var e=this,t=this._markers;t.forEach(function(o,r){o._prev=e.markerAt(r-1),o._next=e.markerAt(r+1),0===r&&(o._prev=e.lastMarker(),o._next=e.markerAt(1)),r===t.length-1&&(o._prev=e.markerAt(r-1),o._next=e.markerAt(0))})},_ids:function(){var e=[];for(var t in this._layers)e.push(t);return e.sort(function(e,t){return e-t}),e},select:function(){if(this.isEmpty())this._map&&this._map.clearSelectedMGroup();else{var e=this._map;this._isHole?(e.getEHMarkersGroup().resetSelection(),e.getEMarkersGroup().resetSelection(),e.getEHMarkersGroup().setLastHole(this)):(e.getEHMarkersGroup().resetSelection(),e.getEHMarkersGroup().resetLastHole()),this.getLayers()._each(function(e){e.enableDrag(),e.selectIconInGroup()}),this._selected=!0,this._map.setSelectedMGroup(this),this._map.fire(n.default.marker_group_select)}},isSelected:function(){return this._selected},isEmpty:function(){return 0===this.getLayers().length},resetSelection:function(){this.getLayers()._each(function(e){e.disableDrag(),e.unSelectIconInGroup()}),this._selected=!1}})},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(e[r]=o[r])}return e},n=o(1),s=o(0),a=(r=s)&&r.__esModule?r:{default:r};var l=navigator.userAgent.toLowerCase();-1===l.indexOf("ipad")&&l.indexOf("iphone"),t.default=L.Marker.extend({_draggable:void 0,_oldLatLngState:void 0,initialize:function(e,t){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};o=i({icon:n.icon,draggable:!1},o),L.Marker.prototype.initialize.call(this,t,o),this._mGroup=e,this._isFirst=0===e.getLayers().length},enableDrag:function(){this.dragging.enable()},disableDrag:function(){this.dragging.disable()},group:function(){return this._mGroup},next:function(){var e=this._next._next;return this._next.isMiddle()||(e=this._next),e},prev:function(){var e=this._prev._prev;return this._prev.isMiddle()||(e=this._prev),e},changePrevNextPos:function(){if(this._prev.isMiddle()){var e=this.group()._getMiddleLatLng(this.prev(),this),t=this.group()._getMiddleLatLng(this,this.next());this._prev.setLatLng(e),this._next.setLatLng(t)}},_resetIcon:function(e){if(!this._hasFirstIcon()){var t=e||n.icon;this.setIcon(t),this.prev().setIcon(t),this.next().setIcon(t)}},_addIconClass:function(e){L.DomUtil.addClass(this._icon,e)},_removeIconClass:function(e){L.DomUtil.removeClass(this._icon,e)},_hasFirstIcon:function(){return this._icon&&L.DomUtil.hasClass(this._icon,"m-editor-div-icon-first")},isMiddle:function(){return this._icon&&L.DomUtil.hasClass(this._icon,"m-editor-middle-div-icon")&&!L.DomUtil.hasClass(this._icon,"leaflet-drag-target")},_setDragIcon:function(){this._removeIconClass("m-editor-div-icon"),this._removeIconClass("m-editor-middle-div-icon"),this._addIconClass("m-editor-div-icon-drag"),this.update()},isPlain:function(){return L.DomUtil.hasClass(this._icon,"m-editor-div-icon")},_onceClick:function(){var e=this;this._isFirst&&this.once("click",function(t){if(e._hasFirstIcon()){var o=e._map,r=e.group();r._markers.length<3?e._onceClick():(e._isFirst=!1,e.setIcon(n.icon),o.fire(a.default.join_path,{mGroup:r}))}})},isAcceptedToDelete:function(){return this._map.options.notifyClickMarkerDeletePolygon&&!this.isMiddle()&&this.isSelectedInGroup()&&this._map.getSelectedMarker()===this&&this.group().hasMinimalMarkersLength()},needAcceptToDelete:function(){return this._map.options.notifyClickMarkerDeletePolygon&&!this.isMiddle()&&this.isSelectedInGroup()&&this._map.getSelectedMarker()!==this&&this.group().hasMinimalMarkersLength()},_disallowToExecuteEvent:function(){var e=this._map,t=void 0;return e&&(t=e.getSelectedMGroup()),t&&t.hasFirstMarker()&&t!==this.group()},_bindEvents:function(){var e=this;this.on("dragstart",function(t){e._setDragIcon(),e.group().setSelected(e),e._oldLatLngState=t.target._latlng,e._prev.isPlain()&&e.group().setMiddleMarkers(e.position),e._map.fire(a.default.marker_dragstart),e.__dragging=!0}),this.on("click",function(){var t=e.group(),o=e._map;if(!e._disallowToExecuteEvent()){if(e.needAcceptToDelete())return t.setSelected(e),void o.msgHelper.msg(o.options.text.acceptDeletion,"error",e);if(!(t.hasFirstMarker()&&e!==t.getFirst()||e._hasFirstIcon()||(t.setSelected(e),e._hasFirstIcon()||t.getFirst()._hasFirstIcon())))return e.isSelectedInGroup()?void(e.isMiddle()?(t.setMiddleMarkers(e.position),e._resetIcon(n.icon),t.select(),o.msgHelper.msg(o.options.text.clickToRemoveAllSelectedEdges,null,e),o.clearSelectedMarker()):t.getFirst()._hasFirstIcon()||(o.msgHelper.hide(),t.removeMarker(e),t.isEmpty()&&(t._isHole?o.fire(a.default.hole_deleted):o.fire(a.default.polygon_deleted),o.msgHelper.hide()),t.select())):(t.select(),e.isMiddle()?o.msgHelper.msg(o.options.text.clickToAddNewEdges,null,e):o.msgHelper.msg(o.options.text.clickToRemoveAllSelectedEdges,null,e),void(e.isAcceptedToDelete()&&o.msgHelper.msg(o.options.text.acceptDeletion,"error",e)))}}),this.on("mousedown",function(){if(!e.dragging._enabled)return!1}),this.on("mouseover",function(t){t.originalEvent.stopPropagation();var o=e._map.getSelectedMarker(),r=!(!o||!o.__dragging);if(!e._disallowToExecuteEvent()&&!r){var i=e._map;e.group().getFirst()._hasFirstIcon()?e.group().getLayers().length>2&&(e._hasFirstIcon()?i.fire(a.default.first_marker_mouseover,{marker:e}):e===e.group()._lastMarker&&i.fire(a.default.last_marker_dblclick_mouseover,{marker:e})):e.isSelectedInGroup()?e.isMiddle()?i.fire(a.default.selected_middle_marker_mouseover,{marker:e}):i.fire(a.default.selected_marker_mouseover,{marker:e}):i.fire(a.default.not_selected_marker_mouseover,{marker:e}),e.isAcceptedToDelete()&&i.msgHelper.msg(i.options.text.acceptDeletion,"error",e)}}),this.on("mouseout",function(t){t.originalEvent.stopPropagation();var o=e._map.getSelectedMarker(),r=!(!o||!o.__dragging);e._disallowToExecuteEvent()||r||e._map.fire(a.default.marker_mouseout)}),this._onceClick(),this.on("dblclick",function(){if(!e._disallowToExecuteEvent()){var t=e.group();t&&t.getFirst()&&t.getFirst()._hasFirstIcon()&&e===t._lastMarker&&t.getFirst().fire("click")}}),this.on("drag",function(t){e._onDrag(t)}),this.on("dragend",function(t){e._onDragEnd(t)})},onAdd:function(e){L.Marker.prototype.onAdd.call(this,e),this._bindEvents(e)},_onDrag:function(e){e.target.changePrevNextPos();var t=this._map;t._convertToEdit(t.getEMarkersGroup()),this._setDragIcon(),t.fire(a.default.drag_marker,{marker:this})},_onDragEnd:function(){var e=this;setTimeout(function(){e.group().select(),e._map.fire(a.default.dragend_marker,{marker:e}),e._map.fire(a.default.selected_marker_mouseover,{marker:e}),e.resetStyle()},1)},resetIcon:function(){this._removeIconClass("m-editor-div-icon-drag")},unSelectIconInGroup:function(){this._removeIconClass("group-selected")},_selectIconInGroup:function(){this.isMiddle()||this._addIconClass("m-editor-div-icon"),this._addIconClass("group-selected")},selectIconInGroup:function(){this._prev&&this._prev._selectIconInGroup(),this._selectIconInGroup(),this._next&&this._next._selectIconInGroup()},isSelectedInGroup:function(){return L.DomUtil.hasClass(this._icon,"group-selected")},onRemove:function(e){this.off("mouseout"),L.Marker.prototype.onRemove.call(this,e)},resetStyle:function(){this.resetIcon(),this.selectIconInGroup()}})},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){var e=this;this.touchZoom.disable(),this.doubleClickZoom.disable(),this.boxZoom.disable(),this.keyboard.disable();var t=this.msgHelper=new r.default({defaultMsg:this.options.text.clickToStartDrawPolygonOnMap});this.on("msgHelperAdded",function(){var o=e.options.text;e.on(n.default.marker_group_select,function(){e.off(n.default.not_selected_marker_mouseover),e.on(n.default.not_selected_marker_mouseover,function(e){t.msg(o.clickToSelectEdges,null,e.marker)}),e.off(n.default.selected_marker_mouseover),e.on(n.default.selected_marker_mouseover,function(e){t.msg(o.clickToRemoveAllSelectedEdges,null,e.marker)}),e.off(n.default.selected_middle_marker_mouseover),e.on(n.default.selected_middle_marker_mouseover,function(e){t.msg(o.clickToAddNewEdges,null,e.marker)}),e.off(n.default.edit_polygon_mousemove),e.on(n.default.edit_polygon_mousemove,function(e){t.msg(o.clickToDrawInnerEdges,null,e.layerPoint)}),e.off(n.default.edit_polygon_mouseout),e.on(n.default.edit_polygon_mouseout,function(){t.hide()}),e.off(n.default.view_polygon_mousemove),e.on(n.default.view_polygon_mousemove,function(r){var i;(i=e.getSelectedMGroup())&&i.hasFirstMarker()?t.hide():t.msg(o.clickToEdit,null,r.layerPoint)}),e.off(n.default.view_polygon_mouseout),e.on(n.default.view_polygon_mouseout,function(){t.hide()})}),e.off(n.default.marker_mouseout),e.on(n.default.marker_mouseout,function(){t.hide()}),e.on(n.default.marker_dragstart,function(){t.hide()}),e.off(n.default.first_marker_mouseover),e.on(n.default.first_marker_mouseover,function(e){t.msg(o.clickToJoinEdges,null,e.marker)}),e.off(n.default.last_marker_dblclick_mouseover),e.on(n.default.last_marker_dblclick_mouseover,function(e){t.msg(o.dblclickToJoinEdges,null,e.marker)}),e.on(n.default.join_path,function(o){o.marker&&t.msg(e.options.text.clickToRemoveAllSelectedEdges,null,o.marker)})}),i.default.isMobileBrowser()||this.addControl(t)};var r=s(o(12)),i=s(o(3)),n=s(o(0));function s(e){return e&&e.__esModule?e:{default:e}}},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=L.Control.extend({options:{position:"msgcenter",defaultMsg:null},_onResizeEvent:null,_titleContainer:null,initialize:function(e){L.Util.setOptions(this,e)},onAdd:function(e){var t=L.DomUtil.create("div","leaflet-bottom"),o=L.DomUtil.create("div","leaflet-msg-editor");return e._controlCorners.msgcenter=t,e._controlContainer.appendChild(t),this._setContainer(o,e),e.fire("msgHelperAdded",{control:this}),this._changePos(),this._bindEvents(e),o},onRemove:function(){this._unBindEvents(),document.querySelectorAll(".leaflet-msg-container").forEach(function(e){document.body.removeChild(e)})},_changePos:function(){if(this._map){var e=this._map._controlCorners.msgcenter;if(e&&e.children.length){var t=e.children[0].children[0];if(!t)return;var o=t.clientWidth;o&&(e.style.left=(this._map._container.clientWidth-o)/2+"px")}}else this._unBindEvents()},_unBindEvents:function(){window.removeEventListener("resize",this._onResizeEvent)},_bindEvents:function(){this._onResizeEvent=this._changePos.bind(this),window.addEventListener("resize",this._onResizeEvent)},_setContainer:function(e){this._titleContainer=L.DomUtil.create("div","leaflet-msg-container title-hidden"),this._titlePosContainer=L.DomUtil.create("div","leaflet-msg-container title-hidden"),e.appendChild(this._titleContainer),document.body.appendChild(this._titlePosContainer),null!==this.options.defaultMsg&&(L.DomUtil.removeClass(this._titleContainer,"title-hidden"),this._titleContainer.innerHTML=this.options.defaultMsg)},getOffset:function(e){var t=0,o=0;if(!this._map.isFullscreen||!this._map.isFullscreen())for(;e&&!isNaN(e.offsetLeft)&&!isNaN(e.offsetTop);)t+=e.offsetLeft,o+=e.offsetTop,e=e.offsetParent;return{y:o,x:t}},msg:function(e,t,o){if(e&&this._titlePosContainer)if(o){var r;L.DomUtil.removeClass(this._titlePosContainer,"title-hidden"),L.DomUtil.removeClass(this._titlePosContainer,"title-error"),L.DomUtil.removeClass(this._titlePosContainer,"title-success"),this._titlePosContainer.innerHTML=e;var i=this.getOffset(this._map._container);o instanceof L.Point?(r=o,r=this._map.layerPointToContainerPoint(r)):r=this._map.latLngToContainerPoint(o.getLatLng()),r.x+=i.x,r.y+=i.y,this._titlePosContainer.style.top=r.y-8+"px",this._titlePosContainer.style.left=r.x+10+"px",t&&L.DomUtil.addClass(this._titlePosContainer,"title-"+t)}else L.DomUtil.removeClass(this._titleContainer,"title-hidden"),L.DomUtil.removeClass(this._titleContainer,"title-error"),L.DomUtil.removeClass(this._titleContainer,"title-success"),this._titleContainer.innerHTML=e,t&&L.DomUtil.addClass(this._titleContainer,"title-"+t),this._changePos()},hide:function(){this._titleContainer&&L.DomUtil.addClass(this._titleContainer,"title-hidden"),this._titlePosContainer&&L.DomUtil.addClass(this._titlePosContainer,"title-hidden")},getBtnContainer:function(){return this._map._controlCorners.msgcenter},getBtnAt:function(e){return this.getBtnContainer().child[e]},disableBtn:function(e){L.DomUtil.addClass(this.getBtnAt(e),"disabled")},enableBtn:function(e){L.DomUtil.removeClass(this.getBtnAt(e),"disabled")}})},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Array.prototype.move=function(e,t){this.splice(t,0,this.splice(e,1)[0])},Array.prototype._each=function(e){for(var t=this.length,o=0;o<t;o++)e.call(this,this[o],o)},t.default=Array},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(e[r]=o[r])}return e},n=o(0),s=(r=n)&&r.__esModule?r:{default:r};t.default=L.FeatureGroup.extend({initialize:function(e){var t=this,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};L.FeatureGroup.prototype.initialize.call(this,e,o),this.on("layeradd",function(e){var o=t._map.options.style.view;e.target.setStyle(i({opacity:.7,fillOpacity:.35,color:"#00ABFF"},o)),t._map._moveEPolygonOnTop()})},isEmpty:function(){return 0===this.getLayers().length},onAdd:function(e){L.FeatureGroup.prototype.onAdd.call(this,e),this.on("mousemove",function(t){e.fire(s.default.view_polygon_mousemove,{layerPoint:t.layerPoint})}),this.on("mouseout",function(){e.fire(s.default.view_polygon_mouseout)})},onClick:function(e){L.DomEvent.stopPropagation(e);var t=this._map,o=t.getSelectedMGroup(),r=t.getEMarkersGroup();if(o&&o.getFirst()&&o.getFirst()._hasFirstIcon()&&!o.isEmpty()){var i=t.getEMarkersGroup();i.set(e.latlng),t._convertToEdit(i)}else t._getSelectedVLayer()?t._setEPolygon_To_VGroup():t._addEPolygon_To_VGroup(),t.clear(),t.mode("draw"),t._hideSelectedVLayer(e.layer),r.restore(e.layer),t._convertToEdit(r),r.select()},onRemove:function(e){this.off("mouseover"),this.off("mouseout"),e.off(s.default.view_polygon_mousemove),e.off(s.default.view_polygon_mouseout)}})},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=L.FeatureGroup.extend({})},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(o(17)),i=n(o(0));function n(e){return e&&e.__esModule?e:{default:e}}t.default=L.EditPloygon=r.default.extend({_oldE:void 0,_k:1,initialize:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[[0,0]],t=arguments[1];L.Polygon.prototype.initialize.call(this,e,t),this.options.className="leaflet-clickable editable-polygon"},_updateMarker:function(e){var t=e.marker;if(t._mGroup._isHole){var o=t._mGroup._markers;o=o.filter(function(e){return!e.isMiddle()}),this._latlngs[t._mGroup.position+1]=o.map(function(e){return e.getLatLng()})}this.redraw()},_removeHole:function(e){var t=e.marker._mGroup.position;this._latlngs.splice(t+1,1);var o=this._map.getEHMarkersGroup();o.removeLayer(e.marker._mGroup._leaflet_id),o.repos(e.marker._mGroup.position),this.redraw()},onAdd:function(e){var t=this;L.Polyline.prototype.onAdd.call(this,e),e.off(i.default.before_add_marker),e.on(i.default.before_add_marker,function(e){return t._updateMarker(e)}),e.off(i.default.drag_marker),e.on(i.default.drag_marker,function(e){return t._updateMarker(e)}),e.off(i.default.delete_marker),e.on(i.default.delete_marker,function(e){return t._updateMarker(e)}),e.off(i.default.delete_hole),e.on(i.default.delete_hole,function(e){return t._removeHole(e)}),this.on("mousemove",function(t){e.fire(i.default.edit_polygon_mousemove,{layerPoint:t.layerPoint})}),this.on("mouseout",function(){return e.fire(i.default.edit_polygon_mouseout)})},onRemove:function(e){this.off("mousemove"),this.off("mouseout"),e.off(i.default.edit_polygon_mouseover),e.off(i.default.edit_polygon_mouseout),L.Polyline.prototype.onRemove.call(this,e)},addHole:function(e){this._latlngs.push(e),this.redraw()},hasHoles:function(){return this._latlngs.length>1}})},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=L.Polygon.extend({isEmpty:function(){var e=this.getLatLngs();return null==e||e&&0===e.length||"LatLng(0, 0),LatLng(0, 0)"===e.toString()||"LatLng(0, 0)"===e.toString()},_isHiddenData:!0,setLatLngs:function(e){this._isHiddenData&&(this._isHiddenData=!0),L.Polygon.prototype.setLatLngs.call(this,e)},addLatLng:function(e){this._isHiddenData&&(this._isHiddenData=!0),L.Polygon.prototype.addLatLng.call(this,e)},getHoles:function(){var e,t=this.getLatLngs(),o=(e=t,Array.isArray(e)?e:Array.from(e));o[0];return o.slice(1)},clearHoles:function(){this._latlngs=this._latlngs[0]?[this._latlngs[0]]:[],this.redraw()},clear:function(){this.clearHoles(),Array.isArray(this._latlngs)&&void 0!==this._latlngs[0]&&(this._isHiddenData=!0,this.setLatLngs([[0,0],[0,0]]))}})},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(e[r]=o[r])}return e},n=o(4),s=(r=n)&&r.__esModule?r:{default:r};var a=i(s.default.style.drawLine,{className:"dash-line"});t.default=L.Polyline.extend({options:i(s.default.style.drawLine,{className:"dash-line"}),_latlngToMove:void 0,_isHiddenLine:!0,initialize:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[[0,0]],t=arguments[1];return"0,0"===e.toString()&&(this._isHiddenLine=!0,this.setStyle({opacity:0})),L.Polyline.prototype.initialize.call(this,e,t),this},addLatLng:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:a;return this._isHiddenLine&&(this._isHiddenLine=!1,this.setLatLngs([e])),this.setStyle(t),this._latlngToMove&&(this._latlngToMove=void 0),this._latlngs.length>1&&this._latlngs.splice(-1),this._latlngs.push(L.latLng(e)),this.redraw()},update:function(e){return!this._latlngToMove&&this._latlngs.length&&(this._latlngToMove=L.latLng(e),this._latlngs.push(this._latlngToMove)),this._latlngToMove&&(this._latlngToMove.lat=e.lat,this._latlngToMove.lng=e.lng,this.redraw()),this},_addLine:function(e,t,o){o||e.addTo(t)},clear:function(){this.setLatLngs([])}})},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,i=o(2),n=(r=i)&&r.__esModule?r:{default:r};t.default=L.FeatureGroup.extend({_selected:!1,_lastHole:void 0,_lastHoleToDraw:void 0,addHoleGroup:function(){return this._lastHole=new n.default,this._lastHole._isHole=!0,this._lastHole.addTo(this),this._lastHole.position=this.getLength()-1,this._lastHoleToDraw=this._lastHole,this._lastHole},getLength:function(){return this.getLayers().length},resetLastHole:function(){this._lastHole=void 0},setLastHole:function(e){this._lastHole=e},getLastHole:function(){return this._lastHole},remove:function(){this.eachLayer(function(e){for(;e.getLayers().length;)e.removeMarkerAt(0)})},repos:function(e){this.eachLayer(function(t){t.position>=e&&(t.position-=1)})},resetSelection:function(){this.eachLayer(function(e){e.resetSelection()}),this._selected=!1},clear:function(){var e=this;this.eachLayer(function(t){t._markers&&t.clear(),e.removeLayer(t)})}})},,function(e,t,o){"use strict";var r,i=o(5),n=(r=i)&&r.__esModule?r:{default:r};window.LeafletEditor=n.default}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2V2ZW50LW5hbWVzLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYXJrZXItaWNvbnMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21vZGVzL2VkaXQvbWFya2VyLWdyb3VwLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy91dGlscy9tb2JpbGUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL29wdGlvbnMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21hcC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvYmFzZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbW9kZXMvZHJhdy9ldmVudHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3V0aWxzL3ByZWNpc2lvbi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvZXh0ZW5kZWQvQmFzZU1hcmtlckdyb3VwLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tb2Rlcy9lZGl0L21hcmtlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvaG9va3MvY29udHJvbHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2V4dGVuZGVkL01zZ0hlbHBlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvdXRpbHMvYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3ZpZXcvZ3JvdXAuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21vZGVzL2RyYXcvZ3JvdXAuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21vZGVzL2VkaXQvcG9seWdvbi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvZXh0ZW5kZWQvUG9seWdvbi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbW9kZXMvZHJhdy9kYXNoZWQtbGluZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbW9kZXMvZWRpdC9ob2xlc0dyb3VwLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9pbmRleC5tYXBib3guanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJjaGFuZ2VkIiwic3RhcnRfYWRkX25ld19wb2x5Z29uIiwic3RhcnRfYWRkX25ld19ob2xlIiwibWFya2VyX2dyb3VwX2NsZWFyIiwiam9pbl9wYXRoIiwiaG9sZV9jcmVhdGVkIiwicG9seWdvbl9jcmVhdGVkIiwicG9seWdvbl9zZWxlY3RlZCIsImRlbGV0ZV9tYXJrZXIiLCJkZWxldGVfcG9seWdvbiIsIm1hcF9jbGVhcmVkIiwibGFzdF9tYXJrZXJfZGJsY2xpY2tfbW91c2VvdmVyIiwiaG9sZV9kZWxldGVkIiwicG9seWdvbl9kZWxldGVkIiwiZmlyc3RfbWFya2VyX21vdXNlb3ZlciIsInNlbGVjdGVkX21pZGRsZV9tYXJrZXJfbW91c2VvdmVyIiwic2VsZWN0ZWRfbWFya2VyX21vdXNlb3ZlciIsIm5vdF9zZWxlY3RlZF9tYXJrZXJfbW91c2VvdmVyIiwibWFya2VyX21vdXNlb3V0IiwiZHJhZ19tYXJrZXIiLCJkcmFnZW5kX21hcmtlciIsIm1hcmtlcl9kcmFnc3RhcnQiLCJlZGl0X3BvbHlnb25fbW91c2Vtb3ZlIiwiZWRpdF9wb2x5Z29uX21vdXNlb3ZlciIsImVkaXRfcG9seWdvbl9tb3VzZW91dCIsImRlbGV0ZV9ob2xlIiwiYmVmb3JlX2FkZF9tYXJrZXIiLCJhZGRfbWFya2VyIiwiYWRkX2hvbGVfbWFya2VyIiwibWFya2VyX2dyb3VwX3NlbGVjdCIsInZpZXdfcG9seWdvbl9tb3VzZW1vdmUiLCJ2aWV3X3BvbHlnb25fbW91c2VvdXQiLCJfbW9iaWxlIiwic2l6ZSIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsInRvTG93ZXJDYXNlIiwiaXNNb2JpbGVCcm93c2VyIiwiZmlyc3RJY29uIiwiTCIsImRpdkljb24iLCJjbGFzc05hbWUiLCJpY29uU2l6ZSIsImljb24iLCJkcmFnSWNvbiIsIm1pZGRsZUljb24iLCJtaWRkbGVTZWxlY3RlZEljb24iLCJpY29ucyIsIk1hcmtlckdyb3VwIiwiQmFzZU1Hcm91cCIsImV4dGVuZCIsIl9pc0hvbGUiLCJfcG9zaXRpb24iLCJvcHRpb25zIiwibUljb24iLCJtSG92ZXJJY29uIiwiaW5pdGlhbGl6ZSIsImxheWVycyIsIkxheWVyR3JvdXAiLCJ0aGlzIiwiX21hcmtlcnMiLCJvbkFkZCIsIm1hcCIsIl9tYXAiLCJvblJlbW92ZSIsIm9mZiIsIl91cGRhdGVERUxpbmUiLCJsYXRsbmciLCJkZUxpbmUiLCJnZXRERUxpbmUiLCJfZmlyc3RNYXJrZXIiLCJ1cGRhdGUiLCJkYXNoZWRFZGl0TGluZUdyb3VwIiwiaGFzTWluaW1hbE1hcmtlcnNMZW5ndGgiLCJnZXRMYXllcnMiLCJmaWx0ZXIiLCJpdGVtIiwiX2ljb24iLCJjbGFzc0xpc3QiLCJjb250YWlucyIsImxlbmd0aCIsInNldFNlbGVjdGVkIiwibWFya2VyIiwiaGFzRmlyc3RNYXJrZXIiLCJzZXRTZWxlY3RlZE1hcmtlciIsImdldExhc3QiLCJfb2xkU2VsZWN0ZWRNYXJrZXIiLCJfc2VsZWN0ZWRNYXJrZXIiLCJnZXRGaXJzdCIsIl9oYXNGaXJzdEljb24iLCJyZXN0b3JlIiwibGF5ZXIiLCJfdGhpcyIsIl9sYXRsbmdzIiwiTGF0TG5nIiwic2V0QWxsIiwiX2xheWVyJF9sYXRsbmdzIiwiX2hvbGVzIiwic2xpY2UiLCJzZXRBbGxIb2xlcyIsImZvckVhY2giLCJsbCIsIl9hZGQiLCJwb3NpdGlvbiIsIl90aGlzMiIsImFyZ3VtZW50cyIsInVuZGVmaW5lZCIsImlzTW9kZSIsImFkZE1hcmtlciIsImFkZExhdExuZyIsIm9uIiwiZSIsImNsZWFyIiwiX21Hcm91cCIsIl9sYXN0TWFya2VyIiwiZmlyZSIsIkVWRU5UUyIsInNldE1pZGRsZU1hcmtlciIsInNldE1pZGRsZU1hcmtlcnMiLCJzZXQiLCJfdGhpczMiLCJsYXRsbmdzIiwiX3RoaXM0IiwiaG9sZSIsImxhc3RIR3JvdXAiLCJnZXRFSE1hcmtlcnNHcm91cCIsImFkZEhvbGVHcm91cCIsIl9lYWNoIiwiX2JpbmRMaW5lRXZlbnRzIiwid2luZG93IiwiYSIsInZlbmRvciIsIm9wZXJhIiwiY2hlY2siLCJ0ZXN0Iiwic3Vic3RyIiwiZm9yY2VUb0RyYXciLCJub3RpZnlDbGlja01hcmtlckRlbGV0ZVBvbHlnb24iLCJ0cmFuc2xhdGlvbnMiLCJyZW1vdmVQb2x5Z29uIiwicmVtb3ZlUG9pbnQiLCJzdHlsZSIsInZpZXciLCJvcGFjaXR5IiwiZmlsbE9wYWNpdHkiLCJkYXNoQXJyYXkiLCJjbGlja2FibGUiLCJmaWxsIiwic3Ryb2tlIiwiY29sb3IiLCJ3ZWlnaHQiLCJkcmF3Iiwic3RhcnREcmF3IiwiZHJhd0xpbmUiLCJmaWxsQ29sb3IiLCJtYXJrZXJJY29uIiwibWFya2VySG92ZXJJY29uIiwiZXJyb3JMaW5lU3R5bGUiLCJzbW9vdGhGYWN0b3IiLCJwcmV2aWV3RXJyb3JMaW5lU3R5bGUiLCJ0ZXh0IiwiYWNjZXB0RGVsZXRpb24iLCJjbGlja1RvRWRpdCIsImNsaWNrVG9BZGROZXdFZGdlcyIsImNsaWNrVG9EcmF3SW5uZXJFZGdlcyIsImNsaWNrVG9Kb2luRWRnZXMiLCJjbGlja1RvUmVtb3ZlQWxsU2VsZWN0ZWRFZGdlcyIsImNsaWNrVG9TZWxlY3RFZGdlcyIsImRibGNsaWNrVG9Kb2luRWRnZXMiLCJjbGlja1RvU3RhcnREcmF3UG9seWdvbk9uTWFwIiwiZGVsZXRlU2VsZWN0ZWRFZGdlcyIsInJlamVjdENoYW5nZXMiLCJqc29uV2FzTG9hZGVkIiwiY2hlY2tKc29uIiwibG9hZEpzb24iLCJmb3JnZXRUb1NhdmUiLCJ6b29tIiwid29ybGRDb3B5SnVtcCIsImdlb0pTT05BcmVhIiwiTWFwIiwic2V0TGF5ZXJzIiwidmlld0dyb3VwIiwiVmlld0dyb3VwIiwiZWRpdEdyb3VwIiwiRHJhd0dyb3VwIiwiZWRpdFBvbHlnb24iLCJFZGl0UG9seWdvbiIsImVkaXRNYXJrZXJzR3JvdXAiLCJEYXNoZWRFZGl0TGluZUdyb3VwIiwiZWRpdEhvbGVNYXJrZXJzR3JvdXAiLCJIb2xlc0dyb3VwIiwiYWRkVG8iLCJyZW1vdmVMYXllcnMiLCJyZW1vdmVMYXllciIsImlkIiwiX2V4dGVuZHMiLCJvcHRzIiwiY29udHJvbHMiLCJ6b29tQ29udHJvbCIsIndoZW5SZWFkeSIsInJlbW92ZUNvbnRyb2wiLCJtc2dIZWxwZXIiLCJnZXRWR3JvdXAiLCJnZXRFR3JvdXAiLCJnZXRFUG9seWdvbiIsImdldEVNYXJrZXJzR3JvdXAiLCJzZXRTZWxlY3RlZE1Hcm91cCIsImdyb3VwIiwiX3NlbGVjdGVkTUdyb3VwIiwiY2xlYXJTZWxlY3RlZE1Hcm91cCIsImdldFNlbGVjdGVkTUdyb3VwIiwic2VsZWN0ZWRNR3JvdXAiLCJnZXRDdXJyZW50R2VvSlNPTiIsImNvb3JkcyIsImVhY2hMYXllciIsIl9nZXRTZWxlY3RlZFZMYXllciIsInB1c2giLCJ0b0dlb0pTT04iLCJnZW9tZXRyeSIsImNvb3JkaW5hdGVzIiwiZUNvb3JkaW5hdGVzIiwiR2VvSlNPTiIsImdldEZlYXR1cmUiLCJ0eXBlIiwiaW5jbHVkZSIsIkJhc2VNYXAiLCJhZGRJbml0SG9vayIsIkNvbnRyb2xzSG9vayIsIl9wcmVjaXNpb24iLCJoYXNTZWxlY3RlZFZMYXllciIsIl9zZWxlY3RlZFZMYXllciIsIl9tb2RlVHlwZSIsIl9hY3RpdmVFZGl0TGF5ZXIiLCJfZXJyb3JUaW1lb3V0IiwiX3NldE1vZGVUeXBlIiwiX2NsZWFyRXZlbnRzIiwiX3NldE1vZGUiLCJjb25zb2xlIiwiZXJyb3IiLCJfX21vZGVfZHJhdyIsIl9iaW5kRHJhd0V2ZW50cyIsIl9jbGVhck1hcCIsInNhdmVTdGF0ZSIsImlzRW1wdHkiLCJfc2V0RVBvbHlnb25fVG9fVkdyb3VwIiwiX2FkZEVQb2x5Z29uX1RvX1ZHcm91cCIsImZlYXR1cmVzIiwicmVkdWNlIiwiZGF0YSIsImZlYXR1cmUiLCJjb25jYXQiLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJnZW9KU09OIiwiYXJlYUZ1bmMiLCJ0dXJmIiwiYXJlYSIsIndhcm4iLCJzdW0iLCJfcHJvcHMkcHJlY0xhdExuZyIsInByZWNMYXRMbmciLCJ2TGF5ZXIiLCJlUG9seWdvbkxheWVyIiwic2VsZWN0ZWRMYXllciIsImVBcmVhIiwicHJlY2lzaW9uR2VvSlNPTiIsInZBcmVhIiwiaEFyZWEiLCJwcmVjaXNpb24iLCJnZXRTZWxlY3RlZE1hcmtlciIsImNsZWFyU2VsZWN0ZWRNYXJrZXIiLCJFcnJvciIsInBvbHlnb24iLCJjbGVhckxheWVycyIsImNyZWF0ZUVkaXRQb2x5Z29uIiwianNvbiIsImdlb0pzb24iLCJnZXRMYXRMbmdzIiwidkdyb3VwIiwiYWRkTGF5ZXIiLCJfZml0VkJvdW5kcyIsIl9zZXRTZWxlY3RlZFZMYXllciIsIl9jbGVhclNlbGVjdGVkVkxheWVyIiwiX2hpZGVTZWxlY3RlZFZMYXllciIsImJyaW5nVG9CYWNrIiwiX3Nob3dTZWxlY3RlZFZMYXllciIsIl9wYXRoIiwidmlzaWJpbGl0eSIsImVQb2x5Z29uIiwic2VsZWN0ZWRWTGF5ZXIiLCJyZWRyYXciLCJfY29udmVydFRvRWRpdCIsInBvaW50c0FycmF5IiwiaXNNaWRkbGUiLCJnZXRMYXRMbmciLCJob2xlcyIsImdldEhvbGVzIiwic2V0TGF0TG5ncyIsInNldFN0eWxlIiwiX2NvbnRhaW5lciIsInJlbW92ZSIsImFkZCIsImZpdEJvdW5kcyIsImdldEJvdW5kcyIsInBhZGRpbmciLCJfdW5CaW5kRHJhd0V2ZW50cyIsIl9tb3ZlRVBvbHlnb25PblRvcCIsImVsZW1lbnQiLCJwYXJlbnRFbGVtZW50IiwiaW5zZXJ0QWRqYWNlbnRFbGVtZW50IiwiX2dldEdlb21ldHJ5IiwiRHJhd0V2ZW50cyIsIl9tYXJrZXJJY29ucyIsIl9ldmVudE5hbWVzIiwib3JpZ2luYWxFdmVudCIsImNsaWVudFgiLCJjbGllbnRZIiwidGFyZ2V0IiwiTWFya2VyIiwiZU1hcmtlcnNHcm91cCIsIl9hZGRNYXJrZXIiLCJzdGFydERyYXdTdHlsZSIsImZpcnN0TWFya2VyIiwiZWhNYXJrZXJzR3JvdXAiLCJsYXN0SG9sZSIsImdldExhc3RIb2xlIiwicmVzZXRTZWxlY3Rpb24iLCJtR3JvdXAiLCJyZXNldExhc3RIb2xlIiwic2VsZWN0Iiwib25DbGljayIsIm1zZyIsImxheWVyUG9pbnQiLCJfcmVmIiwiX29wZW5Qb3B1cCIsIm51bWJlciIsInByZWMiLCJhcnJheVN0cmluZ3MiLCJzcGxpdCIsInJzbHQiLCJfcHJlYyIsInRvUHJlY2lzaW9uIiwiTnVtYmVyIiwiX2pzb24kZ2VvbWV0cnkiLCJBcnJheSIsImlzQXJyYXkiLCJvdXRsZXQiLCJlZGdlIiwiaW5jbHVkZXMiLCJFdmVudGVkIiwiX3NlbGVjdGVkIiwiX3Bvc2l0aW9uSGFzaCIsIl9sYXN0UG9zaXRpb24iLCJtb3ZlIiwibWFya2VycyIsInJlbW92ZU1hcmtlciIsInNwbGljZSIsImNiIiwibWFya2VyQXQiLCJsYXN0TWFya2VyIiwiYiIsInByZXZNYXJrZXIiLCJfcHJldiIsIm5leHRNYXJrZXIiLCJfbmV4dCIsIm5leHRuZXh0TWFya2VyIiwicmVtb3ZlTWFya2VyQXQiLCJfY2hhbmdlUG9zIiwiX21hcmtlciIsImhhc1N0YXJ0TWFya2VyIiwic29tZSIsIl9yZWNhbGNQb3NpdGlvbnMiLCJfZ2V0TWlkZGxlTGF0TG5nIiwiX3JlY2FsY1JlbGF0aW9ucyIsImlkcyIsIl9pZHMiLCJfZGVsZXRlRXZlbnRzIiwiX2xlYWZsZXRfZXZlbnRzIiwidmlld3Jlc2V0X2lkeCIsInpvb21hbmltX2lkeCIsIm1hcmtlcjEiLCJtYXJrZXIyIiwicDEiLCJwcm9qZWN0IiwicDIiLCJ1bnByb2plY3QiLCJfZGl2aWRlQnkiLCJjaGFuZ2VQb3MiLCJfdGhpczUiLCJfbGF5ZXJzIiwic29ydCIsInNldExhc3RIb2xlIiwiZW5hYmxlRHJhZyIsInNlbGVjdEljb25Jbkdyb3VwIiwiaXNTZWxlY3RlZCIsImRpc2FibGVEcmFnIiwidW5TZWxlY3RJY29uSW5Hcm91cCIsImluZGV4T2YiLCJfZHJhZ2dhYmxlIiwiX29sZExhdExuZ1N0YXRlIiwiZHJhZ2dhYmxlIiwiX2lzRmlyc3QiLCJkcmFnZ2luZyIsImVuYWJsZSIsImRpc2FibGUiLCJuZXh0IiwicHJldiIsImNoYW5nZVByZXZOZXh0UG9zIiwicHJldkxhdExuZyIsIm5leHRMYXRMbmciLCJzZXRMYXRMbmciLCJfcmVzZXRJY29uIiwiaWMiLCJzZXRJY29uIiwiX2FkZEljb25DbGFzcyIsIkRvbVV0aWwiLCJhZGRDbGFzcyIsIl9yZW1vdmVJY29uQ2xhc3MiLCJyZW1vdmVDbGFzcyIsImhhc0NsYXNzIiwiX3NldERyYWdJY29uIiwiaXNQbGFpbiIsIl9vbmNlQ2xpY2siLCJvbmNlIiwiaXNBY2NlcHRlZFRvRGVsZXRlIiwiaXNTZWxlY3RlZEluR3JvdXAiLCJuZWVkQWNjZXB0VG9EZWxldGUiLCJfZGlzYWxsb3dUb0V4ZWN1dGVFdmVudCIsIl9iaW5kRXZlbnRzIiwiX2xhdGxuZyIsIl9fZHJhZ2dpbmciLCJoaWRlIiwiX2VuYWJsZWQiLCJzdG9wUHJvcGFnYXRpb24iLCJzZWxlY3RlZE1hcmtlciIsInNlbGVjdGVkTWFya2VyRHJhZ2dpbmciLCJfb25EcmFnIiwiX29uRHJhZ0VuZCIsInNldFRpbWVvdXQiLCJyZXNldFN0eWxlIiwicmVzZXRJY29uIiwiX3NlbGVjdEljb25Jbkdyb3VwIiwidG91Y2hab29tIiwiZG91YmxlQ2xpY2tab29tIiwiYm94Wm9vbSIsImtleWJvYXJkIiwiTXNnSGVscGVyIiwiZGVmYXVsdE1zZyIsImFkZENvbnRyb2wiLCJDb250cm9sIiwiX29uUmVzaXplRXZlbnQiLCJfdGl0bGVDb250YWluZXIiLCJVdGlsIiwic2V0T3B0aW9ucyIsImNvcm5lciIsImNvbnRhaW5lciIsIl9jb250cm9sQ29ybmVycyIsIl9jb250cm9sQ29udGFpbmVyIiwiYXBwZW5kQ2hpbGQiLCJfc2V0Q29udGFpbmVyIiwiY29udHJvbCIsIl91bkJpbmRFdmVudHMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJib2R5IiwicmVtb3ZlQ2hpbGQiLCJjb250cm9sQ29ybmVyIiwiY2hpbGRyZW4iLCJjaGlsZCIsIndpZHRoIiwiY2xpZW50V2lkdGgiLCJsZWZ0IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImFkZEV2ZW50TGlzdGVuZXIiLCJfdGl0bGVQb3NDb250YWluZXIiLCJpbm5lckhUTUwiLCJnZXRPZmZzZXQiLCJlbCIsIl94IiwiX3kiLCJpc0Z1bGxzY3JlZW4iLCJpc05hTiIsIm9mZnNldExlZnQiLCJvZmZzZXRUb3AiLCJvZmZzZXRQYXJlbnQiLCJ5IiwieCIsInBvaW50Iiwib2Zmc2V0IiwiUG9pbnQiLCJsYXllclBvaW50VG9Db250YWluZXJQb2ludCIsImxhdExuZ1RvQ29udGFpbmVyUG9pbnQiLCJ0b3AiLCJnZXRCdG5Db250YWluZXIiLCJnZXRCdG5BdCIsInBvcyIsImRpc2FibGVCdG4iLCJlbmFibGVCdG4iLCJmcm9tIiwidG8iLCJmdW5jIiwiRmVhdHVyZUdyb3VwIiwibVZpZXdTdHlsZSIsIkRvbUV2ZW50IiwiRWRpdFBsb3lnb24iLCJFeHRlbmRlZFBvbHlnb24iLCJfb2xkRSIsIl9rIiwiUG9seWdvbiIsIl91cGRhdGVNYXJrZXIiLCJfcmVtb3ZlSG9sZSIsImhvbGVQb3NpdGlvbiIsIl9sZWFmbGV0X2lkIiwicmVwb3MiLCJQb2x5bGluZSIsImFkZEhvbGUiLCJoYXNIb2xlcyIsImxhdExuZ3MiLCJ0b1N0cmluZyIsIl9pc0hpZGRlbkRhdGEiLCJfZ2V0TGF0TG5ncyIsIl9nZXRMYXRMbmdzMiIsImNsZWFySG9sZXMiLCJfb3B0aW9ucyIsIl9sYXRsbmdUb01vdmUiLCJfaXNIaWRkZW5MaW5lIiwibGF0TG5nIiwibGF0IiwibG5nIiwiX2FkZExpbmUiLCJsaW5lIiwiaXNMYXN0TWFya2VyIiwiX21hcmtlckdyb3VwIiwiX2xhc3RIb2xlIiwiX2xhc3RIb2xlVG9EcmF3IiwiZ2V0TGVuZ3RoIiwiTGVhZmxldEVkaXRvciJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsRUFBQSxHQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxPQUFBRixFQUFBRSxHQUFBQyxRQUdBLElBQUFDLEVBQUFKLEVBQUFFLEdBQUEsQ0FDQUcsRUFBQUgsRUFDQUksR0FBQSxFQUNBSCxRQUFBLElBVUEsT0FOQUksRUFBQUwsR0FBQU0sS0FBQUosRUFBQUQsUUFBQUMsSUFBQUQsUUFBQUYsR0FHQUcsRUFBQUUsR0FBQSxFQUdBRixFQUFBRCxRQUtBRixFQUFBUSxFQUFBRixFQUdBTixFQUFBUyxFQUFBVixFQUdBQyxFQUFBVSxFQUFBLFNBQUFSLEVBQUFTLEVBQUFDLEdBQ0FaLEVBQUFhLEVBQUFYLEVBQUFTLElBQ0FHLE9BQUFDLGVBQUFiLEVBQUFTLEVBQUEsQ0FBMENLLFlBQUEsRUFBQUMsSUFBQUwsS0FLMUNaLEVBQUFrQixFQUFBLFNBQUFoQixHQUNBLG9CQUFBaUIsZUFBQUMsYUFDQU4sT0FBQUMsZUFBQWIsRUFBQWlCLE9BQUFDLFlBQUEsQ0FBd0RDLE1BQUEsV0FFeERQLE9BQUFDLGVBQUFiLEVBQUEsY0FBaURtQixPQUFBLEtBUWpEckIsRUFBQXNCLEVBQUEsU0FBQUQsRUFBQUUsR0FFQSxHQURBLEVBQUFBLElBQUFGLEVBQUFyQixFQUFBcUIsSUFDQSxFQUFBRSxFQUFBLE9BQUFGLEVBQ0EsS0FBQUUsR0FBQSxpQkFBQUYsUUFBQUcsV0FBQSxPQUFBSCxFQUNBLElBQUFJLEVBQUFYLE9BQUFZLE9BQUEsTUFHQSxHQUZBMUIsRUFBQWtCLEVBQUFPLEdBQ0FYLE9BQUFDLGVBQUFVLEVBQUEsV0FBeUNULFlBQUEsRUFBQUssVUFDekMsRUFBQUUsR0FBQSxpQkFBQUYsRUFBQSxRQUFB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LFdBYWpDLE9BUkFuRSxLQUFLeWQsVUFBWSxJQUFJcGUsVUFDckJXLEtBQUt5ZCxVQUFVamUsU0FBVSxFQUN6QlEsS0FBS3lkLFVBQVVyVixNQUFNcEksTUFFckJBLEtBQUt5ZCxVQUFVN2EsU0FBVzVDLEtBQUsyZCxZQUFjLEVBRTdDM2QsS0FBSzBkLGdCQUFrQjFkLEtBQUt5ZCxVQUVyQnpkLEtBQUt5ZCxXQUVkRSxVQWZtQyxXQWdCakMsT0FBTzNkLEtBQUtlLFlBQVlNLFFBRTFCdVAsY0FsQm1DLFdBbUJqQzVRLEtBQUt5ZCxlQUFZMWEsR0FFbkI0UixZQXJCbUMsU0FxQnRCM1MsR0FDWGhDLEtBQUt5ZCxVQUFZemIsR0FFbkJ5TyxZQXhCbUMsV0F5QmpDLE9BQU96USxLQUFLeWQsV0FFZHpPLE9BM0JtQyxXQTRCakNoUCxLQUFLMkosVUFBVSxTQUFDM0YsR0FDZCxLQUFPQSxFQUFLakQsWUFBWU0sUUFDdEIyQyxFQUFLa1AsZUFBZSxNQUkxQm1KLE1BbENtQyxTQWtDNUJ6WixHQUNMNUMsS0FBSzJKLFVBQVUsU0FBQzNILEdBQ1ZBLEVBQU1ZLFVBQVlBLElBQ3BCWixFQUFNWSxVQUFZLE1BSXhCOE4sZUF6Q21DLFdBMENqQzFRLEtBQUsySixVQUFVLFNBQUMzSCxHQUNkQSxFQUFNME8sbUJBRVIxUSxLQUFLa1MsV0FBWSxHQUduQjdPLE1BaERtQyxXQWdEMUIsSUFBQXBCLEVBQUFqQyxLQUNQQSxLQUFLMkosVUFBVSxTQUFBM0gsR0FDVEEsRUFBTS9CLFVBQ1IrQixFQUFNcUIsUUFHUnBCLEVBQUtxRyxZQUFZdEcsdUNDeER2QixNQUFBNUIsRUFBQW5HLEVBQUEsdUNBRUFxSyxPQUFPc1osY0FBZ0JwVyIsImZpbGUiOiJkaXN0L2pzL2luZGV4Lm1hcGJveC5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAyMSk7XG4iLCJleHBvcnQgZGVmYXVsdCB7XG4gIGNoYW5nZWQ6ICdlZGl0b3I6cG9seWdvbl9jaGFuZ2VkJyxcblxuICBzdGFydF9hZGRfbmV3X3BvbHlnb246ICdlZGl0b3I6c3RhcnRfYWRkX25ld19wb2x5Z29uJyxcbiAgc3RhcnRfYWRkX25ld19ob2xlOiAnZWRpdG9yOnN0YXJ0X2FkZF9uZXdfaG9sZScsXG4gIG1hcmtlcl9ncm91cF9jbGVhcjogJ2VkaXRvcjptYXJrZXJfZ3JvdXBfY2xlYXInLFxuICBqb2luX3BhdGg6ICdlZGl0b3I6X19qb2luX3BhdGgnLFxuICBob2xlX2NyZWF0ZWQ6ICdlZGl0b3I6cG9seWdvbjpob2xlX2NyZWF0ZWQnLFxuICBwb2x5Z29uX2NyZWF0ZWQ6ICdlZGl0b3I6cG9seWdvbjpjcmVhdGVkJyxcbiAgcG9seWdvbl9zZWxlY3RlZDogJ2VkaXRvcjpwb2x5Z29uOnNlbGVjdGVkJyxcbiAgZGVsZXRlX21hcmtlcjogJ2VkaXRvcjpkZWxldGVfbWFya2VyJyxcbiAgZGVsZXRlX3BvbHlnb246ICdlZGl0b3I6ZGVsZXRlX3BvbHlnb24nLFxuXG4gIG1hcF9jbGVhcmVkOiAnZWRpdG9yOm1hcF9jbGVhcmVkJyxcblxuICBsYXN0X21hcmtlcl9kYmxjbGlja19tb3VzZW92ZXI6ICdlZGl0b3I6bGFzdF9tYXJrZXJfZGJsY2xpY2tfbW91c2VvdmVyJyxcblxuICBob2xlX2RlbGV0ZWQ6ICdlZGl0b3I6cG9seWdvbjpob2xlX2RlbGV0ZWQnLFxuICBwb2x5Z29uX2RlbGV0ZWQ6ICdlZGl0b3I6cG9seWdvbjpkZWxldGVkJyxcblxuICBmaXJzdF9tYXJrZXJfbW91c2VvdmVyOiAnZWRpdG9yOmZpcnN0X21hcmtlcl9tb3VzZW92ZXInLFxuXG4gIHNlbGVjdGVkX21pZGRsZV9tYXJrZXJfbW91c2VvdmVyOiAnZWRpdG9yOnNlbGVjdGVkX21pZGRsZV9tYXJrZXJfbW91c2VvdmVyJyxcblxuICBzZWxlY3RlZF9tYXJrZXJfbW91c2VvdmVyOiAnZWRpdG9yOnNlbGVjdGVkX21hcmtlcl9tb3VzZW92ZXInLFxuICBub3Rfc2VsZWN0ZWRfbWFya2VyX21vdXNlb3ZlcjogJ2VkaXRvcjpub3Rfc2VsZWN0ZWRfbWFya2VyX21vdXNlb3ZlcicsXG5cbiAgbWFya2VyX21vdXNlb3V0OiAnZWRpdG9yOm1hcmtlcl9tb3VzZW91dCcsXG5cbiAgZHJhZ19tYXJrZXI6ICdlZGl0b3I6ZHJhZ19tYXJrZXInLFxuXG4gIGRyYWdlbmRfbWFya2VyOiAnZWRpdG9yOmRyYWdlbmRfbWFya2VyJyxcbiAgbWFya2VyX2RyYWdzdGFydDogJ2VkaXRvcjptYXJrZXJfZHJhZ3N0YXJ0JyxcblxuICBlZGl0X3BvbHlnb25fbW91c2Vtb3ZlOiAnZWRpdG9yOmVkaXRfcG9seWdvbl9tb3VzZW1vdmUnLFxuICBlZGl0X3BvbHlnb25fbW91c2VvdmVyOiAnZWRpdG9yOmVkaXRfcG9seWdvbl9tb3VzZW92ZXInLFxuICBlZGl0X3BvbHlnb25fbW91c2VvdXQ6ICdlZGl0b3I6ZWRpdF9wb2x5Z29uX21vdXNlb3V0JyxcblxuICBkZWxldGVfaG9sZTogJ2VkaXRvcjpkZWxldGVfaG9sZScsXG5cbiAgYmVmb3JlX2FkZF9tYXJrZXI6ICdlZGl0b3I6YmVmb3JlX2FkZF9tYXJrZXInLFxuICBhZGRfbWFya2VyOiAnZWRpdG9yOmFkZF9tYXJrZXInLFxuICBhZGRfaG9sZV9tYXJrZXI6ICdlZGl0b3I6YWRkX2hvbGVfbWFya2VyJyxcbiAgbWFya2VyX2dyb3VwX3NlbGVjdDogJ2VkaXRvcjptYXJrZXJfZ3JvdXBfc2VsZWN0JyxcblxuICB2aWV3X3BvbHlnb25fbW91c2Vtb3ZlOiAnZWRpdG9yOnZpZXdfcG9seWdvbl9tb3VzZW1vdmUnLFxuXG4gIHZpZXdfcG9seWdvbl9tb3VzZW91dDogJ2VkaXRvcjp2aWV3X3BvbHlnb25fbW91c2VvdXQnXG59XG4iLCJpbXBvcnQgbSBmcm9tICcuL3V0aWxzL21vYmlsZS5qcyc7XG5cbnZhciBzaXplID0gMTtcbnZhciB1c2VyQWdlbnQgPSBuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCk7XG5cbmlmIChtLmlzTW9iaWxlQnJvd3NlcigpKSB7XG4gIHNpemUgPSAyO1xufVxuXG5leHBvcnQgY29uc3QgZmlyc3RJY29uID0gTC5kaXZJY29uKHtcbiAgY2xhc3NOYW1lOiBcIm0tZWRpdG9yLWRpdi1pY29uLWZpcnN0XCIsXG4gIGljb25TaXplOiBbMTAgKiBzaXplLCAxMCAqIHNpemVdXG59KTtcblxuZXhwb3J0IGNvbnN0IGljb24gPSBMLmRpdkljb24oe1xuICBjbGFzc05hbWU6IFwibS1lZGl0b3ItZGl2LWljb25cIixcbiAgaWNvblNpemU6IFsxMCAqIHNpemUsIDEwICogc2l6ZV1cbn0pO1xuXG5leHBvcnQgY29uc3QgZHJhZ0ljb24gPSBMLmRpdkljb24oe1xuICBjbGFzc05hbWU6IFwibS1lZGl0b3ItZGl2LWljb24tZHJhZ1wiLFxuICBpY29uU2l6ZTogWzEwICogc2l6ZSAqIDMsIDEwICogc2l6ZSAqIDNdXG59KTtcblxuZXhwb3J0IGNvbnN0IG1pZGRsZUljb24gPSBMLmRpdkljb24oe1xuICBjbGFzc05hbWU6IFwibS1lZGl0b3ItbWlkZGxlLWRpdi1pY29uXCIsXG4gIGljb25TaXplOiBbMTAgKiBzaXplLCAxMCAqIHNpemVdXG59KTtcblxuZXhwb3J0IGNvbnN0IG1pZGRsZVNlbGVjdGVkSWNvbiA9IEwuZGl2SWNvbih7XG4gIGNsYXNzTmFtZTogXCJtLWVkaXRvci1taWRkbGUtZGl2LWljb24gZ3JvdXAtc2VsZWN0ZWRcIixcbiAgaWNvblNpemU6IFsxMCAqIHNpemUsIDEwICogc2l6ZV1cbn0pO1xuIiwiaW1wb3J0IEJhc2VNR3JvdXAgZnJvbSAnLi4vLi4vZXh0ZW5kZWQvQmFzZU1hcmtlckdyb3VwLmpzJztcblxuaW1wb3J0IEVWRU5UUyBmcm9tICcuLi8uLi9ldmVudC1uYW1lcy5qcyc7XG5cbmltcG9ydCAqIGFzIGljb25zIGZyb20gJy4uLy4uL21hcmtlci1pY29ucy5qcyc7XG5cbkwuTWFya2VyR3JvdXAgPSBCYXNlTUdyb3VwLmV4dGVuZCh7XG4gIF9pc0hvbGU6IGZhbHNlLFxuICBfcG9zaXRpb246IG51bGwsXG4gIG9wdGlvbnM6IHtcbiAgICBtSWNvbjogbnVsbCxcbiAgICBtSG92ZXJJY29uOiBudWxsXG4gIH0sXG4gIGluaXRpYWxpemUgKGxheWVycykge1xuICAgIEwuTGF5ZXJHcm91cC5wcm90b3R5cGUuaW5pdGlhbGl6ZS5jYWxsKHRoaXMsIGxheWVycyk7XG5cbiAgICB0aGlzLl9tYXJrZXJzID0gW107XG4gIH0sXG4gIG9uQWRkIChtYXApIHtcbiAgICB0aGlzLl9tYXAgPSBtYXA7XG4gIH0sXG4gIG9uUmVtb3ZlICgpIHtcbiAgICB0aGlzLl9tYXAub2ZmKCdtb3VzZW1vdmUnKTtcbiAgfSxcbiAgX3VwZGF0ZURFTGluZSAobGF0bG5nKSB7XG4gICAgY29uc3QgZGVMaW5lID0gdGhpcy5nZXRERUxpbmUoKTtcbiAgICBpZiAodGhpcy5fZmlyc3RNYXJrZXIpIHtcbiAgICAgIGRlTGluZS51cGRhdGUobGF0bG5nKTtcbiAgICB9XG4gICAgcmV0dXJuIGRlTGluZTtcbiAgfSxcbiAgZ2V0REVMaW5lICgpIHtcbiAgICByZXR1cm4gdGhpcy5fbWFwLmRhc2hlZEVkaXRMaW5lR3JvdXA7XG4gIH0sXG4gIGhhc01pbmltYWxNYXJrZXJzTGVuZ3RoKCkge1xuICAgIHJldHVybiB0aGlzLmdldExheWVycygpLmZpbHRlcigoaXRlbSkgPT4ge1xuICAgICAgcmV0dXJuIGl0ZW0uX2ljb24uY2xhc3NMaXN0LmNvbnRhaW5zKCdtLWVkaXRvci1kaXYtaWNvbicpICYmICFpdGVtLl9pY29uLmNsYXNzTGlzdC5jb250YWlucygnbS1lZGl0b3ItbWlkZGxlLWRpdi1pY29uJyk7XG4gICAgfSkubGVuZ3RoIDw9IDM7XG4gIH0sXG4gIHNldFNlbGVjdGVkIChtYXJrZXIpIHtcbiAgICB2YXIgbWFwID0gdGhpcy5fbWFwO1xuXG4gICAgaWYgKHRoaXMuaGFzRmlyc3RNYXJrZXIoKSkge1xuICAgICAgbWFwLnNldFNlbGVjdGVkTWFya2VyKHRoaXMuZ2V0TGFzdCgpKTtcbiAgICAgIG1hcC5fb2xkU2VsZWN0ZWRNYXJrZXIgPSBtYXAuX3NlbGVjdGVkTWFya2VyO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIG1hcC5fb2xkU2VsZWN0ZWRNYXJrZXIgPSBtYXAuX3NlbGVjdGVkTWFya2VyO1xuICAgIG1hcC5zZXRTZWxlY3RlZE1hcmtlcihtYXJrZXIpO1xuICB9LFxuICBnZXRGaXJzdCAoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2ZpcnN0TWFya2VyO1xuICB9LFxuICBnZXRMYXN0ICgpIHtcbiAgICBpZiAodGhpcy5oYXNGaXJzdE1hcmtlcigpKSB7XG4gICAgICB2YXIgbGF5ZXJzID0gdGhpcy5nZXRMYXllcnMoKTtcbiAgICAgIHJldHVybiBsYXllcnNbbGF5ZXJzLmxlbmd0aCAtIDFdO1xuICAgIH1cbiAgfSxcbiAgaGFzRmlyc3RNYXJrZXIgKCkge1xuICAgIHJldHVybiAhISh0aGlzLmdldEZpcnN0KCkgJiYgdGhpcy5nZXRGaXJzdCgpLl9oYXNGaXJzdEljb24oKSk7XG4gIH0sXG4gIHJlc3RvcmUgKGxheWVyKSB7XG4gICAgaWYgKGxheWVyLl9sYXRsbmdzWzBdWzBdIGluc3RhbmNlb2YgTC5MYXRMbmcpIHtcbiAgICAgIGlmIChsYXllci5fbGF0bG5ncykge1xuICAgICAgICB0aGlzLnNldEFsbChsYXllci5fbGF0bG5nc1swXSk7XG4gICAgICB9XG4gICAgICBpZiAobGF5ZXIuX2xhdGxuZ3NbMV0pIHtcbiAgICAgICAgY29uc3QgW18sIC4uLl9ob2xlc10gPSBsYXllci5fbGF0bG5ncztcblxuICAgICAgICB0aGlzLnNldEFsbEhvbGVzKF9ob2xlcyk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChsYXllci5fbGF0bG5nc1swXVswXVswXSBpbnN0YW5jZW9mIEwuTGF0TG5nKSB7XG4gICAgICBsYXllci5fbGF0bG5ncy5mb3JFYWNoKGxsID0+IHtcbiAgICAgICAgdGhpcy5yZXN0b3JlKHsgX2xhdGxuZ3M6IGxsIH0pXG4gICAgICB9KVxuICAgIH1cblxuICB9LFxuICBfYWRkKGxhdGxuZywgcG9zaXRpb24sIG9wdGlvbnMgPSB7fSkge1xuXG4gICAgaWYgKHRoaXMuX21hcC5pc01vZGUoJ2RyYXcnKSkge1xuICAgICAgaWYgKCF0aGlzLl9maXJzdE1hcmtlcikge1xuICAgICAgICBvcHRpb25zLmljb24gPSBpY29ucy5maXJzdEljb247XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIG1hcmtlciA9IHRoaXMuYWRkTWFya2VyKGxhdGxuZywgcG9zaXRpb24sIG9wdGlvbnMpO1xuXG4gICAgdGhpcy5nZXRERUxpbmUoKS5hZGRMYXRMbmcobGF0bG5nKTtcblxuICAgIGlmICh0aGlzLmdldEZpcnN0KCkuX2hhc0ZpcnN0SWNvbigpKSB7XG4gICAgICB0aGlzLl9tYXAub24oJ21vdXNlbW92ZScsIChlKSA9PiB7XG4gICAgICAgIHRoaXMuX3VwZGF0ZURFTGluZShlLmxhdGxuZyk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5nZXRERUxpbmUoKS5jbGVhcigpO1xuICAgIH1cblxuICAgIGlmIChtYXJrZXIuX21Hcm91cC5nZXRMYXllcnMoKS5sZW5ndGggPiAyKSB7XG4gICAgICBpZiAobWFya2VyLl9tR3JvdXAuX2ZpcnN0TWFya2VyLl9oYXNGaXJzdEljb24oKSAmJiBtYXJrZXIgPT09IG1hcmtlci5fbUdyb3VwLl9sYXN0TWFya2VyKSB7XG4gICAgICAgIHRoaXMuX21hcC5maXJlKEVWRU5UUy5sYXN0X21hcmtlcl9kYmxjbGlja19tb3VzZW92ZXIsIHttYXJrZXI6IG1hcmtlcn0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBtYXJrZXI7XG4gIH0sXG4gIHNldE1pZGRsZU1hcmtlciAocG9zaXRpb24pIHtcbiAgICB0aGlzLmFkZE1hcmtlcihwb3NpdGlvbiwgbnVsbCwge2ljb246IGljb25zLm1pZGRsZVNlbGVjdGVkSWNvbn0pO1xuICB9LFxuICBzZXRNaWRkbGVNYXJrZXJzIChwb3NpdGlvbikge1xuICAgIHRoaXMuc2V0TWlkZGxlTWFya2VyKHBvc2l0aW9uKTtcbiAgICB0aGlzLnNldE1pZGRsZU1hcmtlcihwb3NpdGlvbiArIDIpO1xuICB9LFxuICBzZXQgKGxhdGxuZywgcG9zaXRpb24sIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gdGhpcy5fYWRkKGxhdGxuZywgcG9zaXRpb24sIG9wdGlvbnMpO1xuICB9LFxuICBzZXRBbGwgKGxhdGxuZ3MgPSBbXSkge1xuICAgIGxhdGxuZ3MuZm9yRWFjaCgobGF0bG5nLCBwb3NpdGlvbikgPT4ge1xuICAgICAgdGhpcy5zZXQobGF0bG5nLCBwb3NpdGlvbik7XG4gICAgfSk7XG5cbiAgICBpZiAobGF0bG5ncy5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLmdldEZpcnN0KCkuZmlyZSgnY2xpY2snKTtcbiAgICB9XG4gIH0sXG4gIHNldEFsbEhvbGVzIChob2xlcyA9IFtdKSB7XG4gICAgaG9sZXMuZm9yRWFjaCgoaG9sZSkgPT4ge1xuICAgICAgdmFyIGxhc3RIR3JvdXAgPSB0aGlzLl9tYXAuZ2V0RUhNYXJrZXJzR3JvdXAoKS5hZGRIb2xlR3JvdXAoKTtcblxuICAgICAgaG9sZS5fZWFjaCgobGF0bG5nLCBwb3NpdGlvbikgPT4ge1xuICAgICAgICBsYXN0SEdyb3VwLnNldChsYXRsbmcsIHBvc2l0aW9uKTtcbiAgICAgIH0pO1xuXG4gICAgICBsYXN0SEdyb3VwLmdldEZpcnN0KCkuZmlyZSgnY2xpY2snKTtcbiAgICB9KTtcbiAgfSxcbiAgX2JpbmRMaW5lRXZlbnRzOiB1bmRlZmluZWRcbn0pO1xuXG5jb25zdCBNYXJrZXJHcm91cCA9IEwuTWFya2VyR3JvdXA7XG5leHBvcnQgZGVmYXVsdCBNYXJrZXJHcm91cDtcbiIsImV4cG9ydCBkZWZhdWx0IHtcbiAgaXNNb2JpbGVCcm93c2VyIChuYXZpZ2F0b3IgPSB3aW5kb3cubmF2aWdhdG9yKSB7XG4gICAgY29uc3QgYSA9IG5hdmlnYXRvci51c2VyQWdlbnQgfHwgbmF2aWdhdG9yLnZlbmRvciB8fCB3aW5kb3cub3BlcmE7XG4gICAgdmFyIGNoZWNrID0gZmFsc2U7XG5cbiAgICBpZiAoLyhhbmRyb2lkfGJiXFxkK3xtZWVnbykuK21vYmlsZXxhdmFudGdvfGJhZGFcXC98YmxhY2tiZXJyeXxibGF6ZXJ8Y29tcGFsfGVsYWluZXxmZW5uZWN8aGlwdG9wfGllbW9iaWxlfGlwKGhvbmV8b2QpfGlyaXN8a2luZGxlfGxnZSB8bWFlbW98bWlkcHxtbXB8bW9iaWxlLitmaXJlZm94fG5ldGZyb250fG9wZXJhIG0ob2J8aW4paXxwYWxtKCBvcyk/fHBob25lfHAoaXhpfHJlKVxcL3xwbHVja2VyfHBvY2tldHxwc3B8c2VyaWVzKDR8NikwfHN5bWJpYW58dHJlb3x1cFxcLihicm93c2VyfGxpbmspfHZvZGFmb25lfHdhcHx3aW5kb3dzIGNlfHhkYXx4aWlub3xhbmRyb2lkfGlwYWR8cGxheWJvb2t8c2lsay9pLnRlc3QoYSkgfHwgLzEyMDd8NjMxMHw2NTkwfDNnc298NHRocHw1MFsxLTZdaXw3NzBzfDgwMnN8YSB3YXxhYmFjfGFjKGVyfG9vfHNcXC0pfGFpKGtvfHJuKXxhbChhdnxjYXxjbyl8YW1vaXxhbihleHxueXx5dyl8YXB0dXxhcihjaHxnbyl8YXModGV8dXMpfGF0dHd8YXUoZGl8XFwtbXxyIHxzICl8YXZhbnxiZShja3xsbHxucSl8YmkobGJ8cmQpfGJsKGFjfGF6KXxicihlfHYpd3xidW1ifGJ3XFwtKG58dSl8YzU1XFwvfGNhcGl8Y2N3YXxjZG1cXC18Y2VsbHxjaHRtfGNsZGN8Y21kXFwtfGNvKG1wfG5kKXxjcmF3fGRhKGl0fGxsfG5nKXxkYnRlfGRjXFwtc3xkZXZpfGRpY2F8ZG1vYnxkbyhjfHApb3xkcygxMnxcXC1kKXxlbCg0OXxhaSl8ZW0obDJ8dWwpfGVyKGljfGswKXxlc2w4fGV6KFs0LTddMHxvc3x3YXx6ZSl8ZmV0Y3xmbHkoXFwtfF8pfGcxIHV8ZzU2MHxnZW5lfGdmXFwtNXxnXFwtbW98Z28oXFwud3xvZCl8Z3IoYWR8dW4pfGhhaWV8aGNpdHxoZFxcLShtfHB8dCl8aGVpXFwtfGhpKHB0fHRhKXxocCggaXxpcCl8aHNcXC1jfGh0KGMoXFwtfCB8X3xhfGd8cHxzfHQpfHRwKXxodShhd3x0Yyl8aVxcLSgyMHxnb3xtYSl8aTIzMHxpYWMoIHxcXC18XFwvKXxpYnJvfGlkZWF8aWcwMXxpa29tfGltMWt8aW5ub3xpcGFxfGlyaXN8amEodHx2KWF8amJyb3xqZW11fGppZ3N8a2RkaXxrZWppfGtndCggfFxcLyl8a2xvbnxrcHQgfGt3Y1xcLXxreW8oY3xrKXxsZShub3x4aSl8bGcoIGd8XFwvKGt8bHx1KXw1MHw1NHxcXC1bYS13XSl8bGlid3xseW54fG0xXFwtd3xtM2dhfG01MFxcL3xtYSh0ZXx1aXx4byl8bWMoMDF8MjF8Y2EpfG1cXC1jcnxtZShyY3xyaSl8bWkobzh8b2F8dHMpfG1tZWZ8bW8oMDF8MDJ8Yml8ZGV8ZG98dChcXC18IHxvfHYpfHp6KXxtdCg1MHxwMXx2ICl8bXdicHxteXdhfG4xMFswLTJdfG4yMFsyLTNdfG4zMCgwfDIpfG41MCgwfDJ8NSl8bjcoMCgwfDEpfDEwKXxuZSgoY3xtKVxcLXxvbnx0Znx3Znx3Z3x3dCl8bm9rKDZ8aSl8bnpwaHxvMmltfG9wKHRpfHd2KXxvcmFufG93ZzF8cDgwMHxwYW4oYXxkfHQpfHBkeGd8cGcoMTN8XFwtKFsxLThdfGMpKXxwaGlsfHBpcmV8cGwoYXl8dWMpfHBuXFwtMnxwbyhja3xydHxzZSl8cHJveHxwc2lvfHB0XFwtZ3xxYVxcLWF8cWMoMDd8MTJ8MjF8MzJ8NjB8XFwtWzItN118aVxcLSl8cXRla3xyMzgwfHI2MDB8cmFrc3xyaW05fHJvKHZlfHpvKXxzNTVcXC98c2EoZ2V8bWF8bW18bXN8bnl8dmEpfHNjKDAxfGhcXC18b298cFxcLSl8c2RrXFwvfHNlKGMoXFwtfDB8MSl8NDd8bWN8bmR8cmkpfHNnaFxcLXxzaGFyfHNpZShcXC18bSl8c2tcXC0wfHNsKDQ1fGlkKXxzbShhbHxhcnxiM3xpdHx0NSl8c28oZnR8bnkpfHNwKDAxfGhcXC18dlxcLXx2ICl8c3koMDF8bWIpfHQyKDE4fDUwKXx0NigwMHwxMHwxOCl8dGEoZ3R8bGspfHRjbFxcLXx0ZGdcXC18dGVsKGl8bSl8dGltXFwtfHRcXC1tb3x0byhwbHxzaCl8dHMoNzB8bVxcLXxtM3xtNSl8dHhcXC05fHVwKFxcLmJ8ZzF8c2kpfHV0c3R8djQwMHx2NzUwfHZlcml8dmkocmd8dGUpfHZrKDQwfDVbMC0zXXxcXC12KXx2bTQwfHZvZGF8dnVsY3x2eCg1Mnw1M3w2MHw2MXw3MHw4MHw4MXw4M3w4NXw5OCl8dzNjKFxcLXwgKXx3ZWJjfHdoaXR8d2koZyB8bmN8bncpfHdtbGJ8d29udXx4NzAwfHlhc1xcLXx5b3VyfHpldG98enRlXFwtL2kudGVzdChhLnN1YnN0cigwLCA0KSkpIHtcbiAgICAgIGNoZWNrID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gY2hlY2s7XG4gIH1cbn07XG4iLCJjb25zdCB2aWV3Q29sb3IgPSAnIzBhYWVjOSc7XG5jb25zdCBkcmF3Q29sb3IgPSAnIzAwY2QwMCc7XG5jb25zdCB3ZWlnaHQgPSAzO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGZvcmNlVG9EcmF3OiB0cnVlLFxuICBub3RpZnlDbGlja01hcmtlckRlbGV0ZVBvbHlnb246IGZhbHNlLFxuICB0cmFuc2xhdGlvbnM6IHtcbiAgICByZW1vdmVQb2x5Z29uOiAncmVtb3ZlIHBvbHlnb24nLFxuICAgIHJlbW92ZVBvaW50OiAncmVtb3ZlIHBvaW50J1xuICB9LFxuICBzdHlsZToge1xuICAgIHZpZXc6IHtcbiAgICAgIG9wYWNpdHk6IDAuNSxcbiAgICAgIGZpbGxPcGFjaXR5OiAwLjIsXG4gICAgICBkYXNoQXJyYXk6IG51bGwsXG4gICAgICBjbGlja2FibGU6IGZhbHNlLFxuICAgICAgZmlsbDogdHJ1ZSxcbiAgICAgIHN0cm9rZTogdHJ1ZSxcbiAgICAgIGNvbG9yOiB2aWV3Q29sb3IsXG4gICAgICB3ZWlnaHQ6IHdlaWdodFxuICAgIH0sXG4gICAgZHJhdzoge1xuICAgICAgb3BhY2l0eTogMC41LFxuICAgICAgZmlsbE9wYWNpdHk6IDAuMixcbiAgICAgIGRhc2hBcnJheTogJzUsIDEwJyxcbiAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgIGZpbGw6IHRydWUsXG4gICAgICBzdHJva2U6IHRydWUsXG4gICAgICBjb2xvcjogZHJhd0NvbG9yLFxuICAgICAgd2VpZ2h0OiB3ZWlnaHRcbiAgICB9LFxuICAgIHN0YXJ0RHJhdzoge30sXG4gICAgZHJhd0xpbmU6IHtcbiAgICAgIG9wYWNpdHk6IDAuNyxcbiAgICAgIGZpbGw6IGZhbHNlLFxuICAgICAgZmlsbENvbG9yOiBkcmF3Q29sb3IsXG4gICAgICBjb2xvcjogZHJhd0NvbG9yLFxuICAgICAgd2VpZ2h0OiB3ZWlnaHQsXG4gICAgICBkYXNoQXJyYXk6ICc1LCAxMCcsXG4gICAgICBzdHJva2U6IHRydWUsXG4gICAgICBjbGlja2FibGU6IGZhbHNlXG4gICAgfVxuICB9LFxuICBtYXJrZXJJY29uOiB1bmRlZmluZWQsXG4gIG1hcmtlckhvdmVySWNvbjogdW5kZWZpbmVkLFxuICBlcnJvckxpbmVTdHlsZToge1xuICAgIGNvbG9yOiAncmVkJyxcbiAgICB3ZWlnaHQ6IDMsXG4gICAgb3BhY2l0eTogMSxcbiAgICBzbW9vdGhGYWN0b3I6IDFcbiAgfSxcbiAgcHJldmlld0Vycm9yTGluZVN0eWxlOiB7XG4gICAgY29sb3I6ICdyZWQnLFxuICAgIHdlaWdodDogMyxcbiAgICBvcGFjaXR5OiAxLFxuICAgIHNtb290aEZhY3RvcjogMSxcbiAgICBkYXNoQXJyYXk6ICc1LCAxMCdcbiAgfSxcbiAgdGV4dDoge1xuICAgIHJlbW92ZVBvbHlnb246ICdSZW1vdmUgcG9seWdvbicsXG4gICAgYWNjZXB0RGVsZXRpb246ICdDbGljayBhZ2FpbiB0byByZW1vdmUgcG9seWdvbicsXG4gICAgY2xpY2tUb0VkaXQ6ICdjbGljayB0byBlZGl0JyxcbiAgICBjbGlja1RvQWRkTmV3RWRnZXM6ICc8ZGl2PmNsaWNrJm5ic3A7Jm5ic3A7PGRpdiBjbGFzcz1cXCdtLWVkaXRvci1taWRkbGUtZGl2LWljb24gc3RhdGljIGdyb3VwLXNlbGVjdGVkXFwnPjwvZGl2PiZuYnNwOyZuYnNwO3RvIGFkZCBuZXcgZWRnZXM8L2Rpdj4nLFxuICAgIGNsaWNrVG9EcmF3SW5uZXJFZGdlczogJ2NsaWNrIHRvIGRyYXcgaW5uZXIgZWRnZXMnLFxuICAgIGNsaWNrVG9Kb2luRWRnZXM6ICdjbGljayB0byBqb2luIGVkZ2VzJyxcbiAgICBjbGlja1RvUmVtb3ZlQWxsU2VsZWN0ZWRFZGdlczogJzxkaXY+Y2xpY2smbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDs8ZGl2IGNsYXNzPVxcJ20tZWRpdG9yLWRpdi1pY29uIHN0YXRpYyBncm91cC1zZWxlY3RlZFxcJz48L2Rpdj4mbmJzcDsmbmJzcDt0byByZW1vdmUgZWRnZSZuYnNwOyZuYnNwO29yPGJyPmNsaWNrJm5ic3A7Jm5ic3A7PGkgY2xhc3M9XFwnZmEgZmEtdHJhc2hcXCc+PC9pPiZuYnNwOyZuYnNwO3RvIHJlbW92ZSBhbGwgc2VsZWN0ZWQgZWRnZXM8L2Rpdj4nLFxuICAgIGNsaWNrVG9TZWxlY3RFZGdlczogJzxkaXY+Y2xpY2smbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDs8ZGl2IGNsYXNzPVxcJ20tZWRpdG9yLWRpdi1pY29uIHN0YXRpY1xcJz48L2Rpdj4mbmJzcDsvJm5ic3A7PGRpdiBjbGFzcz1cXCdtLWVkaXRvci1taWRkbGUtZGl2LWljb24gc3RhdGljXFwnPjwvZGl2PiZuYnNwOyZuYnNwO3RvIHNlbGVjdCBlZGdlczwvZGl2PicsXG4gICAgZGJsY2xpY2tUb0pvaW5FZGdlczogJ2RvdWJsZSBjbGljayB0byBqb2luIGVkZ2VzJyxcbiAgICBjbGlja1RvU3RhcnREcmF3UG9seWdvbk9uTWFwOiAnY2xpY2sgdG8gc3RhcnQgZHJhdyBwb2x5Z29uIG9uIG1hcCcsXG4gICAgZGVsZXRlU2VsZWN0ZWRFZGdlczogJ2RlbGV0ZWQgc2VsZWN0ZWQgZWRnZXMnLFxuICAgIHJlamVjdENoYW5nZXM6ICdyZWplY3QgY2hhbmdlcycsXG4gICAganNvbldhc0xvYWRlZDogJ0pTT04gd2FzIGxvYWRlZCcsXG4gICAgY2hlY2tKc29uOiAnY2hlY2sgSlNPTicsXG4gICAgbG9hZEpzb246ICdsb2FkIEdlb0pTT04nLFxuICAgIGZvcmdldFRvU2F2ZTogJ1NhdmUgY2hhbmdlcyBieSBwcmVzc2luZyBvdXRzaWRlIG9mIHBvbHlnb24nLFxuICAgIHpvb206ICdab29tJ1xuICB9LFxuICB3b3JsZENvcHlKdW1wOiB0cnVlLFxuICBnZW9KU09OQXJlYTogbnVsbFxufTtcbiIsImltcG9ydCBCYXNlTWFwIGZyb20gJy4vYmFzZS5qcyc7XG5pbXBvcnQgQ29udHJvbHNIb29rIGZyb20gJy4vaG9va3MvY29udHJvbHMuanMnO1xuXG5pbXBvcnQgb3B0cyBmcm9tICcuL29wdGlvbnMuanMnO1xuXG5pbXBvcnQgJy4vdXRpbHMvYXJyYXkuanMnO1xuaW1wb3J0IFZpZXdHcm91cCBmcm9tICcuL3ZpZXcvZ3JvdXAuanMnO1xuaW1wb3J0IERyYXdHcm91cCBmcm9tICcuL21vZGVzL2RyYXcvZ3JvdXAuanMnO1xuaW1wb3J0IEVkaXRQb2x5Z29uIGZyb20gJy4vbW9kZXMvZWRpdC9wb2x5Z29uLmpzJztcbmltcG9ydCBNYXJrZXJHcm91cCBmcm9tICcuL21vZGVzL2VkaXQvbWFya2VyLWdyb3VwLmpzJztcbmltcG9ydCBEYXNoZWRFZGl0TGluZUdyb3VwIGZyb20gJy4vbW9kZXMvZHJhdy9kYXNoZWQtbGluZS5qcyc7XG5pbXBvcnQgSG9sZXNHcm91cCBmcm9tICcuL21vZGVzL2VkaXQvaG9sZXNHcm91cC5qcyc7XG5cbmxldCBNYXAgPSBMLk1hcC5leHRlbmQoe1xuICBzZXRMYXllcnMoKSB7XG4gICAgdGhpcy52aWV3R3JvdXAgPSBuZXcgVmlld0dyb3VwKCk7XG4gICAgdGhpcy5lZGl0R3JvdXAgPSBuZXcgRHJhd0dyb3VwKFtdKTtcbiAgICB0aGlzLmVkaXRQb2x5Z29uID0gbmV3IEVkaXRQb2x5Z29uKCk7XG4gICAgdGhpcy5lZGl0TWFya2Vyc0dyb3VwID0gbmV3IE1hcmtlckdyb3VwKFtdKTtcbiAgICB0aGlzLmRhc2hlZEVkaXRMaW5lR3JvdXAgPSBuZXcgRGFzaGVkRWRpdExpbmVHcm91cCgpO1xuICAgIHRoaXMuZWRpdEhvbGVNYXJrZXJzR3JvdXAgPSBuZXcgSG9sZXNHcm91cChbXSk7XG5cbiAgICB0aGlzLnZpZXdHcm91cC5hZGRUbyh0aGlzKTtcbiAgICB0aGlzLmVkaXRHcm91cC5hZGRUbyh0aGlzKTtcbiAgICB0aGlzLmVkaXRQb2x5Z29uLmFkZFRvKHRoaXMpO1xuICAgIHRoaXMuZWRpdE1hcmtlcnNHcm91cC5hZGRUbyh0aGlzKTtcbiAgICB0aGlzLmRhc2hlZEVkaXRMaW5lR3JvdXAuYWRkVG8odGhpcyk7XG4gICAgdGhpcy5lZGl0SG9sZU1hcmtlcnNHcm91cC5hZGRUbyh0aGlzKTtcbiAgfSxcblxuICByZW1vdmVMYXllcnMoKSB7XG4gICAgdGhpcy5yZW1vdmVMYXllcih0aGlzLnZpZXdHcm91cCk7XG4gICAgdGhpcy5yZW1vdmVMYXllcih0aGlzLmVkaXRHcm91cCk7XG4gICAgdGhpcy5yZW1vdmVMYXllcih0aGlzLmVkaXRQb2x5Z29uKTtcbiAgICB0aGlzLnJlbW92ZUxheWVyKHRoaXMuZWRpdE1hcmtlcnNHcm91cCk7XG4gICAgdGhpcy5yZW1vdmVMYXllcih0aGlzLmRhc2hlZEVkaXRMaW5lR3JvdXApO1xuICAgIHRoaXMucmVtb3ZlTGF5ZXIodGhpcy5lZGl0SG9sZU1hcmtlcnNHcm91cCk7XG4gIH0sXG5cbiAgaW5pdGlhbGl6ZShpZCwgb3B0aW9ucykge1xuICAgIHRoaXMudmlld0dyb3VwID0gbnVsbDtcblxuICAgIHRoaXMuZWRpdEdyb3VwID0gbnVsbDtcblxuICAgIHRoaXMuZWRpdFBvbHlnb24gPSBudWxsO1xuXG4gICAgdGhpcy5lZGl0TWFya2Vyc0dyb3VwID0gbnVsbDtcblxuICAgIHRoaXMuZGFzaGVkRWRpdExpbmVHcm91cCA9IG51bGw7XG5cbiAgICB0aGlzLmVkaXRIb2xlTWFya2Vyc0dyb3VwID0gbnVsbDtcblxuICAgIGlmIChvcHRpb25zLnRleHQpIHtcbiAgICAgIE9iamVjdC5hc3NpZ24ob3B0cy50ZXh0LCBvcHRpb25zLnRleHQpO1xuICAgICAgZGVsZXRlIG9wdGlvbnMudGV4dDtcbiAgICB9XG5cbiAgICBsZXQgY29udHJvbHMgPSBvcHRpb25zLmNvbnRyb2xzO1xuICAgIGlmIChjb250cm9scykge1xuICAgICAgaWYgKGNvbnRyb2xzLnpvb20gPT09IGZhbHNlKSB7XG4gICAgICAgIG9wdGlvbnMuem9vbUNvbnRyb2wgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAob3B0aW9ucy5zdHlsZSkge1xuICAgICAgaWYgKG9wdGlvbnMuc3R5bGUuZHJhdykge1xuICAgICAgICBPYmplY3QuYXNzaWduKG9wdHMuc3R5bGUuZHJhdywgb3B0aW9ucy5zdHlsZS5kcmF3KTtcbiAgICAgIH1cbiAgICAgIGlmIChvcHRpb25zLnN0eWxlLnZpZXcpIHtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihvcHRzLnN0eWxlLnZpZXcsIG9wdGlvbnMuc3R5bGUudmlldyk7XG4gICAgICB9XG4gICAgICBpZiAob3B0aW9ucy5zdHlsZS5zdGFydERyYXcpIHtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihvcHRzLnN0eWxlLnN0YXJ0RHJhdywgb3B0aW9ucy5zdHlsZS5zdGFydERyYXcpO1xuICAgICAgfVxuICAgICAgaWYgKG9wdGlvbnMuc3R5bGUuZHJhd0xpbmUpIHtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihvcHRzLnN0eWxlLmRyYXdMaW5lLCBvcHRpb25zLnN0eWxlLmRyYXdMaW5lKTtcbiAgICAgIH1cbiAgICAgIGRlbGV0ZSBvcHRpb25zLnN0eWxlO1xuICAgIH1cblxuICAgIE9iamVjdC5hc3NpZ24odGhpcy5vcHRpb25zLCBvcHRzLCBvcHRpb25zKTtcblxuICAgIEwuTWFwLnByb3RvdHlwZS5pbml0aWFsaXplLmNhbGwodGhpcywgaWQsIG9wdGlvbnMpO1xuXG4gICAgdGhpcy53aGVuUmVhZHkoKCkgPT4ge1xuICAgICAgdGhpcy5zZXRMYXllcnMoKTtcbiAgICB9KTtcblxuICAgIGlmICh0aGlzLm9wdGlvbnMuZm9yY2VUb0RyYXcpIHtcbiAgICAgIHRoaXMubW9kZSgnZHJhdycpO1xuICAgIH1cblxuICAgIHRoaXMub24oJ3VubG9hZCcsICgpID0+IHtcbiAgICAgIHRoaXMucmVtb3ZlQ29udHJvbCh0aGlzLm1zZ0hlbHBlcik7XG4gICAgICB0aGlzLnJlbW92ZUxheWVycygpO1xuICAgIH0pO1xuICB9LFxuXG4gIGdldFZHcm91cCgpIHtcbiAgICByZXR1cm4gdGhpcy52aWV3R3JvdXA7XG4gIH0sXG5cbiAgZ2V0RUdyb3VwKCkge1xuICAgIHJldHVybiB0aGlzLmVkaXRHcm91cDtcbiAgfSxcblxuICBnZXRFUG9seWdvbigpIHtcbiAgICByZXR1cm4gdGhpcy5lZGl0UG9seWdvbjtcbiAgfSxcblxuICBnZXRFTWFya2Vyc0dyb3VwKCkge1xuICAgIHJldHVybiB0aGlzLmVkaXRNYXJrZXJzR3JvdXA7XG4gIH0sXG5cbiAgZ2V0REVMaW5lKCkge1xuICAgIHJldHVybiB0aGlzLmRhc2hlZEVkaXRMaW5lR3JvdXA7XG4gIH0sXG5cbiAgZ2V0RUhNYXJrZXJzR3JvdXAoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWRpdEhvbGVNYXJrZXJzR3JvdXA7XG4gIH0sXG5cbiAgc2V0U2VsZWN0ZWRNR3JvdXAoZ3JvdXApIHtcbiAgICBkZWJ1Z2dlcjtcbiAgICB0aGlzLl9zZWxlY3RlZE1Hcm91cCA9IGdyb3VwO1xuICB9LFxuXG4gIGNsZWFyU2VsZWN0ZWRNR3JvdXAoKSB7XG4gICAgdGhpcy5fc2VsZWN0ZWRNR3JvdXAgPSBudWxsO1xuICB9LFxuXG4gIGdldFNlbGVjdGVkTUdyb3VwKCkge1xuICAgIGNvbnN0IHNlbGVjdGVkTUdyb3VwID0gdGhpcy5fc2VsZWN0ZWRNR3JvdXA7XG4gICAgcmV0dXJuIHNlbGVjdGVkTUdyb3VwICYmIHNlbGVjdGVkTUdyb3VwLl9tYXAgPyBzZWxlY3RlZE1Hcm91cCA6IG51bGw7XG4gIH0sXG5cbiAgZ2V0Q3VycmVudEdlb0pTT04oKSB7XG4gICAgY29uc3QgY29vcmRzID0gW107XG5cbiAgICB0aGlzLmdldFZHcm91cCgpLmVhY2hMYXllcihsYXllciA9PiB7XG4gICAgICBpZiAobGF5ZXIgIT09IHRoaXMuX2dldFNlbGVjdGVkVkxheWVyKCkpIHtcbiAgICAgICAgY29vcmRzLnB1c2gobGF5ZXIudG9HZW9KU09OKCkuZ2VvbWV0cnkuY29vcmRpbmF0ZXMpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgY29uc3QgZUNvb3JkaW5hdGVzID0gdGhpcy5nZXRFUG9seWdvbigpLnRvR2VvSlNPTigpLmdlb21ldHJ5LmNvb3JkaW5hdGVzO1xuXG4gICAgaWYgKGVDb29yZGluYXRlcy5sZW5ndGgpIHtcbiAgICAgIGNvb3Jkcy5wdXNoKGVDb29yZGluYXRlcyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIEwuR2VvSlNPTi5nZXRGZWF0dXJlKHRoaXMsIHtcbiAgICAgIHR5cGU6ICdNdWx0aVBvbHlnb24nLFxuICAgICAgY29vcmRpbmF0ZXM6IGNvb3Jkc1xuICAgIH0pO1xuICB9XG59KTtcblxuTWFwLmluY2x1ZGUoQmFzZU1hcCk7XG5NYXAuYWRkSW5pdEhvb2soQ29udHJvbHNIb29rKTtcblxuZXhwb3J0IGRlZmF1bHQgTWFwO1xuXG4iLCJpbXBvcnQgRHJhd0V2ZW50cyBmcm9tICcuL21vZGVzL2RyYXcvZXZlbnRzLmpzJztcblxuaW1wb3J0IHtcbiAgcHJlY2lzaW9uLFxuICBwcmVjaXNpb25HZW9KU09OXG59IGZyb20gJy4vdXRpbHMvcHJlY2lzaW9uLmpzJztcblxuaW1wb3J0IEVWRU5UUyBmcm9tICcuL2V2ZW50LW5hbWVzLmpzJztcblxuaW1wb3J0IE1hcmtlckdyb3VwIGZyb20gJy4vbW9kZXMvZWRpdC9tYXJrZXItZ3JvdXAuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBPYmplY3QuYXNzaWduKHtcblxuICBoYXNTZWxlY3RlZFZMYXllcigpIHtcbiAgICByZXR1cm4gdGhpcy5fZ2V0U2VsZWN0ZWRWTGF5ZXIoKSAhPT0gdW5kZWZpbmVkO1xuICB9LFxuXG4gIF9zZWxlY3RlZE1hcmtlcjogdW5kZWZpbmVkLFxuICBfc2VsZWN0ZWRWTGF5ZXI6IHVuZGVmaW5lZCxcbiAgX29sZFNlbGVjdGVkTWFya2VyOiB1bmRlZmluZWQsXG4gIF9tb2RlVHlwZTogJ2RyYXcnLFxuICBfYWN0aXZlRWRpdExheWVyOiB1bmRlZmluZWQsXG4gIF9lcnJvclRpbWVvdXQ6IG51bGwsXG5cbiAgbW9kZSh0eXBlKSB7XG4gICAgaWYgKHRoaXNbYF9fbW9kZV8ke3R5cGV9YF0pIHtcbiAgICAgIHRoaXMuX3NldE1vZGVUeXBlKHR5cGUpO1xuXG4gICAgICB0aGlzLl9jbGVhckV2ZW50cygpO1xuXG5cbiAgICAgIHR5cGUgPSB0aGlzW2BfX21vZGVfJHt0eXBlfWBdKCkgfHwgdHlwZTtcblxuICAgICAgdGhpcy5fc2V0TW9kZSh0eXBlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcihgTW9kZSBcIiR7dHlwZX1cIiBpcyBub3QgZGVmaW5lZGApO1xuICAgIH1cbiAgfSxcbiAgaXNNb2RlKHR5cGUpIHtcbiAgICByZXR1cm4gdHlwZSA9PT0gdGhpcy5fbW9kZVR5cGU7XG4gIH0sXG4gIF9fbW9kZV9kcmF3KCkge1xuICAgIHRoaXMuX2JpbmREcmF3RXZlbnRzKCk7XG4gIH0sXG4gIGNsZWFyKCkge1xuICAgIHRoaXMuX2NsZWFyRXZlbnRzKCk7XG4gICAgdGhpcy5fY2xlYXJNYXAoKTtcblxuICAgIHRoaXMuZmlyZShFVkVOVFMubWFwX2NsZWFyZWQpO1xuICB9LFxuICAvKipcbiAgICpcbiAgICogVGhlIG1haW4gaWRlYSBpcyB0byBzYXZlIEVQb2x5Z29uIHRvIFZHcm91cCB3aGVuOlxuICAgKiAxKSB1c2VyIGFkZCBuZXcgcG9seWdvblxuICAgKiAyKSB3aGVuIHVzZXIgZWRpdCBwb2x5Z29uXG4gICAqXG4gICAqICovXG4gIHNhdmVTdGF0ZSgpIHtcblxuICAgIGxldCBlUG9seWdvbiA9IHRoaXMuZ2V0RVBvbHlnb24oKTtcblxuICAgIGlmICghZVBvbHlnb24uaXNFbXB0eSgpKSB7XG4gICAgICBpZiAodGhpcy5fZ2V0U2VsZWN0ZWRWTGF5ZXIoKSkge1xuICAgICAgICB0aGlzLl9zZXRFUG9seWdvbl9Ub19WR3JvdXAoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX2FkZEVQb2x5Z29uX1RvX1ZHcm91cCgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMuY2xlYXIoKTtcbiAgICB0aGlzLm1vZGUoJ2RyYXcnKTtcblxuICAgIGNvbnN0IHJzbHQgPSB0aGlzLmdldFZHcm91cCgpLnRvR2VvSlNPTigpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6ICdNdWx0aVBvbHlnb24nLFxuICAgICAgY29vcmRpbmF0ZXM6IHJzbHQuZmVhdHVyZXMucmVkdWNlKChkYXRhLCBmZWF0dXJlKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIFsuLi5kYXRhLCBmZWF0dXJlLmdlb21ldHJ5LmNvb3JkaW5hdGVzXTtcbiAgICAgICAgfSwgW10pXG4gICAgfTtcbiAgfSxcbiAgZ2VvSlNPTkFyZWEoZ2VvSlNPTikge1xuICAgIGxldCBhcmVhRnVuYyA9IHRoaXMub3B0aW9ucy5nZW9KU09OQXJlYSB8fCB3aW5kb3cudHVyZiAmJiB3aW5kb3cudHVyZi5hcmVhO1xuXG4gICAgaWYgKCFhcmVhRnVuYykge1xuICAgICAgY29uc29sZS53YXJuKCdXYXJuaW5nOiBJbXBsZW1lbnQgXCJnZW9KU09OQXJlYVwiIGZ1bmN0aW9uICggbGVhZmxldC1lZGl0b3IgKScpO1xuICAgIH1cblxuICAgIHJldHVybiAoYXJlYUZ1bmMpID8gYXJlYUZ1bmMoZ2VvSlNPTikgOiAwO1xuICB9LFxuICAvKipcbiAgICogR2V0IGVkaXRhYmxlIGFyZWEgd2l0aCBwcmVjaXNpb24gb2YgbGF0LCBsbmdcbiAgICogRGVmYXVsdCBwcmVjaXNpb24gaXMgNiAocHJlY0xhdExuZylcbiAgICpcbiAgICogKi9cbiAgYXJlYShwcm9wcyA9IHt9KSB7XG5cbiAgICBsZXQge3ByZWNMYXRMbmcgPSA2fSA9IHByb3BzO1xuICAgIGxldCB2TGF5ZXIgPSB0aGlzLmdldFZHcm91cCgpO1xuICAgIGxldCBlUG9seWdvbkxheWVyID0gdGhpcy5nZXRFUG9seWdvbigpO1xuICAgIGxldCBzZWxlY3RlZExheWVyID0gdGhpcy5fZ2V0U2VsZWN0ZWRWTGF5ZXIoKTtcblxuICAgIGxldCBzdW0gPSAwO1xuXG4gICAgbGV0IGVBcmVhID0gKCFlUG9seWdvbkxheWVyLmlzRW1wdHkoKSkgPyB0aGlzLmdlb0pTT05BcmVhKHByZWNpc2lvbkdlb0pTT04oZVBvbHlnb25MYXllci50b0dlb0pTT04oKSwgcHJlY0xhdExuZykpIDogMDtcbiAgICBsZXQgdkFyZWEgPSB0aGlzLmdlb0pTT05BcmVhKHByZWNpc2lvbkdlb0pTT04odkxheWVyLnRvR2VvSlNPTigpLCBwcmVjTGF0TG5nKSk7XG5cbiAgICBsZXQgaEFyZWEgPSAoc2VsZWN0ZWRMYXllcikgPyB0aGlzLmdlb0pTT05BcmVhKHByZWNpc2lvbkdlb0pTT04oc2VsZWN0ZWRMYXllci50b0dlb0pTT04oKSwgcHJlY0xhdExuZykpIDogMDtcblxuICAgIGlmICh0aGlzLmhhc1NlbGVjdGVkVkxheWVyKCkgJiYgZUFyZWEgPiAwKSB7XG4gICAgICB2QXJlYSAtPSBoQXJlYTtcbiAgICB9XG5cbiAgICBzdW0gPSAoZUFyZWEgPiAwKSA/ICh2QXJlYSArIGVBcmVhKSA6IHZBcmVhO1xuXG4gICAgcmV0dXJuIHByZWNpc2lvbihzdW0sIHByZWNMYXRMbmcpO1xuICB9LFxuICBnZXRTZWxlY3RlZE1hcmtlcigpIHtcbiAgICByZXR1cm4gdGhpcy5fc2VsZWN0ZWRNYXJrZXI7XG4gIH0sXG4gIGNsZWFyU2VsZWN0ZWRNYXJrZXIoKSB7XG4gICAgdGhpcy5fc2VsZWN0ZWRNYXJrZXIgPSBudWxsO1xuICB9LFxuICBzZXRTZWxlY3RlZE1hcmtlcihtYXJrZXIpIHtcbiAgICBpZiAoIW1hcmtlciB8fCAhbWFya2VyLl9pY29uKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Vycm9yIGluIG1ldGhvZCBcInNldFNlbGVjdGVkTWFya2VyXCIuIENoZWNrIG1hcmtlciBpbnN0YW5jZScpO1xuICAgIH1cbiAgICB0aGlzLl9zZWxlY3RlZE1hcmtlciA9IG1hcmtlcjtcbiAgfSxcbiAgcmVtb3ZlUG9seWdvbihwb2x5Z29uKSB7XG4gICAgdGhpcy5nZXRFTWFya2Vyc0dyb3VwKCkuY2xlYXJMYXllcnMoKTtcbiAgICB0aGlzLmdldEVITWFya2Vyc0dyb3VwKCkuY2xlYXJMYXllcnMoKTtcblxuICAgIHBvbHlnb24uY2xlYXIoKTtcblxuICAgIHRoaXMuY2xlYXJTZWxlY3RlZE1hcmtlcigpO1xuICAgIHRoaXMuX3NldEVQb2x5Z29uX1RvX1ZHcm91cCgpO1xuICB9LFxuICBjcmVhdGVFZGl0UG9seWdvbihqc29uKSB7XG4gICAgbGV0IGdlb0pzb24gPSBMLmdlb0pzb24oanNvbik7XG5cbiAgICAvL2F2b2lkIHRvIGxvc2UgY2hhbmdlc1xuICAgIGlmICh0aGlzLl9nZXRTZWxlY3RlZFZMYXllcigpKSB7XG4gICAgICB0aGlzLl9zZXRFUG9seWdvbl9Ub19WR3JvdXAoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fYWRkRVBvbHlnb25fVG9fVkdyb3VwKCk7XG4gICAgfVxuXG4gICAgdGhpcy5jbGVhcigpO1xuXG4gICAgbGV0IGxheWVycyA9IGdlb0pzb24uZ2V0TGF5ZXJzKCk7XG5cbiAgICBpZiAobGF5ZXJzLmxlbmd0aCA+IDApIHtcbiAgICAgIGxheWVycy5mb3JFYWNoKGxheWVyID0+IHtcbiAgICAgICAgY29uc3QgbGF0bG5ncyA9IGxheWVyLmdldExhdExuZ3MoKTtcbiAgICAgICAgY29uc3Qgdkdyb3VwID0gdGhpcy5nZXRWR3JvdXAoKTtcblxuICAgICAgICBpZiAobGF5ZXIuZmVhdHVyZS5nZW9tZXRyeS50eXBlID09PSAnTXVsdGlQb2x5Z29uJykge1xuICAgICAgICAgIGxhdGxuZ3MuZm9yRWFjaChfbGF0bG5ncyA9PiB7XG4gICAgICAgICAgICB2R3JvdXAuYWRkTGF5ZXIoTC5wb2x5Z29uKF9sYXRsbmdzLCB7IGNsYXNzTmFtZTogJ3ZpZXctcG9seWdvbicgfSkpO1xuICAgICAgICAgIH0pXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdkdyb3VwLmFkZExheWVyKEwucG9seWdvbihsYXRsbmdzLCB7IGNsYXNzTmFtZTogJ3ZpZXctcG9seWdvbicgfSkpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICB0aGlzLm1vZGUoJ2RyYXcnKTtcblxuICAgIHRoaXMuX2ZpdFZCb3VuZHMoKTtcblxuICAgIHJldHVybiBnZW9Kc29uO1xuICB9LFxuXG4gIF9nZXRTZWxlY3RlZFZMYXllcigpIHtcbiAgICByZXR1cm4gdGhpcy5fc2VsZWN0ZWRWTGF5ZXI7XG4gIH0sXG4gIF9zZXRTZWxlY3RlZFZMYXllcihsYXllcikge1xuICAgIHRoaXMuX3NlbGVjdGVkVkxheWVyID0gbGF5ZXI7XG4gIH0sXG4gIF9jbGVhclNlbGVjdGVkVkxheWVyKCkge1xuICAgIHRoaXMuX3NlbGVjdGVkVkxheWVyID0gdW5kZWZpbmVkO1xuICB9LFxuICBfaGlkZVNlbGVjdGVkVkxheWVyKGxheWVyKSB7XG4gICAgbGF5ZXIuYnJpbmdUb0JhY2soKTtcblxuICAgIGlmICghbGF5ZXIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy9zaG93IGxhc3QgbGF5ZXJcbiAgICB0aGlzLl9zaG93U2VsZWN0ZWRWTGF5ZXIodGhpcy5fZ2V0U2VsZWN0ZWRWTGF5ZXIoKSk7XG4gICAgLy9oaWRlXG4gICAgdGhpcy5fc2V0U2VsZWN0ZWRWTGF5ZXIobGF5ZXIpO1xuICAgIGxheWVyLl9wYXRoLnN0eWxlLnZpc2liaWxpdHkgPSAnaGlkZGVuJztcbiAgfSxcbiAgX3Nob3dTZWxlY3RlZFZMYXllcihsYXllciA9IHRoaXMuX3NlbGVjdGVkVkxheWVyKSB7XG4gICAgaWYgKCFsYXllcikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBsYXllci5fcGF0aC5zdHlsZS52aXNpYmlsaXR5ID0gJyc7XG4gIH0sXG4gIF9hZGRFUG9seWdvbl9Ub19WR3JvdXAoKSB7XG4gICAgbGV0IHZHcm91cCA9IHRoaXMuZ2V0Vkdyb3VwKCk7XG4gICAgbGV0IGVQb2x5Z29uID0gdGhpcy5nZXRFUG9seWdvbigpO1xuXG4gICAgLy8gbGV0IGhvbGVzID0gZVBvbHlnb24uZ2V0SG9sZXMoKTtcbiAgICBsZXQgbGF0bG5ncyA9IGVQb2x5Z29uLmdldExhdExuZ3MoKTtcblxuICAgIGlmIChsYXRsbmdzICYmIGxhdGxuZ3NbMF0gJiYgbGF0bG5nc1swXS5sZW5ndGggPD0gMikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZHcm91cC5hZGRMYXllcihMLnBvbHlnb24obGF0bG5ncywgeyBjbGFzc05hbWU6ICd2aWV3LXBvbHlnb24nIH0pKTtcbiAgfSxcbiAgX3NldEVQb2x5Z29uX1RvX1ZHcm91cCgpIHtcbiAgICBsZXQgZVBvbHlnb24gPSB0aGlzLmdldEVQb2x5Z29uKCk7XG4gICAgbGV0IHNlbGVjdGVkVkxheWVyID0gdGhpcy5fZ2V0U2VsZWN0ZWRWTGF5ZXIoKTtcblxuICAgIGlmICghc2VsZWN0ZWRWTGF5ZXIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzZWxlY3RlZFZMYXllci5fbGF0bG5ncyA9IGVQb2x5Z29uLmdldExhdExuZ3MoKTtcbiAgICAvLyBzZWxlY3RlZFZMYXllci5faG9sZXMgPSBlUG9seWdvbi5nZXRIb2xlcygpO1xuICAgIHNlbGVjdGVkVkxheWVyLnJlZHJhdygpO1xuICB9LFxuXG4gIF9jb252ZXJ0VG9FZGl0KGdyb3VwKSB7XG4gICAgaWYgKGdyb3VwIGluc3RhbmNlb2YgTWFya2VyR3JvdXApIHtcbiAgICAgIGxldCBlUG9seWdvbiA9IHRoaXMuZ2V0RVBvbHlnb24oKTtcbiAgICAgIGxldCBsYXllcnMgPSBncm91cC5nZXRMYXllcnMoKTtcbiAgICAgIGxheWVycyA9IGxheWVycy5maWx0ZXIoKGxheWVyKSA9PiAhbGF5ZXIuaXNNaWRkbGUoKSk7XG4gICAgICBsZXQgcG9pbnRzQXJyYXkgPSBsYXllcnMubWFwKChsYXllcikgPT4gbGF5ZXIuZ2V0TGF0TG5nKCkpO1xuXG4gICAgICBsZXQgaG9sZXMgPSBlUG9seWdvbi5nZXRIb2xlcygpO1xuXG4gICAgICBpZiAoaG9sZXMpIHtcbiAgICAgICAgcG9pbnRzQXJyYXkgPSBbcG9pbnRzQXJyYXldLmNvbmNhdChob2xlcyk7XG4gICAgICB9XG5cbiAgICAgIGVQb2x5Z29uLnNldExhdExuZ3MocG9pbnRzQXJyYXkpO1xuICAgICAgZVBvbHlnb24ucmVkcmF3KCk7XG5cbiAgICAgIHJldHVybiBlUG9seWdvbjtcbiAgICB9XG4gIH0sXG4gIF9zZXRNb2RlKHR5cGUpIHtcbiAgICBsZXQgb3B0aW9ucyA9IHRoaXMub3B0aW9ucztcbiAgICB0aGlzLmdldEVQb2x5Z29uKCkuc2V0U3R5bGUob3B0aW9ucy5zdHlsZVt0eXBlXSk7XG4gIH0sXG5cbiAgX3NldE1vZGVUeXBlKHR5cGUpIHtcbiAgICB0cnkge1xuICAgICAgdGhpcy5fY29udGFpbmVyLmNsYXNzTGlzdC5yZW1vdmUoYG1hcC0ke3RoaXMuX21vZGVUeXBlfWApO1xuICAgICAgdGhpcy5fY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoYG1hcC0ke3RoaXMuX21vZGVUeXBlfWApO1xuXG4gICAgICB0aGlzLl9tb2RlVHlwZSA9IHR5cGU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY29uc29sZS5lcnJvcignQ2hlY2sgXCJfc2V0TW9kZVR5cGVcIicpO1xuICAgIH1cbiAgfSxcbiAgX2ZpdFZCb3VuZHMoKSB7XG4gICAgaWYgKHRoaXMuZ2V0Vkdyb3VwKCkuZ2V0TGF5ZXJzKCkubGVuZ3RoICE9PSAwKSB7XG4gICAgICB0aGlzLmZpdEJvdW5kcyh0aGlzLmdldFZHcm91cCgpLmdldEJvdW5kcygpLCB7cGFkZGluZzogWzMwLCAzMF19KTtcbiAgICB9XG4gIH0sXG4gIF9jbGVhck1hcCgpIHtcbiAgICB0aGlzLmdldEVHcm91cCgpLmNsZWFyTGF5ZXJzKCk7XG4gICAgdGhpcy5nZXRFUG9seWdvbigpLmNsZWFyKCk7XG4gICAgdGhpcy5nZXRFTWFya2Vyc0dyb3VwKCkuY2xlYXIoKTtcbiAgICBsZXQgc2VsZWN0ZWRNR3JvdXAgPSB0aGlzLmdldFNlbGVjdGVkTUdyb3VwKCk7XG5cbiAgICBpZiAoc2VsZWN0ZWRNR3JvdXApIHtcbiAgICAgIHNlbGVjdGVkTUdyb3VwLmdldERFTGluZSgpLmNsZWFyKCk7XG4gICAgfVxuXG4gICAgdGhpcy5nZXRFSE1hcmtlcnNHcm91cCgpLmNsZWFyKCk7XG5cbiAgICB0aGlzLl9hY3RpdmVFZGl0TGF5ZXIgPSB1bmRlZmluZWQ7XG5cbiAgICB0aGlzLl9zaG93U2VsZWN0ZWRWTGF5ZXIoKTtcbiAgICB0aGlzLl9jbGVhclNlbGVjdGVkVkxheWVyKCk7XG4gICAgdGhpcy5jbGVhclNlbGVjdGVkTWFya2VyKCk7XG4gIH0sXG4gIF9jbGVhckV2ZW50cygpIHtcbiAgICB0aGlzLl91bkJpbmREcmF3RXZlbnRzKCk7XG4gIH0sXG4gIF9tb3ZlRVBvbHlnb25PblRvcCgpIHtcbiAgICBjb25zdCBlUG9seWdvbiA9IHRoaXMuZ2V0RVBvbHlnb24oKTtcbiAgICBjb25zdCBlbGVtZW50ID0gZVBvbHlnb24uX2NvbnRhaW5lcjtcblxuICAgIGlmIChlbGVtZW50KSB7XG4gICAgICBlbGVtZW50LnBhcmVudEVsZW1lbnQuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KCdiZWZvcmVlbmQnLCBlbGVtZW50KTtcbiAgICB9XG4gIH0sXG4gIF9nZXRHZW9tZXRyeShnZW9Kc29uID0ge30pIHtcbiAgICBpZiAoZ2VvSnNvbi5nZW9tZXRyeSkge1xuICAgICAgcmV0dXJuIGdlb0pzb24uZ2VvbWV0cnk7XG4gICAgfVxuXG4gICAgaWYgKGdlb0pzb24uZmVhdHVyZXMgJiYgZ2VvSnNvbi5mZWF0dXJlc1swXSkge1xuICAgICAgcmV0dXJuIHRoaXMuX2dldEdlb21ldHJ5KGdlb0pzb24uZmVhdHVyZXNbMF0pO1xuICAgIH1cblxuICAgIHJldHVybiB7fTtcbiAgfVxufSwgRHJhd0V2ZW50cyk7XG4iLCJpbXBvcnQgeyBmaXJzdEljb24sIG1pZGRsZUljb24gfSBmcm9tICcuLi8uLi9tYXJrZXItaWNvbnMuanMnO1xuaW1wb3J0IEVWRU5UUyBmcm9tICcuLi8uLi9ldmVudC1uYW1lcy5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgX2JpbmREcmF3RXZlbnRzICgpIHtcbiAgICB0aGlzLl91bkJpbmREcmF3RXZlbnRzKCk7XG5cbiAgICAvLyBjbGljayBvbiBtYXBcbiAgICB0aGlzLm9uKCdjbGljaycsIChlKSA9PiB7XG4gICAgICAvLyBidWcgZml4XG4gICAgICBpZiAoZS5vcmlnaW5hbEV2ZW50ICYmIGUub3JpZ2luYWxFdmVudC5jbGllbnRYID09PSAwICYmIGUub3JpZ2luYWxFdmVudC5jbGllbnRZID09PSAwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGUudGFyZ2V0IGluc3RhbmNlb2YgTC5NYXJrZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgZU1hcmtlcnNHcm91cCA9IGUudGFyZ2V0LmdldEVNYXJrZXJzR3JvdXAoKTtcblxuICAgICAgLy8gc3RhcnQgYWRkIG5ldyBwb2x5Z29uXG4gICAgICBpZiAoZU1hcmtlcnNHcm91cC5pc0VtcHR5KCkpIHtcbiAgICAgICAgdGhpcy5fYWRkTWFya2VyKGUpO1xuXG4gICAgICAgIHRoaXMuZmlyZShFVkVOVFMuc3RhcnRfYWRkX25ld19wb2x5Z29uLCBlKTtcbiAgICAgICAgdmFyIHN0YXJ0RHJhd1N0eWxlID0gdGhpcy5vcHRpb25zLnN0eWxlWydzdGFydERyYXcnXTtcblxuICAgICAgICBpZiAoc3RhcnREcmF3U3R5bGUpIHtcbiAgICAgICAgICB0aGlzLmdldEVQb2x5Z29uKCkuc2V0U3R5bGUoc3RhcnREcmF3U3R5bGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fY2xlYXJTZWxlY3RlZFZMYXllcigpO1xuXG4gICAgICAgIHRoaXMuc2V0U2VsZWN0ZWRNR3JvdXAoZU1hcmtlcnNHcm91cCk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgLy8gY29udGludWUgd2l0aCBuZXcgcG9seWdvblxuICAgICAgdmFyIGZpcnN0TWFya2VyID0gZU1hcmtlcnNHcm91cC5nZXRGaXJzdCgpO1xuXG4gICAgICBpZiAoZmlyc3RNYXJrZXIgJiYgZmlyc3RNYXJrZXIuX2hhc0ZpcnN0SWNvbigpKSB7XG4gICAgICAgIGlmICghKGUudGFyZ2V0IGluc3RhbmNlb2YgTC5NYXJrZXIpKSB7XG4gICAgICAgICAgdGhpcy5fYWRkTWFya2VyKGUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgLy8gc3RhcnQgZHJhdyBuZXcgaG9sZSBwb2x5Z29uXG4gICAgICB2YXIgZWhNYXJrZXJzR3JvdXAgPSB0aGlzLmdldEVITWFya2Vyc0dyb3VwKCk7XG4gICAgICB2YXIgbGFzdEhvbGUgPSBlaE1hcmtlcnNHcm91cC5nZXRMYXN0SG9sZSgpO1xuICAgICAgaWYgKGZpcnN0TWFya2VyICYmICFmaXJzdE1hcmtlci5faGFzRmlyc3RJY29uKCkpIHtcbiAgICAgICAgaWYgKChlLnRhcmdldC5nZXRFUG9seWdvbigpLl9wYXRoID09PSBlLm9yaWdpbmFsRXZlbnQudGFyZ2V0KSkge1xuICAgICAgICAgIGlmICghbGFzdEhvbGUgfHwgIWxhc3RIb2xlLmdldEZpcnN0KCkgfHwgIWxhc3RIb2xlLmdldEZpcnN0KCkuX2hhc0ZpcnN0SWNvbigpKSB7XG4gICAgICAgICAgICB0aGlzLmNsZWFyU2VsZWN0ZWRNYXJrZXIoKTtcblxuICAgICAgICAgICAgdmFyIGxhc3RIR3JvdXAgPSBlaE1hcmtlcnNHcm91cC5hZGRIb2xlR3JvdXAoKTtcbiAgICAgICAgICAgIGxhc3RIR3JvdXAuc2V0KGUubGF0bG5nLCBudWxsLCB7IGljb246IGZpcnN0SWNvbiB9KTtcblxuICAgICAgICAgICAgdGhpcy5zZXRTZWxlY3RlZE1Hcm91cChsYXN0SEdyb3VwKTtcbiAgICAgICAgICAgIHRoaXMuZmlyZShFVkVOVFMuc3RhcnRfYWRkX25ld19ob2xlKTtcblxuICAgICAgICAgICAgdGhpcy5nZXRFSE1hcmtlcnNHcm91cCgpLnJlc2V0U2VsZWN0aW9uKCk7XG4gICAgICAgICAgICB0aGlzLmdldEVNYXJrZXJzR3JvdXAoKS5yZXNldFNlbGVjdGlvbigpO1xuXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIGNvbnRpbnVlIHdpdGggbmV3IGhvbGUgcG9seWdvblxuICAgICAgaWYgKGxhc3RIb2xlICYmICFsYXN0SG9sZS5pc0VtcHR5KCkgJiYgbGFzdEhvbGUuaGFzRmlyc3RNYXJrZXIoKSkge1xuICAgICAgICBjb25zdCBtYXJrZXIgPSBlaE1hcmtlcnNHcm91cC5nZXRMYXN0SG9sZSgpLnNldChlLmxhdGxuZyk7XG5cbiAgICAgICAgdGhpcy5maXJlKEVWRU5UUy5hZGRfaG9sZV9tYXJrZXIsIHsgbWFya2VyIH0pO1xuXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgLy8gcmVzZXRcblxuICAgICAgaWYgKHRoaXMuX2dldFNlbGVjdGVkVkxheWVyKCkpIHtcbiAgICAgICAgdGhpcy5fc2V0RVBvbHlnb25fVG9fVkdyb3VwKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9hZGRFUG9seWdvbl9Ub19WR3JvdXAoKTtcbiAgICAgIH1cblxuXG4gICAgICB0aGlzLmNsZWFyKCk7XG5cbiAgICAgIHRoaXMuZmlyZShFVkVOVFMubWFya2VyX2dyb3VwX2NsZWFyKTtcbiAgICAgIHRoaXMuZmlyZShFVkVOVFMuY2hhbmdlZCwgeyBqc29uOiB0aGlzLnNhdmVTdGF0ZSgpIH0pO1xuXG4gICAgICB0aGlzLm1vZGUoJ2RyYXcnKTtcbiAgICB9KTtcblxuICAgIHRoaXMub24oRVZFTlRTLmpvaW5fcGF0aCwgKGUpID0+IHtcbiAgICAgIHZhciBlTWFya2Vyc0dyb3VwID0gZS5tR3JvdXA7XG5cbiAgICAgIGlmICghZU1hcmtlcnNHcm91cCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChlTWFya2Vyc0dyb3VwLl9pc0hvbGUpIHtcbiAgICAgICAgdGhpcy5nZXRFSE1hcmtlcnNHcm91cCgpLnJlc2V0TGFzdEhvbGUoKTtcbiAgICAgIH1cbiAgICAgIC8vMS4gc2V0IG1pZGRsZSBtYXJrZXJzXG4gICAgICB2YXIgbGF5ZXJzID0gZU1hcmtlcnNHcm91cC5nZXRMYXllcnMoKTtcblxuICAgICAgdmFyIHBvc2l0aW9uID0gLTE7XG4gICAgICBsYXllcnMuZm9yRWFjaCgoKSA9PiB7XG4gICAgICAgIHZhciBtYXJrZXIgPSBlTWFya2Vyc0dyb3VwLmFkZE1hcmtlcihwb3NpdGlvbiwgbnVsbCwgeyBpY29uOiBtaWRkbGVJY29uIH0pO1xuICAgICAgICBwb3NpdGlvbiA9IG1hcmtlci5wb3NpdGlvbiArIDI7XG4gICAgICB9KTtcblxuICAgICAgLy8yLiBjbGVhciBsaW5lXG4gICAgICBlTWFya2Vyc0dyb3VwLmdldERFTGluZSgpLmNsZWFyKCk7XG5cbiAgICAgIGVNYXJrZXJzR3JvdXAuc2VsZWN0KCk7XG5cbiAgICAgIC8vcmVzZXQgc3R5bGUgaWYgJ3N0YXJ0RHJhdycgd2FzIHVzZWRcbiAgICAgIHRoaXMuZ2V0RVBvbHlnb24oKS5zZXRTdHlsZSh0aGlzLm9wdGlvbnMuc3R5bGUuZHJhdyk7XG5cblxuICAgICAgaWYgKGVNYXJrZXJzR3JvdXAuX2lzSG9sZSkge1xuICAgICAgICB0aGlzLmZpcmUoRVZFTlRTLmhvbGVfY3JlYXRlZCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmZpcmUoRVZFTlRTLnBvbHlnb25fY3JlYXRlZCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBjb25zdCB2R3JvdXAgPSB0aGlzLmdldFZHcm91cCgpO1xuXG4gICAgdkdyb3VwLm9uKCdjbGljaycsIChlKSA9PiB7XG4gICAgICBjb25zdCBzZWxlY3RlZE1Hcm91cCA9IHRoaXMuZ2V0U2VsZWN0ZWRNR3JvdXAoKTtcblxuICAgICAgaWYgKCFzZWxlY3RlZE1Hcm91cCB8fCAhc2VsZWN0ZWRNR3JvdXAuaGFzRmlyc3RNYXJrZXIoKSkge1xuXG4gICAgICAgIHZHcm91cC5vbkNsaWNrKGUpO1xuXG4gICAgICAgIHRoaXMubXNnSGVscGVyLm1zZyh0aGlzLm9wdGlvbnMudGV4dC5jbGlja1RvRHJhd0lubmVyRWRnZXMsIG51bGwsIGUubGF5ZXJQb2ludCk7XG4gICAgICAgIHRoaXMuZmlyZShFVkVOVFMucG9seWdvbl9zZWxlY3RlZCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB0aGlzLm9uKEVWRU5UUy5kZWxldGVfbWFya2VyLCAoKSA9PiB7XG4gICAgICB0aGlzLl9jb252ZXJ0VG9FZGl0KHRoaXMuZ2V0RU1hcmtlcnNHcm91cCgpKTtcbiAgICB9KTtcbiAgICB0aGlzLm9uKEVWRU5UUy5kZWxldGVfcG9seWdvbiwgKCkgPT4ge1xuICAgICAgdGhpcy5nZXRFSE1hcmtlcnNHcm91cCgpLnJlbW92ZSgpO1xuICAgIH0pO1xuICB9LFxuICBfYWRkTWFya2VyICh7IGxhdGxuZyB9KSB7XG5cbiAgICB2YXIgZU1hcmtlcnNHcm91cCA9IHRoaXMuZ2V0RU1hcmtlcnNHcm91cCgpO1xuXG4gICAgdmFyIG1hcmtlciA9IGVNYXJrZXJzR3JvdXAuc2V0KGxhdGxuZyk7XG5cbiAgICB0aGlzLl9jb252ZXJ0VG9FZGl0KGVNYXJrZXJzR3JvdXApO1xuXG4gICAgdGhpcy5maXJlKEVWRU5UUy5hZGRfbWFya2VyLCB7IG1hcmtlciB9KTtcblxuICAgIHJldHVybiBtYXJrZXI7XG4gIH0sXG4gIF91bkJpbmREcmF3RXZlbnRzICgpIHtcbiAgICB0aGlzLm9mZignY2xpY2snKTtcbiAgICB0aGlzLmdldFZHcm91cCgpLm9mZignY2xpY2snKTtcblxuICAgIHRoaXMub2ZmKCdkYmxjbGljaycpO1xuXG4gICAgdGhpcy5nZXRERUxpbmUoKS5jbGVhcigpO1xuXG4gICAgdGhpcy5vZmYoRVZFTlRTLmpvaW5fcGF0aCk7XG5cbiAgICBpZiAodGhpcy5fb3BlblBvcHVwKSB7XG4gICAgICBkZWxldGUgdGhpcy5fb3BlblBvcHVwO1xuICAgIH1cbiAgfVxufVxuIiwiZXhwb3J0IGNvbnN0IHByZWNpc2lvbiA9IGZ1bmN0aW9uKG51bWJlciwgcHJlYykge1xuICBsZXQgYXJyYXlTdHJpbmdzID0gKGAke251bWJlcn1gKS5zcGxpdCgnLicpO1xuICBwcmVjID0gcHJlYyB8fCAwO1xuXG4gIGlmICghbnVtYmVyIHx8IGFycmF5U3RyaW5ncy5sZW5ndGggPT09IDEpIHtcbiAgICByZXR1cm4gbnVtYmVyO1xuICB9XG5cbiAgbGV0IGlzRmxvYXQgPSBhcnJheVN0cmluZ3NbMV0ubGVuZ3RoID4gMDtcblxuICBsZXQgcnNsdCA9IDA7XG5cbiAgaWYgKGlzRmxvYXQpIHtcbiAgICBsZXQgX3ByZWMgPSAoYXJyYXlTdHJpbmdzWzFdLmxlbmd0aCA8IHByZWMpID8gYXJyYXlTdHJpbmdzWzFdLmxlbmd0aCA6IHByZWM7XG4gICAgcnNsdCA9IG51bWJlci50b1ByZWNpc2lvbihhcnJheVN0cmluZ3NbMF0ubGVuZ3RoICsgX3ByZWMpO1xuICB9XG5cbiAgcmV0dXJuIE51bWJlcihyc2x0KTtcbn07XG5cbmV4cG9ydCBjb25zdCBwcmVjaXNpb25HZW9KU09OID0gZnVuY3Rpb24oZ2VvSlNPTiwgcHJlYyA9IDApIHtcbiAgbGV0IGpzb247XG4gIGlmIChnZW9KU09OID09PSBudWxsIHx8IGdlb0pTT04gPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignUGxlYXNlLCBtYWtlIHN1cmUgdGhhdCBmaXJzdCBhcmd1bWVudHMgaXMgZ2VvSlNPTicpO1xuICB9XG5cbiAgaWYgKGdlb0pTT04uZmVhdHVyZXMgJiYgZ2VvSlNPTi5mZWF0dXJlc1swXSkge1xuICAgIGdlb0pTT04uZmVhdHVyZXMgPSBnZW9KU09OLmZlYXR1cmVzLm1hcChmZWF0dXJlID0+IHtcbiAgICAgIHJldHVybiBwcmVjaXNpb25HZW9KU09OKGZlYXR1cmUsIHByZWMpO1xuICAgIH0sIFtdKTtcbiAgfVxuXG4gIGpzb24gPSBPYmplY3QuYXNzaWduKHt9LCBnZW9KU09OKTtcblxuICBpZiAoanNvbi5nZW9tZXRyeSkge1xuICAgIGxldCB7IGdlb21ldHJ5OiB7IHR5cGUsIGNvb3JkaW5hdGVzIH0gfSA9IGpzb247XG5cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoY29vcmRpbmF0ZXMpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1BsZWFzZSwgbWFrZSBzdXJlIHRoYXQgZ2VvSlNPTiBoYXMgY29ycmVjdCBzdHJ1Y3R1cmUnKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZSA9PT0gJ1BvbHlnb24nKSB7XG4gICAgICBpZiAocHJlYyA+IDApIHtcbiAgICAgICAgY29vcmRpbmF0ZXMuZm9yRWFjaChvdXRsZXQgPT4ge1xuICAgICAgICAgIG91dGxldC5mb3JFYWNoKGVkZ2UgPT4ge1xuICAgICAgICAgICAgZWRnZVswXSA9IHByZWNpc2lvbihlZGdlWzBdLCBwcmVjKTtcbiAgICAgICAgICAgIGVkZ2VbMV0gPSBwcmVjaXNpb24oZWRnZVsxXSwgcHJlYyk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0eXBlID09PSAnTXVsdGlQb2x5Z29uJykge1xuICAgICAgaWYgKHByZWMgPiAwKSB7XG4gICAgICAgIGNvb3JkaW5hdGVzLmZvckVhY2gocG9seWdvbiA9PiB7XG4gICAgICAgICAgcG9seWdvbi5mb3JFYWNoKG91dGxldCA9PiB7XG4gICAgICAgICAgICBvdXRsZXQuZm9yRWFjaChlZGdlID0+IHtcbiAgICAgICAgICAgICAgZWRnZVswXSA9IHByZWNpc2lvbihlZGdlWzBdLCBwcmVjKTtcbiAgICAgICAgICAgICAgZWRnZVsxXSA9IHByZWNpc2lvbihlZGdlWzFdLCBwcmVjKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4ganNvbjtcbn07XG4iLCJpbXBvcnQgTWFya2VyIGZyb20gJy4uL21vZGVzL2VkaXQvbWFya2VyLmpzJztcbmltcG9ydCAqIGFzIGljb25zIGZyb20gJy4uL21hcmtlci1pY29ucy5qcyc7XG5cbmltcG9ydCBFVkVOVFMgZnJvbSAnLi4vZXZlbnQtbmFtZXMuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBMLkxheWVyR3JvdXAuZXh0ZW5kKHtcbiAgaW5jbHVkZXM6IEwuRXZlbnRlZCxcblxuICBfc2VsZWN0ZWQ6IGZhbHNlLFxuICBfbGFzdE1hcmtlcjogdW5kZWZpbmVkLFxuICBfZmlyc3RNYXJrZXI6IHVuZGVmaW5lZCxcbiAgX3Bvc2l0aW9uSGFzaDogdW5kZWZpbmVkLFxuICBfbGFzdFBvc2l0aW9uOiAwLFxuICBfbWFya2VyczogW10sXG4gIG9uUmVtb3ZlICgpIHtcbiAgICB0aGlzLmNsZWFyTGF5ZXJzKCk7XG4gIH0sXG4gIGNsZWFyTGF5ZXJzICgpIHtcbiAgICB0aGlzLl9tYXJrZXJzLmZvckVhY2goKG1hcmtlcikgPT4ge1xuICAgICAgdGhpcy5fbWFwLnJlbW92ZUxheWVyKG1hcmtlcik7XG4gICAgfSk7XG4gICAgdGhpcy5fbWFya2VycyA9IFtdO1xuICB9LFxuICBhZGRUbyAobWFwKSB7XG4gICAgbWFwLmFkZExheWVyKHRoaXMpO1xuICB9LFxuICBhZGRMYXllciAobWFya2VyKSB7XG4gICAgdGhpcy5fbWFwLmFkZExheWVyKG1hcmtlcik7XG4gICAgdGhpcy5fbWFya2Vycy5wdXNoKG1hcmtlcik7XG4gICAgaWYgKG1hcmtlci5wb3NpdGlvbiAhPSBudWxsKSB7XG4gICAgICB0aGlzLl9tYXJrZXJzLm1vdmUodGhpcy5fbWFya2Vycy5sZW5ndGggLSAxLCBtYXJrZXIucG9zaXRpb24pO1xuICAgIH1cbiAgICBtYXJrZXIucG9zaXRpb24gPSAobWFya2VyLnBvc2l0aW9uICE9IG51bGwpID8gbWFya2VyLnBvc2l0aW9uIDogdGhpcy5fbWFya2Vycy5sZW5ndGggLSAxO1xuICB9LFxuICByZW1vdmUgKCkge1xuICAgIGNvbnN0IG1hcCA9IHRoaXMuX21hcDtcbiAgICBjb25zdCBtYXJrZXJzID0gdGhpcy5nZXRMYXllcnMoKTtcblxuICAgIHRoaXMuZ2V0REVMaW5lKCkuY2xlYXIoKTtcblxuICAgIG1hcmtlcnMuX2VhY2goKG1hcmtlcikgPT4ge1xuICAgICAgd2hpbGUgKHRoaXMuZ2V0TGF5ZXJzKCkubGVuZ3RoKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlTWFya2VyKG1hcmtlcik7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBpZiAodGhpcy5faXNIb2xlKSB7XG4gICAgICBtYXAuZmlyZShFVkVOVFMuaG9sZV9kZWxldGVkKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbWFwLmdldFZHcm91cCgpLnJlbW92ZUxheWVyKG1hcC5fZ2V0U2VsZWN0ZWRWTGF5ZXIoKSk7XG4gICAgICBtYXAuZmlyZShFVkVOVFMucG9seWdvbl9kZWxldGVkKTtcbiAgICB9XG4gIH0sXG4gIHJlbW92ZUxheWVyIChtYXJrZXIpIHtcbiAgICB2YXIgcG9zaXRpb24gPSBtYXJrZXIucG9zaXRpb247XG4gICAgdGhpcy5fbWFwLnJlbW92ZUxheWVyKG1hcmtlcik7XG4gICAgdGhpcy5fbWFya2Vycy5zcGxpY2UocG9zaXRpb24sIDEpO1xuICB9LFxuICBnZXRMYXllcnMgKCkge1xuICAgIHJldHVybiB0aGlzLl9tYXJrZXJzO1xuICB9LFxuICBlYWNoTGF5ZXIgKGNiKSB7XG4gICAgdGhpcy5fbWFya2Vycy5mb3JFYWNoKGNiKTtcbiAgfSxcbiAgbWFya2VyQXQgKHBvc2l0aW9uKSB7XG4gICAgdmFyIHJzbHQgPSB0aGlzLl9tYXJrZXJzW3Bvc2l0aW9uXTtcblxuICAgIGlmIChwb3NpdGlvbiA8IDApIHtcbiAgICAgIHJldHVybiB0aGlzLmZpcnN0TWFya2VyKCk7XG4gICAgfVxuXG4gICAgaWYgKHJzbHQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcnNsdCA9IHRoaXMubGFzdE1hcmtlcigpO1xuICAgIH1cblxuICAgIHJldHVybiByc2x0O1xuICB9LFxuICBmaXJzdE1hcmtlciAoKSB7XG4gICAgcmV0dXJuIHRoaXMuX21hcmtlcnNbMF07XG4gIH0sXG4gIGxhc3RNYXJrZXIgKCkge1xuICAgIHZhciBtYXJrZXJzID0gdGhpcy5fbWFya2VycztcbiAgICByZXR1cm4gbWFya2Vyc1ttYXJrZXJzLmxlbmd0aCAtIDFdO1xuICB9LFxuICByZW1vdmVNYXJrZXIgKG1hcmtlcikge1xuICAgIHZhciBiID0gIW1hcmtlci5pc01pZGRsZSgpO1xuXG4gICAgdmFyIHByZXZNYXJrZXIgPSBtYXJrZXIuX3ByZXY7XG4gICAgdmFyIG5leHRNYXJrZXIgPSBtYXJrZXIuX25leHQ7XG4gICAgdmFyIG5leHRuZXh0TWFya2VyID0gbWFya2VyLl9uZXh0Ll9uZXh0O1xuICAgIHRoaXMucmVtb3ZlTWFya2VyQXQobWFya2VyLnBvc2l0aW9uKTtcbiAgICB0aGlzLnJlbW92ZU1hcmtlckF0KHByZXZNYXJrZXIucG9zaXRpb24pO1xuICAgIHRoaXMucmVtb3ZlTWFya2VyQXQobmV4dE1hcmtlci5wb3NpdGlvbik7XG5cbiAgICB2YXIgbWFwID0gdGhpcy5fbWFwO1xuXG4gICAgaWYgKHRoaXMuZ2V0TGF5ZXJzKCkubGVuZ3RoID4gMCkge1xuICAgICAgdGhpcy5zZXRNaWRkbGVNYXJrZXIobmV4dG5leHRNYXJrZXIucG9zaXRpb24pO1xuXG4gICAgICBpZiAoYikge1xuICAgICAgICBtYXAuZmlyZShFVkVOVFMuZGVsZXRlX21hcmtlciwgeyBtYXJrZXI6IG1hcmtlciB9KTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHRoaXMuX2lzSG9sZSkge1xuICAgICAgICBtYXAucmVtb3ZlTGF5ZXIodGhpcyk7XG4gICAgICAgIG1hcC5maXJlKEVWRU5UUy5kZWxldGVfaG9sZSwgeyBtYXJrZXI6IG1hcmtlciB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG1hcC5maXJlKEVWRU5UUy5kZWxldGVfcG9seWdvbik7XG5cbiAgICAgICAgbWFwLnJlbW92ZVBvbHlnb24obWFwLmdldEVQb2x5Z29uKCkpO1xuICAgICAgfVxuICAgICAgbWFwLmZpcmUoRVZFTlRTLm1hcmtlcl9ncm91cF9jbGVhcik7XG4gICAgfVxuICB9LFxuICByZW1vdmVNYXJrZXJBdCAocG9zaXRpb24pIHtcbiAgICBpZiAodGhpcy5nZXRMYXllcnMoKS5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgbWFya2VyO1xuICAgIGlmICh0eXBlb2YgcG9zaXRpb24gPT09ICdudW1iZXInKSB7XG4gICAgICBtYXJrZXIgPSB0aGlzLm1hcmtlckF0KHBvc2l0aW9uKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBfY2hhbmdlUG9zID0gZmFsc2U7XG4gICAgdmFyIG1hcmtlcnMgPSB0aGlzLl9tYXJrZXJzO1xuICAgIG1hcmtlcnMuZm9yRWFjaCgoX21hcmtlcikgPT4ge1xuICAgICAgaWYgKF9jaGFuZ2VQb3MpIHtcbiAgICAgICAgX21hcmtlci5wb3NpdGlvbiA9IChfbWFya2VyLnBvc2l0aW9uID09PSAwKSA/IDAgOiBfbWFya2VyLnBvc2l0aW9uIC0gMTtcbiAgICAgIH1cbiAgICAgIGlmIChfbWFya2VyID09PSBtYXJrZXIpIHtcbiAgICAgICAgbWFya2VyLl9wcmV2Ll9uZXh0ID0gbWFya2VyLl9uZXh0O1xuICAgICAgICBtYXJrZXIuX25leHQuX3ByZXYgPSBtYXJrZXIuX3ByZXY7XG4gICAgICAgIF9jaGFuZ2VQb3MgPSB0cnVlO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgdGhpcy5yZW1vdmVMYXllcihtYXJrZXIpO1xuXG4gICAgaWYgKG1hcmtlcnMubGVuZ3RoIDwgNSkge1xuICAgICAgdGhpcy5jbGVhcigpO1xuICAgICAgaWYgKCF0aGlzLl9pc0hvbGUpIHtcbiAgICAgICAgdmFyIG1hcCA9IHRoaXMuX21hcDtcbiAgICAgICAgbWFwLmdldEVQb2x5Z29uKCkuY2xlYXIoKTtcbiAgICAgICAgbWFwLmdldFZHcm91cCgpLnJlbW92ZUxheWVyKG1hcC5fZ2V0U2VsZWN0ZWRWTGF5ZXIoKSk7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICBoYXNTdGFydE1hcmtlcigpIHtcbiAgICByZXR1cm4gISF0aGlzLmdldExheWVycygpLnNvbWUobWFya2VyID0+IG1hcmtlci5faWNvbi5jbGFzc0xpc3QuY29udGFpbnMoaWNvbnMuZmlyc3RJY29uLm9wdGlvbnMuY2xhc3NOYW1lKSk7XG4gIH0sXG4gIGFkZE1hcmtlciAobGF0bG5nLCBwb3NpdGlvbiwgb3B0aW9ucykge1xuICAgIC8vIDEuIHJlY2FsY3VsYXRlIHBvc2l0aW9uc1xuICAgIGlmICh0eXBlb2YgbGF0bG5nID09PSAnbnVtYmVyJykge1xuICAgICAgcG9zaXRpb24gPSB0aGlzLm1hcmtlckF0KGxhdGxuZykucG9zaXRpb247XG4gICAgICB0aGlzLl9yZWNhbGNQb3NpdGlvbnMocG9zaXRpb24pO1xuXG4gICAgICB2YXIgcHJldk1hcmtlciA9IChwb3NpdGlvbiAtIDEpIDwgMCA/IHRoaXMubGFzdE1hcmtlcigpIDogdGhpcy5tYXJrZXJBdChwb3NpdGlvbiAtIDEpO1xuICAgICAgdmFyIG5leHRNYXJrZXIgPSB0aGlzLm1hcmtlckF0KChwb3NpdGlvbiA9PSAtMSkgPyAxIDogcG9zaXRpb24pO1xuICAgICAgbGF0bG5nID0gdGhpcy5fZ2V0TWlkZGxlTGF0TG5nKHByZXZNYXJrZXIsIG5leHRNYXJrZXIpO1xuICAgIH1cblxuICAgIGNvbnN0IG1hcmtlciA9IG5ldyBNYXJrZXIodGhpcywgbGF0bG5nLCBvcHRpb25zKTtcblxuICAgIGlmICghdGhpcy5fZmlyc3RNYXJrZXIpIHtcbiAgICAgIHRoaXMuX2ZpcnN0TWFya2VyID0gbWFya2VyO1xuICAgICAgdGhpcy5fbGFzdE1hcmtlciA9IG1hcmtlcjtcbiAgICB9XG5cbiAgICBpZiAocG9zaXRpb24gIT09IHVuZGVmaW5lZCkge1xuICAgICAgbWFya2VyLnBvc2l0aW9uID0gcG9zaXRpb247XG4gICAgfVxuXG4gICAgdGhpcy5hZGRMYXllcihtYXJrZXIpO1xuXG4gICAgLy8gbWFya2VyLmJpbmRUb29sdGlwKFwibXkgdG9vbHRpcCB0ZXh0XCIpLm9wZW5Ub29sdGlwKCk7XG5cbiAgICB7XG4gICAgICBtYXJrZXIucG9zaXRpb24gPSAobWFya2VyLnBvc2l0aW9uICE9PSB1bmRlZmluZWQgKSA/IG1hcmtlci5wb3NpdGlvbiA6IHRoaXMuX2xhc3RQb3NpdGlvbisrO1xuICAgICAgbWFya2VyLl9wcmV2ID0gdGhpcy5fbGFzdE1hcmtlcjtcbiAgICAgIHRoaXMuX2ZpcnN0TWFya2VyLl9wcmV2ID0gbWFya2VyO1xuICAgICAgaWYgKG1hcmtlci5fcHJldikge1xuICAgICAgICB0aGlzLl9sYXN0TWFya2VyLl9uZXh0ID0gbWFya2VyO1xuICAgICAgICBtYXJrZXIuX25leHQgPSB0aGlzLl9maXJzdE1hcmtlcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAocG9zaXRpb24gPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhpcy5fbGFzdE1hcmtlciA9IG1hcmtlcjtcbiAgICB9XG5cbiAgICAvLyAyLiByZWNhbGN1bGF0ZSByZWxhdGlvbnNcbiAgICBpZiAocG9zaXRpb24gIT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhpcy5fcmVjYWxjUmVsYXRpb25zKG1hcmtlcik7XG4gICAgfVxuICAgIC8vIDMuIHRyaWdnZXIgZXZlbnRcbiAgICBpZiAoIW1hcmtlci5pc01pZGRsZSgpKSB7XG4gICAgICB0aGlzLl9tYXAuZmlyZShFVkVOVFMuYmVmb3JlX2FkZF9tYXJrZXIsIHsgbWFya2VyOiBtYXJrZXIgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1hcmtlcjtcbiAgfSxcbiAgY2xlYXIgKCkge1xuICAgIHZhciBpZHMgPSB0aGlzLl9pZHMoKTtcblxuICAgIHRoaXMuY2xlYXJMYXllcnMoKTtcblxuICAgIGlkcy5mb3JFYWNoKChpZCkgPT4ge1xuICAgICAgdGhpcy5fZGVsZXRlRXZlbnRzKGlkKTtcbiAgICB9KTtcblxuICAgIHRoaXMuX2xhc3RQb3NpdGlvbiA9IDA7XG5cbiAgICB0aGlzLl9maXJzdE1hcmtlciA9IHVuZGVmaW5lZDtcbiAgfSxcbiAgX2RlbGV0ZUV2ZW50cyAoaWQpIHtcbiAgICBkZWxldGUgdGhpcy5fbWFwLl9sZWFmbGV0X2V2ZW50cy52aWV3cmVzZXRfaWR4W2lkXTtcbiAgICBkZWxldGUgdGhpcy5fbWFwLl9sZWFmbGV0X2V2ZW50cy56b29tYW5pbV9pZHhbaWRdO1xuICB9LFxuICBfZ2V0TWlkZGxlTGF0TG5nIChtYXJrZXIxLCBtYXJrZXIyKSB7XG4gICAgdmFyIG1hcCA9IHRoaXMuX21hcCxcbiAgICAgIHAxID0gbWFwLnByb2plY3QobWFya2VyMS5nZXRMYXRMbmcoKSksXG4gICAgICBwMiA9IG1hcC5wcm9qZWN0KG1hcmtlcjIuZ2V0TGF0TG5nKCkpO1xuXG4gICAgcmV0dXJuIG1hcC51bnByb2plY3QocDEuX2FkZChwMikuX2RpdmlkZUJ5KDIpKTtcbiAgfSxcbiAgX3JlY2FsY1Bvc2l0aW9ucyAocG9zaXRpb24pIHtcbiAgICB2YXIgbWFya2VycyA9IHRoaXMuX21hcmtlcnM7XG5cbiAgICB2YXIgY2hhbmdlUG9zID0gZmFsc2U7XG4gICAgbWFya2Vycy5mb3JFYWNoKChtYXJrZXIsIF9wb3NpdGlvbikgPT4ge1xuICAgICAgaWYgKHBvc2l0aW9uID09PSBfcG9zaXRpb24pIHtcbiAgICAgICAgY2hhbmdlUG9zID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIGlmIChjaGFuZ2VQb3MpIHtcbiAgICAgICAgdGhpcy5fbWFya2Vyc1tfcG9zaXRpb25dLnBvc2l0aW9uICs9IDE7XG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG4gIF9yZWNhbGNSZWxhdGlvbnMgKCkge1xuICAgIHZhciBtYXJrZXJzID0gdGhpcy5fbWFya2VycztcblxuICAgIG1hcmtlcnMuZm9yRWFjaCgobWFya2VyLCBwb3NpdGlvbikgPT4ge1xuXG4gICAgICBtYXJrZXIuX3ByZXYgPSB0aGlzLm1hcmtlckF0KHBvc2l0aW9uIC0gMSk7XG4gICAgICBtYXJrZXIuX25leHQgPSB0aGlzLm1hcmtlckF0KHBvc2l0aW9uICsgMSk7XG5cbiAgICAgIC8vIGZpcnN0XG4gICAgICBpZiAocG9zaXRpb24gPT09IDApIHtcbiAgICAgICAgbWFya2VyLl9wcmV2ID0gdGhpcy5sYXN0TWFya2VyKCk7XG4gICAgICAgIG1hcmtlci5fbmV4dCA9IHRoaXMubWFya2VyQXQoMSk7XG4gICAgICB9XG5cbiAgICAgIC8vIGxhc3RcbiAgICAgIGlmIChwb3NpdGlvbiA9PT0gbWFya2Vycy5sZW5ndGggLSAxKSB7XG4gICAgICAgIG1hcmtlci5fcHJldiA9IHRoaXMubWFya2VyQXQocG9zaXRpb24gLSAxKTtcbiAgICAgICAgbWFya2VyLl9uZXh0ID0gdGhpcy5tYXJrZXJBdCgwKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcbiAgX2lkcyAoKSB7XG4gICAgdmFyIHJzbHQgPSBbXTtcblxuICAgIGZvciAobGV0IGlkIGluIHRoaXMuX2xheWVycykge1xuICAgICAgcnNsdC5wdXNoKGlkKTtcbiAgICB9XG5cbiAgICByc2x0LnNvcnQoKGEsIGIpID0+IGEgLSBiKTtcblxuICAgIHJldHVybiByc2x0O1xuICB9LFxuICBzZWxlY3QgKCkge1xuICAgIGlmICh0aGlzLmlzRW1wdHkoKSkge1xuICAgICAgaWYgKHRoaXMuX21hcCkge1xuICAgICAgICB0aGlzLl9tYXAuY2xlYXJTZWxlY3RlZE1Hcm91cCgpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBtYXAgPSB0aGlzLl9tYXA7XG5cbiAgICAgIGlmICh0aGlzLl9pc0hvbGUpIHtcbiAgICAgICAgbWFwLmdldEVITWFya2Vyc0dyb3VwKCkucmVzZXRTZWxlY3Rpb24oKTtcbiAgICAgICAgbWFwLmdldEVNYXJrZXJzR3JvdXAoKS5yZXNldFNlbGVjdGlvbigpO1xuICAgICAgICBtYXAuZ2V0RUhNYXJrZXJzR3JvdXAoKS5zZXRMYXN0SG9sZSh0aGlzKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG1hcC5nZXRFSE1hcmtlcnNHcm91cCgpLnJlc2V0U2VsZWN0aW9uKCk7XG4gICAgICAgIG1hcC5nZXRFSE1hcmtlcnNHcm91cCgpLnJlc2V0TGFzdEhvbGUoKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5nZXRMYXllcnMoKS5fZWFjaCgobWFya2VyKSA9PiB7XG4gICAgICAgIG1hcmtlci5lbmFibGVEcmFnKCk7XG4gICAgICAgIG1hcmtlci5zZWxlY3RJY29uSW5Hcm91cCgpO1xuICAgICAgfSk7XG4gICAgICB0aGlzLl9zZWxlY3RlZCA9IHRydWU7XG5cblxuICAgICAgdGhpcy5fbWFwLnNldFNlbGVjdGVkTUdyb3VwKHRoaXMpO1xuICAgICAgdGhpcy5fbWFwLmZpcmUoRVZFTlRTLm1hcmtlcl9ncm91cF9zZWxlY3QpO1xuICAgIH1cbiAgfSxcbiAgaXNTZWxlY3RlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5fc2VsZWN0ZWQ7XG4gIH0sXG4gIGlzRW1wdHkgKCkge1xuICAgIHJldHVybiB0aGlzLmdldExheWVycygpLmxlbmd0aCA9PT0gMDtcbiAgfSxcbiAgcmVzZXRTZWxlY3Rpb24gKCkge1xuICAgIHRoaXMuZ2V0TGF5ZXJzKCkuX2VhY2goKG1hcmtlcikgPT4ge1xuICAgICAgbWFya2VyLmRpc2FibGVEcmFnKCk7XG4gICAgICBtYXJrZXIudW5TZWxlY3RJY29uSW5Hcm91cCgpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5fc2VsZWN0ZWQgPSBmYWxzZTtcbiAgfVxufSlcbiIsImltcG9ydCB7IGljb24gfSBmcm9tICcuLi8uLi9tYXJrZXItaWNvbnMuanMnO1xuXG5pbXBvcnQgRVZFTlRTIGZyb20gJy4uLy4uL2V2ZW50LW5hbWVzLmpzJztcblxudmFyIHNpemUgPSAxO1xudmFyIHVzZXJBZ2VudCA9IG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKTtcblxuaWYgKHVzZXJBZ2VudC5pbmRleE9mKCdpcGFkJykgIT09IC0xIHx8IHVzZXJBZ2VudC5pbmRleE9mKCdpcGhvbmUnKSAhPT0gLTEpIHtcbiAgc2l6ZSA9IDI7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEwuTWFya2VyLmV4dGVuZCh7XG4gIF9kcmFnZ2FibGU6IHVuZGVmaW5lZCwgLy8gYW4gaW5zdGFuY2Ugb2YgTC5EcmFnZ2FibGVcbiAgX29sZExhdExuZ1N0YXRlOiB1bmRlZmluZWQsXG4gIGluaXRpYWxpemUoZ3JvdXAsIGxhdGxuZywgb3B0aW9ucyA9IHt9KSB7XG5cbiAgICBvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7XG4gICAgICBpY29uOiBpY29uLFxuICAgICAgZHJhZ2dhYmxlOiBmYWxzZVxuICAgIH0sIG9wdGlvbnMpO1xuXG4gICAgTC5NYXJrZXIucHJvdG90eXBlLmluaXRpYWxpemUuY2FsbCh0aGlzLCBsYXRsbmcsIG9wdGlvbnMpO1xuXG4gICAgdGhpcy5fbUdyb3VwID0gZ3JvdXA7XG5cbiAgICB0aGlzLl9pc0ZpcnN0ID0gZ3JvdXAuZ2V0TGF5ZXJzKCkubGVuZ3RoID09PSAwO1xuICB9LFxuXG4gIGVuYWJsZURyYWcoKSB7XG4gICAgdGhpcy5kcmFnZ2luZy5lbmFibGUoKTtcbiAgfSxcbiAgZGlzYWJsZURyYWcoKSB7XG4gICAgdGhpcy5kcmFnZ2luZy5kaXNhYmxlKCk7XG4gIH0sXG4gIGdyb3VwKCkge1xuICAgIHJldHVybiB0aGlzLl9tR3JvdXA7XG4gIH0sXG5cbiAgbmV4dCgpIHtcbiAgICB2YXIgbmV4dCA9IHRoaXMuX25leHQuX25leHQ7XG4gICAgaWYgKCF0aGlzLl9uZXh0LmlzTWlkZGxlKCkpIHtcbiAgICAgIG5leHQgPSB0aGlzLl9uZXh0O1xuICAgIH1cbiAgICByZXR1cm4gbmV4dDtcbiAgfSxcbiAgcHJldigpIHtcbiAgICB2YXIgcHJldiA9IHRoaXMuX3ByZXYuX3ByZXY7XG4gICAgaWYgKCF0aGlzLl9wcmV2LmlzTWlkZGxlKCkpIHtcbiAgICAgIHByZXYgPSB0aGlzLl9wcmV2O1xuICAgIH1cbiAgICByZXR1cm4gcHJldjtcbiAgfSxcbiAgY2hhbmdlUHJldk5leHRQb3MoKSB7XG4gICAgaWYgKHRoaXMuX3ByZXYuaXNNaWRkbGUoKSkge1xuXG4gICAgICB2YXIgcHJldkxhdExuZyA9IHRoaXMuZ3JvdXAoKS5fZ2V0TWlkZGxlTGF0TG5nKHRoaXMucHJldigpLCB0aGlzKTtcbiAgICAgIHZhciBuZXh0TGF0TG5nID0gdGhpcy5ncm91cCgpLl9nZXRNaWRkbGVMYXRMbmcodGhpcywgdGhpcy5uZXh0KCkpO1xuXG4gICAgICB0aGlzLl9wcmV2LnNldExhdExuZyhwcmV2TGF0TG5nKTtcbiAgICAgIHRoaXMuX25leHQuc2V0TGF0TG5nKG5leHRMYXRMbmcpO1xuICAgIH1cbiAgfSxcbiAgX3Jlc2V0SWNvbihfaWNvbikge1xuICAgIGlmICh0aGlzLl9oYXNGaXJzdEljb24oKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgaWMgPSBfaWNvbiB8fCBpY29uO1xuXG4gICAgdGhpcy5zZXRJY29uKGljKTtcbiAgICB0aGlzLnByZXYoKS5zZXRJY29uKGljKTtcbiAgICB0aGlzLm5leHQoKS5zZXRJY29uKGljKTtcbiAgfSxcblxuICBfYWRkSWNvbkNsYXNzKGNsYXNzTmFtZSkge1xuICAgIEwuRG9tVXRpbC5hZGRDbGFzcyh0aGlzLl9pY29uLCBjbGFzc05hbWUpO1xuICB9LFxuICBfcmVtb3ZlSWNvbkNsYXNzKGNsYXNzTmFtZSkge1xuICAgIEwuRG9tVXRpbC5yZW1vdmVDbGFzcyh0aGlzLl9pY29uLCBjbGFzc05hbWUpO1xuICB9LFxuICBfaGFzRmlyc3RJY29uKCkge1xuICAgIHJldHVybiB0aGlzLl9pY29uICYmIEwuRG9tVXRpbC5oYXNDbGFzcyh0aGlzLl9pY29uLCAnbS1lZGl0b3ItZGl2LWljb24tZmlyc3QnKTtcbiAgfSxcbiAgaXNNaWRkbGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2ljb24gJiYgTC5Eb21VdGlsLmhhc0NsYXNzKHRoaXMuX2ljb24sICdtLWVkaXRvci1taWRkbGUtZGl2LWljb24nKVxuICAgICAgJiYgIUwuRG9tVXRpbC5oYXNDbGFzcyh0aGlzLl9pY29uLCAnbGVhZmxldC1kcmFnLXRhcmdldCcpO1xuICB9LFxuICBfc2V0RHJhZ0ljb24oKSB7XG4gICAgdGhpcy5fcmVtb3ZlSWNvbkNsYXNzKCdtLWVkaXRvci1kaXYtaWNvbicpO1xuICAgIHRoaXMuX3JlbW92ZUljb25DbGFzcygnbS1lZGl0b3ItbWlkZGxlLWRpdi1pY29uJyk7XG4gICAgdGhpcy5fYWRkSWNvbkNsYXNzKCdtLWVkaXRvci1kaXYtaWNvbi1kcmFnJyk7XG5cbiAgICB0aGlzLnVwZGF0ZSgpO1xuICB9LFxuICBpc1BsYWluKCkge1xuICAgIHJldHVybiBMLkRvbVV0aWwuaGFzQ2xhc3ModGhpcy5faWNvbiwgJ20tZWRpdG9yLWRpdi1pY29uJyk7XG4gIH0sXG4gIF9vbmNlQ2xpY2soKSB7XG4gICAgaWYgKHRoaXMuX2lzRmlyc3QpIHtcbiAgICAgIHRoaXMub25jZSgnY2xpY2snLCAoZSkgPT4ge1xuICAgICAgICBpZiAoIXRoaXMuX2hhc0ZpcnN0SWNvbigpKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG1hcCA9IHRoaXMuX21hcDtcbiAgICAgICAgY29uc3QgbUdyb3VwID0gdGhpcy5ncm91cCgpO1xuXG4gICAgICAgIGlmIChtR3JvdXAuX21hcmtlcnMubGVuZ3RoIDwgMykge1xuICAgICAgICAgIHRoaXMuX29uY2VDbGljaygpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2lzRmlyc3QgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zZXRJY29uKGljb24pO1xuICAgICAgICBtYXAuZmlyZShFVkVOVFMuam9pbl9wYXRoLCB7bUdyb3VwOiBtR3JvdXB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSxcbiAgaXNBY2NlcHRlZFRvRGVsZXRlKCkge1xuICAgIHJldHVybiB0aGlzLl9tYXAub3B0aW9ucy5ub3RpZnlDbGlja01hcmtlckRlbGV0ZVBvbHlnb24gJiZcbiAgICAgICF0aGlzLmlzTWlkZGxlKCkgJiZcbiAgICAgIHRoaXMuaXNTZWxlY3RlZEluR3JvdXAoKSAmJlxuICAgICAgdGhpcy5fbWFwLmdldFNlbGVjdGVkTWFya2VyKCkgPT09IHRoaXMgJiZcbiAgICAgIHRoaXMuZ3JvdXAoKS5oYXNNaW5pbWFsTWFya2Vyc0xlbmd0aCgpO1xuICB9LFxuICBuZWVkQWNjZXB0VG9EZWxldGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX21hcC5vcHRpb25zLm5vdGlmeUNsaWNrTWFya2VyRGVsZXRlUG9seWdvbiAmJlxuICAgICAgIXRoaXMuaXNNaWRkbGUoKSAmJlxuICAgICAgdGhpcy5pc1NlbGVjdGVkSW5Hcm91cCgpICYmXG4gICAgICB0aGlzLl9tYXAuZ2V0U2VsZWN0ZWRNYXJrZXIoKSAhPT0gdGhpcyAmJlxuICAgICAgdGhpcy5ncm91cCgpLmhhc01pbmltYWxNYXJrZXJzTGVuZ3RoKCk7XG4gIH0sXG4gIF9kaXNhbGxvd1RvRXhlY3V0ZUV2ZW50KCkge1xuICAgIGNvbnN0IG1hcCA9IHRoaXMuX21hcDtcbiAgICBsZXQgc2VsZWN0ZWRNR3JvdXA7XG5cbiAgICBpZiAobWFwKSB7XG4gICAgICBzZWxlY3RlZE1Hcm91cCA9IG1hcC5nZXRTZWxlY3RlZE1Hcm91cCgpXG4gICAgfVxuXG4gICAgcmV0dXJuIHNlbGVjdGVkTUdyb3VwICYmIHNlbGVjdGVkTUdyb3VwLmhhc0ZpcnN0TWFya2VyKCkgJiYgc2VsZWN0ZWRNR3JvdXAgIT09IHRoaXMuZ3JvdXAoKTtcbiAgfSxcbiAgX2JpbmRFdmVudHMoKSB7XG5cbiAgICB0aGlzLm9uKCdkcmFnc3RhcnQnLCBlID0+IHtcbiAgICAgIHRoaXMuX3NldERyYWdJY29uKCk7XG5cbiAgICAgIHRoaXMuZ3JvdXAoKS5zZXRTZWxlY3RlZCh0aGlzKTtcbiAgICAgIHRoaXMuX29sZExhdExuZ1N0YXRlID0gZS50YXJnZXQuX2xhdGxuZztcblxuICAgICAgaWYgKHRoaXMuX3ByZXYuaXNQbGFpbigpKSB7XG4gICAgICAgIHRoaXMuZ3JvdXAoKS5zZXRNaWRkbGVNYXJrZXJzKHRoaXMucG9zaXRpb24pO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9tYXAuZmlyZShFVkVOVFMubWFya2VyX2RyYWdzdGFydCk7XG5cbiAgICAgIHRoaXMuX19kcmFnZ2luZyA9IHRydWU7XG4gICAgfSk7XG5cbiAgICB0aGlzLm9uKCdjbGljaycsICgpID0+IHtcbiAgICAgIGNvbnN0IG1Hcm91cCA9IHRoaXMuZ3JvdXAoKTtcbiAgICAgIGNvbnN0IG1hcCA9IHRoaXMuX21hcDtcblxuICAgICAgaWYgKHRoaXMuX2Rpc2FsbG93VG9FeGVjdXRlRXZlbnQoKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLm5lZWRBY2NlcHRUb0RlbGV0ZSgpKSB7XG4gICAgICAgIG1Hcm91cC5zZXRTZWxlY3RlZCh0aGlzKTtcbiAgICAgICAgbWFwLm1zZ0hlbHBlci5tc2cobWFwLm9wdGlvbnMudGV4dC5hY2NlcHREZWxldGlvbiwgJ2Vycm9yJywgdGhpcyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKG1Hcm91cC5oYXNGaXJzdE1hcmtlcigpICYmIHRoaXMgIT09IG1Hcm91cC5nZXRGaXJzdCgpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuX2hhc0ZpcnN0SWNvbigpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgbUdyb3VwLnNldFNlbGVjdGVkKHRoaXMpO1xuICAgICAgaWYgKHRoaXMuX2hhc0ZpcnN0SWNvbigpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKG1Hcm91cC5nZXRGaXJzdCgpLl9oYXNGaXJzdEljb24oKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICghdGhpcy5pc1NlbGVjdGVkSW5Hcm91cCgpKSB7XG4gICAgICAgIG1Hcm91cC5zZWxlY3QoKTtcblxuICAgICAgICBpZiAodGhpcy5pc01pZGRsZSgpKSB7XG4gICAgICAgICAgbWFwLm1zZ0hlbHBlci5tc2cobWFwLm9wdGlvbnMudGV4dC5jbGlja1RvQWRkTmV3RWRnZXMsIG51bGwsIHRoaXMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG1hcC5tc2dIZWxwZXIubXNnKG1hcC5vcHRpb25zLnRleHQuY2xpY2tUb1JlbW92ZUFsbFNlbGVjdGVkRWRnZXMsIG51bGwsIHRoaXMpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuaXNBY2NlcHRlZFRvRGVsZXRlKCkpIHtcbiAgICAgICAgICBtYXAubXNnSGVscGVyLm1zZyhtYXAub3B0aW9ucy50ZXh0LmFjY2VwdERlbGV0aW9uLCAnZXJyb3InLCB0aGlzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuaXNNaWRkbGUoKSkgeyAvL2FkZCB2ZXJ0ZXhcbiAgICAgICAgbUdyb3VwLnNldE1pZGRsZU1hcmtlcnModGhpcy5wb3NpdGlvbik7XG4gICAgICAgIHRoaXMuX3Jlc2V0SWNvbihpY29uKTtcbiAgICAgICAgbUdyb3VwLnNlbGVjdCgpO1xuICAgICAgICBtYXAubXNnSGVscGVyLm1zZyhtYXAub3B0aW9ucy50ZXh0LmNsaWNrVG9SZW1vdmVBbGxTZWxlY3RlZEVkZ2VzLCBudWxsLCB0aGlzKTtcblxuICAgICAgICBtYXAuY2xlYXJTZWxlY3RlZE1hcmtlcigpO1xuXG4gICAgICB9IGVsc2UgeyAvL3JlbW92ZSB2ZXJ0ZXhcbiAgICAgICAgaWYgKCFtR3JvdXAuZ2V0Rmlyc3QoKS5faGFzRmlyc3RJY29uKCkpIHtcbiAgICAgICAgICBtYXAubXNnSGVscGVyLmhpZGUoKTtcblxuICAgICAgICAgIG1Hcm91cC5yZW1vdmVNYXJrZXIodGhpcyk7XG5cbiAgICAgICAgICBpZiAobUdyb3VwLmlzRW1wdHkoKSkge1xuICAgICAgICAgICAgaWYgKG1Hcm91cC5faXNIb2xlKSB7XG4gICAgICAgICAgICAgIG1hcC5maXJlKEVWRU5UUy5ob2xlX2RlbGV0ZWQpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgbWFwLmZpcmUoRVZFTlRTLnBvbHlnb25fZGVsZXRlZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBtYXAubXNnSGVscGVyLmhpZGUoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgbUdyb3VwLnNlbGVjdCgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB0aGlzLm9uKCdtb3VzZWRvd24nLCAoKSA9PiB7XG4gICAgICBpZiAoIXRoaXMuZHJhZ2dpbmcuX2VuYWJsZWQpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgdGhpcy5vbignbW91c2VvdmVyJywgKGUpID0+IHtcbiAgICAgIGUub3JpZ2luYWxFdmVudC5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgICAgY29uc3Qgc2VsZWN0ZWRNYXJrZXIgPSB0aGlzLl9tYXAuZ2V0U2VsZWN0ZWRNYXJrZXIoKTtcbiAgICAgIGNvbnN0IHNlbGVjdGVkTWFya2VyRHJhZ2dpbmcgPSAhIShzZWxlY3RlZE1hcmtlciAmJiBzZWxlY3RlZE1hcmtlci5fX2RyYWdnaW5nKTtcblxuICAgICAgaWYgKHRoaXMuX2Rpc2FsbG93VG9FeGVjdXRlRXZlbnQoKSB8fCBzZWxlY3RlZE1hcmtlckRyYWdnaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc3QgbWFwID0gdGhpcy5fbWFwO1xuICAgICAgaWYgKHRoaXMuZ3JvdXAoKS5nZXRGaXJzdCgpLl9oYXNGaXJzdEljb24oKSkge1xuICAgICAgICBpZiAodGhpcy5ncm91cCgpLmdldExheWVycygpLmxlbmd0aCA+IDIpIHtcbiAgICAgICAgICBpZiAodGhpcy5faGFzRmlyc3RJY29uKCkpIHtcbiAgICAgICAgICAgIG1hcC5maXJlKEVWRU5UUy5maXJzdF9tYXJrZXJfbW91c2VvdmVyLCB7bWFya2VyOiB0aGlzfSk7XG4gICAgICAgICAgfSBlbHNlIGlmICh0aGlzID09PSB0aGlzLmdyb3VwKCkuX2xhc3RNYXJrZXIpIHtcbiAgICAgICAgICAgIG1hcC5maXJlKEVWRU5UUy5sYXN0X21hcmtlcl9kYmxjbGlja19tb3VzZW92ZXIsIHttYXJrZXI6IHRoaXN9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICh0aGlzLmlzU2VsZWN0ZWRJbkdyb3VwKCkpIHtcbiAgICAgICAgICBpZiAodGhpcy5pc01pZGRsZSgpKSB7XG4gICAgICAgICAgICBtYXAuZmlyZShFVkVOVFMuc2VsZWN0ZWRfbWlkZGxlX21hcmtlcl9tb3VzZW92ZXIsIHttYXJrZXI6IHRoaXN9KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbWFwLmZpcmUoRVZFTlRTLnNlbGVjdGVkX21hcmtlcl9tb3VzZW92ZXIsIHttYXJrZXI6IHRoaXN9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbWFwLmZpcmUoRVZFTlRTLm5vdF9zZWxlY3RlZF9tYXJrZXJfbW91c2VvdmVyLCB7bWFya2VyOiB0aGlzfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLmlzQWNjZXB0ZWRUb0RlbGV0ZSgpKSB7XG4gICAgICAgIG1hcC5tc2dIZWxwZXIubXNnKG1hcC5vcHRpb25zLnRleHQuYWNjZXB0RGVsZXRpb24sICdlcnJvcicsIHRoaXMpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHRoaXMub24oJ21vdXNlb3V0JywgKGUpID0+IHtcbiAgICAgIGUub3JpZ2luYWxFdmVudC5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgICAgY29uc3Qgc2VsZWN0ZWRNYXJrZXIgPSB0aGlzLl9tYXAuZ2V0U2VsZWN0ZWRNYXJrZXIoKTtcbiAgICAgIGNvbnN0IHNlbGVjdGVkTWFya2VyRHJhZ2dpbmcgPSAhIShzZWxlY3RlZE1hcmtlciAmJiBzZWxlY3RlZE1hcmtlci5fX2RyYWdnaW5nKTtcblxuICAgICAgaWYgKHRoaXMuX2Rpc2FsbG93VG9FeGVjdXRlRXZlbnQoKSB8fCBzZWxlY3RlZE1hcmtlckRyYWdnaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fbWFwLmZpcmUoRVZFTlRTLm1hcmtlcl9tb3VzZW91dCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLl9vbmNlQ2xpY2soKTtcblxuICAgIHRoaXMub24oJ2RibGNsaWNrJywgKCkgPT4ge1xuICAgICAgaWYgKHRoaXMuX2Rpc2FsbG93VG9FeGVjdXRlRXZlbnQoKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBtR3JvdXAgPSB0aGlzLmdyb3VwKCk7XG4gICAgICBpZiAobUdyb3VwICYmIG1Hcm91cC5nZXRGaXJzdCgpICYmIG1Hcm91cC5nZXRGaXJzdCgpLl9oYXNGaXJzdEljb24oKSkge1xuICAgICAgICBpZiAodGhpcyA9PT0gbUdyb3VwLl9sYXN0TWFya2VyKSB7XG4gICAgICAgICAgbUdyb3VwLmdldEZpcnN0KCkuZmlyZSgnY2xpY2snKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgdGhpcy5vbignZHJhZycsIChlKSA9PiB7XG4gICAgICB0aGlzLl9vbkRyYWcoZSk7XG4gICAgfSk7XG5cbiAgICB0aGlzLm9uKCdkcmFnZW5kJywgKGUpID0+IHtcbiAgICAgIHRoaXMuX29uRHJhZ0VuZChlKTtcbiAgICB9KTtcbiAgfSxcblxuICBvbkFkZChtYXApIHtcbiAgICBMLk1hcmtlci5wcm90b3R5cGUub25BZGQuY2FsbCh0aGlzLCBtYXApO1xuXG4gICAgdGhpcy5fYmluZEV2ZW50cyhtYXApO1xuICB9LFxuICBfb25EcmFnKGUpIHtcbiAgICBjb25zdCBtYXJrZXIgPSBlLnRhcmdldDtcblxuICAgIG1hcmtlci5jaGFuZ2VQcmV2TmV4dFBvcygpO1xuXG4gICAgY29uc3QgbWFwID0gdGhpcy5fbWFwO1xuICAgIG1hcC5fY29udmVydFRvRWRpdChtYXAuZ2V0RU1hcmtlcnNHcm91cCgpKTtcblxuICAgIHRoaXMuX3NldERyYWdJY29uKCk7XG5cbiAgICBtYXAuZmlyZShFVkVOVFMuZHJhZ19tYXJrZXIsIHttYXJrZXI6IHRoaXN9KTtcbiAgfSxcbiAgX29uRHJhZ0VuZCgpIHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMuZ3JvdXAoKS5zZWxlY3QoKTtcbiAgICAgIHRoaXMuX21hcC5maXJlKEVWRU5UUy5kcmFnZW5kX21hcmtlciwge21hcmtlcjogdGhpc30pO1xuXG4gICAgICB0aGlzLl9tYXAuZmlyZShFVkVOVFMuc2VsZWN0ZWRfbWFya2VyX21vdXNlb3Zlciwge21hcmtlcjogdGhpc30pO1xuXG4gICAgICB0aGlzLnJlc2V0U3R5bGUoKTtcbiAgICB9LCAxKTtcbiAgfSxcbiAgcmVzZXRJY29uKCkge1xuICAgIHRoaXMuX3JlbW92ZUljb25DbGFzcygnbS1lZGl0b3ItZGl2LWljb24tZHJhZycpO1xuICB9LFxuICB1blNlbGVjdEljb25Jbkdyb3VwKCkge1xuICAgIHRoaXMuX3JlbW92ZUljb25DbGFzcygnZ3JvdXAtc2VsZWN0ZWQnKTtcbiAgfSxcbiAgX3NlbGVjdEljb25Jbkdyb3VwKCkge1xuICAgIGlmICghdGhpcy5pc01pZGRsZSgpKSB7XG4gICAgICB0aGlzLl9hZGRJY29uQ2xhc3MoJ20tZWRpdG9yLWRpdi1pY29uJyk7XG4gICAgfVxuICAgIHRoaXMuX2FkZEljb25DbGFzcygnZ3JvdXAtc2VsZWN0ZWQnKTtcbiAgfSxcbiAgc2VsZWN0SWNvbkluR3JvdXAoKSB7XG4gICAgaWYgKHRoaXMuX3ByZXYpIHtcbiAgICAgIHRoaXMuX3ByZXYuX3NlbGVjdEljb25Jbkdyb3VwKCk7XG4gICAgfVxuICAgIHRoaXMuX3NlbGVjdEljb25Jbkdyb3VwKCk7XG4gICAgaWYgKHRoaXMuX25leHQpIHtcbiAgICAgIHRoaXMuX25leHQuX3NlbGVjdEljb25Jbkdyb3VwKCk7XG4gICAgfVxuICB9LFxuICBpc1NlbGVjdGVkSW5Hcm91cCgpIHtcbiAgICByZXR1cm4gTC5Eb21VdGlsLmhhc0NsYXNzKHRoaXMuX2ljb24sICdncm91cC1zZWxlY3RlZCcpO1xuICB9LFxuICBvblJlbW92ZShtYXApIHtcbiAgICB0aGlzLm9mZignbW91c2VvdXQnKTtcblxuICAgIEwuTWFya2VyLnByb3RvdHlwZS5vblJlbW92ZS5jYWxsKHRoaXMsIG1hcCk7XG4gIH0sXG5cbiAgcmVzZXRTdHlsZSgpIHtcbiAgICB0aGlzLnJlc2V0SWNvbigpO1xuICAgIHRoaXMuc2VsZWN0SWNvbkluR3JvdXAoKTtcbiAgfVxufSk7XG4iLCJpbXBvcnQgTXNnSGVscGVyIGZyb20gJy4uL2V4dGVuZGVkL01zZ0hlbHBlci5qcyc7XG5pbXBvcnQgbSBmcm9tICcuLi91dGlscy9tb2JpbGUuanMnO1xuXG5pbXBvcnQgRVZFTlRTIGZyb20gJy4uL2V2ZW50LW5hbWVzLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKCkge1xuXG4gIHRoaXMudG91Y2hab29tLmRpc2FibGUoKTtcbiAgdGhpcy5kb3VibGVDbGlja1pvb20uZGlzYWJsZSgpO1xuXG4gIHRoaXMuYm94Wm9vbS5kaXNhYmxlKCk7XG4gIHRoaXMua2V5Ym9hcmQuZGlzYWJsZSgpO1xuXG4gIHZhciBtc2dIZWxwZXIgPSB0aGlzLm1zZ0hlbHBlciA9IG5ldyBNc2dIZWxwZXIoe1xuICAgIGRlZmF1bHRNc2c6IHRoaXMub3B0aW9ucy50ZXh0LmNsaWNrVG9TdGFydERyYXdQb2x5Z29uT25NYXAsXG4gIH0pO1xuXG4gIHRoaXMub24oJ21zZ0hlbHBlckFkZGVkJywgKCkgPT4ge1xuXG4gICAgdmFyIHRleHQgPSB0aGlzLm9wdGlvbnMudGV4dDtcblxuICAgIHRoaXMub24oRVZFTlRTLm1hcmtlcl9ncm91cF9zZWxlY3QsICgpID0+IHtcblxuICAgICAgY29uc3QgX2Rpc2FsbG93VG9FeGVjdXRlRXZlbnQgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHNlbGVjdGVkTUdyb3VwID0gdGhpcy5nZXRTZWxlY3RlZE1Hcm91cCgpO1xuXG4gICAgICAgIHJldHVybiBzZWxlY3RlZE1Hcm91cCAmJiBzZWxlY3RlZE1Hcm91cC5oYXNGaXJzdE1hcmtlcigpO1xuICAgICAgfTtcblxuICAgICAgdGhpcy5vZmYoRVZFTlRTLm5vdF9zZWxlY3RlZF9tYXJrZXJfbW91c2VvdmVyKTtcbiAgICAgIHRoaXMub24oRVZFTlRTLm5vdF9zZWxlY3RlZF9tYXJrZXJfbW91c2VvdmVyLCAoZGF0YSkgPT4ge1xuICAgICAgICBtc2dIZWxwZXIubXNnKHRleHQuY2xpY2tUb1NlbGVjdEVkZ2VzLCBudWxsLCBkYXRhLm1hcmtlcik7XG4gICAgICB9KTtcblxuICAgICAgdGhpcy5vZmYoRVZFTlRTLnNlbGVjdGVkX21hcmtlcl9tb3VzZW92ZXIpO1xuICAgICAgdGhpcy5vbihFVkVOVFMuc2VsZWN0ZWRfbWFya2VyX21vdXNlb3ZlciwgKGRhdGEpID0+IHtcbiAgICAgICAgbXNnSGVscGVyLm1zZyh0ZXh0LmNsaWNrVG9SZW1vdmVBbGxTZWxlY3RlZEVkZ2VzLCBudWxsLCBkYXRhLm1hcmtlcik7XG4gICAgICB9KTtcblxuICAgICAgdGhpcy5vZmYoRVZFTlRTLnNlbGVjdGVkX21pZGRsZV9tYXJrZXJfbW91c2VvdmVyKTtcbiAgICAgIHRoaXMub24oRVZFTlRTLnNlbGVjdGVkX21pZGRsZV9tYXJrZXJfbW91c2VvdmVyLCAoZGF0YSkgPT4ge1xuICAgICAgICBtc2dIZWxwZXIubXNnKHRleHQuY2xpY2tUb0FkZE5ld0VkZ2VzLCBudWxsLCBkYXRhLm1hcmtlcik7XG4gICAgICB9KTtcblxuICAgICAgLy8gb24gZWRpdCBwb2x5Z29uXG4gICAgICB0aGlzLm9mZihFVkVOVFMuZWRpdF9wb2x5Z29uX21vdXNlbW92ZSk7XG4gICAgICB0aGlzLm9uKEVWRU5UUy5lZGl0X3BvbHlnb25fbW91c2Vtb3ZlLCAoZGF0YSkgPT4ge1xuICAgICAgICBtc2dIZWxwZXIubXNnKHRleHQuY2xpY2tUb0RyYXdJbm5lckVkZ2VzLCBudWxsLCBkYXRhLmxheWVyUG9pbnQpO1xuICAgICAgfSk7XG5cbiAgICAgIHRoaXMub2ZmKEVWRU5UUy5lZGl0X3BvbHlnb25fbW91c2VvdXQpO1xuICAgICAgdGhpcy5vbihFVkVOVFMuZWRpdF9wb2x5Z29uX21vdXNlb3V0LCAoKSA9PiB7XG4gICAgICAgIG1zZ0hlbHBlci5oaWRlKCk7XG4gICAgICB9KTtcblxuICAgICAgLy8gb24gdmlldyBwb2x5Z29uXG4gICAgICB0aGlzLm9mZihFVkVOVFMudmlld19wb2x5Z29uX21vdXNlbW92ZSk7XG4gICAgICB0aGlzLm9uKEVWRU5UUy52aWV3X3BvbHlnb25fbW91c2Vtb3ZlLCAoZGF0YSkgPT4ge1xuICAgICAgICBpZiAoX2Rpc2FsbG93VG9FeGVjdXRlRXZlbnQoKSkge1xuICAgICAgICAgIG1zZ0hlbHBlci5oaWRlKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbXNnSGVscGVyLm1zZyh0ZXh0LmNsaWNrVG9FZGl0LCBudWxsLCBkYXRhLmxheWVyUG9pbnQpO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgdGhpcy5vZmYoRVZFTlRTLnZpZXdfcG9seWdvbl9tb3VzZW91dCk7XG4gICAgICB0aGlzLm9uKEVWRU5UUy52aWV3X3BvbHlnb25fbW91c2VvdXQsICgpID0+IHtcbiAgICAgICAgbXNnSGVscGVyLmhpZGUoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgLy8gaGlkZSBtc2dcbiAgICB0aGlzLm9mZihFVkVOVFMubWFya2VyX21vdXNlb3V0KTtcbiAgICB0aGlzLm9uKEVWRU5UUy5tYXJrZXJfbW91c2VvdXQsICgpID0+IHtcbiAgICAgIG1zZ0hlbHBlci5oaWRlKCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLm9uKEVWRU5UUy5tYXJrZXJfZHJhZ3N0YXJ0LCAoKSA9PiB7XG4gICAgICBtc2dIZWxwZXIuaGlkZSgpO1xuICAgIH0pO1xuXG4gICAgLy8gb24gc3RhcnQgZHJhdyBwb2x5Z29uXG4gICAgdGhpcy5vZmYoRVZFTlRTLmZpcnN0X21hcmtlcl9tb3VzZW92ZXIpO1xuICAgIHRoaXMub24oRVZFTlRTLmZpcnN0X21hcmtlcl9tb3VzZW92ZXIsIChkYXRhKSA9PiB7XG4gICAgICBtc2dIZWxwZXIubXNnKHRleHQuY2xpY2tUb0pvaW5FZGdlcywgbnVsbCwgZGF0YS5tYXJrZXIpO1xuICAgIH0pO1xuXG4gICAgLy8gZGJsY2xpY2sgdG8gam9pblxuICAgIHRoaXMub2ZmKEVWRU5UUy5sYXN0X21hcmtlcl9kYmxjbGlja19tb3VzZW92ZXIpO1xuICAgIHRoaXMub24oRVZFTlRTLmxhc3RfbWFya2VyX2RibGNsaWNrX21vdXNlb3ZlciwgKGRhdGEpID0+IHtcbiAgICAgIG1zZ0hlbHBlci5tc2codGV4dC5kYmxjbGlja1RvSm9pbkVkZ2VzLCBudWxsLCBkYXRhLm1hcmtlcik7XG4gICAgfSk7XG5cbiAgICB0aGlzLm9uKEVWRU5UUy5qb2luX3BhdGgsIChkYXRhKSA9PiB7XG4gICAgICBpZiAoZGF0YS5tYXJrZXIpIHtcbiAgICAgICAgbXNnSGVscGVyLm1zZyh0aGlzLm9wdGlvbnMudGV4dC5jbGlja1RvUmVtb3ZlQWxsU2VsZWN0ZWRFZGdlcywgbnVsbCwgZGF0YS5tYXJrZXIpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcblxuICBpZiAoIW0uaXNNb2JpbGVCcm93c2VyKCkpIHtcbiAgICB0aGlzLmFkZENvbnRyb2wobXNnSGVscGVyKTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgTC5Db250cm9sLmV4dGVuZCh7XG4gIG9wdGlvbnM6IHtcbiAgICBwb3NpdGlvbjogJ21zZ2NlbnRlcicsXG4gICAgZGVmYXVsdE1zZzogbnVsbFxuICB9LFxuICBfb25SZXNpemVFdmVudDogbnVsbCxcbiAgX3RpdGxlQ29udGFpbmVyOiBudWxsLFxuXG4gIGluaXRpYWxpemUgKG9wdGlvbnMpIHtcbiAgICBMLlV0aWwuc2V0T3B0aW9ucyh0aGlzLCBvcHRpb25zKTtcbiAgfSxcblxuICBvbkFkZCAobWFwKSB7XG4gICAgdmFyIGNvcm5lciA9IEwuRG9tVXRpbC5jcmVhdGUoJ2RpdicsICdsZWFmbGV0LWJvdHRvbScpO1xuICAgIHZhciBjb250YWluZXIgPSBMLkRvbVV0aWwuY3JlYXRlKCdkaXYnLCAnbGVhZmxldC1tc2ctZWRpdG9yJyk7XG5cbiAgICBtYXAuX2NvbnRyb2xDb3JuZXJzWydtc2djZW50ZXInXSA9IGNvcm5lcjtcbiAgICBtYXAuX2NvbnRyb2xDb250YWluZXIuYXBwZW5kQ2hpbGQoY29ybmVyKTtcblxuICAgIHRoaXMuX3NldENvbnRhaW5lcihjb250YWluZXIsIG1hcCk7XG4gICAgbWFwLmZpcmUoJ21zZ0hlbHBlckFkZGVkJywgeyBjb250cm9sOiB0aGlzIH0pO1xuXG4gICAgdGhpcy5fY2hhbmdlUG9zKCk7XG5cbiAgICB0aGlzLl9iaW5kRXZlbnRzKG1hcCk7XG5cbiAgICByZXR1cm4gY29udGFpbmVyO1xuICB9LFxuICBvblJlbW92ZSgpIHtcbiAgICB0aGlzLl91bkJpbmRFdmVudHMoKTtcblxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5sZWFmbGV0LW1zZy1jb250YWluZXInKS5mb3JFYWNoKGNvbnRhaW5lciA9PiB7XG4gICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGNvbnRhaW5lcik7XG4gICAgfSk7XG4gIH0sXG4gIF9jaGFuZ2VQb3MgKCkge1xuICAgIGlmICh0aGlzLl9tYXApIHtcbiAgICAgIGxldCBjb250cm9sQ29ybmVyID0gdGhpcy5fbWFwLl9jb250cm9sQ29ybmVyc1snbXNnY2VudGVyJ107XG4gICAgICBpZiAoY29udHJvbENvcm5lciAmJiBjb250cm9sQ29ybmVyLmNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICBsZXQgY2hpbGQgPSBjb250cm9sQ29ybmVyLmNoaWxkcmVuWzBdLmNoaWxkcmVuWzBdO1xuXG4gICAgICAgIGlmICghY2hpbGQpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgd2lkdGggPSBjaGlsZC5jbGllbnRXaWR0aDtcbiAgICAgICAgaWYgKHdpZHRoKSB7XG4gICAgICAgICAgY29udHJvbENvcm5lci5zdHlsZS5sZWZ0ID0gKHRoaXMuX21hcC5fY29udGFpbmVyLmNsaWVudFdpZHRoIC0gd2lkdGgpIC8gMiArICdweCc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fdW5CaW5kRXZlbnRzKCk7XG4gICAgfVxuICB9LFxuICBfdW5CaW5kRXZlbnRzKCkge1xuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLl9vblJlc2l6ZUV2ZW50KTtcbiAgfSxcbiAgX2JpbmRFdmVudHMgKCkge1xuICAgIHRoaXMuX29uUmVzaXplRXZlbnQgPSB0aGlzLl9jaGFuZ2VQb3MuYmluZCh0aGlzKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5fb25SZXNpemVFdmVudCk7XG4gIH0sXG4gIF9zZXRDb250YWluZXIgKGNvbnRhaW5lcikge1xuICAgIHRoaXMuX3RpdGxlQ29udGFpbmVyID0gTC5Eb21VdGlsLmNyZWF0ZSgnZGl2JywgJ2xlYWZsZXQtbXNnLWNvbnRhaW5lciB0aXRsZS1oaWRkZW4nKTtcbiAgICB0aGlzLl90aXRsZVBvc0NvbnRhaW5lciA9IEwuRG9tVXRpbC5jcmVhdGUoJ2RpdicsICdsZWFmbGV0LW1zZy1jb250YWluZXIgdGl0bGUtaGlkZGVuJyk7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMuX3RpdGxlQ29udGFpbmVyKTtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMuX3RpdGxlUG9zQ29udGFpbmVyKTtcblxuICAgIGlmICh0aGlzLm9wdGlvbnMuZGVmYXVsdE1zZyAhPT0gbnVsbCkge1xuICAgICAgTC5Eb21VdGlsLnJlbW92ZUNsYXNzKHRoaXMuX3RpdGxlQ29udGFpbmVyLCAndGl0bGUtaGlkZGVuJyk7XG4gICAgICB0aGlzLl90aXRsZUNvbnRhaW5lci5pbm5lckhUTUwgPSB0aGlzLm9wdGlvbnMuZGVmYXVsdE1zZztcbiAgICB9XG4gIH0sXG4gIGdldE9mZnNldCAoZWwpIHtcbiAgICB2YXIgX3ggPSAwO1xuICAgIHZhciBfeSA9IDA7XG4gICAgaWYgKCF0aGlzLl9tYXAuaXNGdWxsc2NyZWVuIHx8ICF0aGlzLl9tYXAuaXNGdWxsc2NyZWVuKCkpIHtcbiAgICAgIHdoaWxlIChlbCAmJiAhaXNOYU4oZWwub2Zmc2V0TGVmdCkgJiYgIWlzTmFOKGVsLm9mZnNldFRvcCkpIHtcbiAgICAgICAgX3ggKz0gZWwub2Zmc2V0TGVmdDtcbiAgICAgICAgX3kgKz0gZWwub2Zmc2V0VG9wO1xuICAgICAgICBlbCA9IGVsLm9mZnNldFBhcmVudDtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHsgeTogX3ksIHg6IF94IH07XG4gIH0sXG4gIG1zZyAodGV4dCwgdHlwZSwgb2JqZWN0KSB7XG4gICAgaWYgKCF0ZXh0IHx8ICF0aGlzLl90aXRsZVBvc0NvbnRhaW5lcikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChvYmplY3QpIHtcbiAgICAgIEwuRG9tVXRpbC5yZW1vdmVDbGFzcyh0aGlzLl90aXRsZVBvc0NvbnRhaW5lciwgJ3RpdGxlLWhpZGRlbicpO1xuICAgICAgTC5Eb21VdGlsLnJlbW92ZUNsYXNzKHRoaXMuX3RpdGxlUG9zQ29udGFpbmVyLCAndGl0bGUtZXJyb3InKTtcbiAgICAgIEwuRG9tVXRpbC5yZW1vdmVDbGFzcyh0aGlzLl90aXRsZVBvc0NvbnRhaW5lciwgJ3RpdGxlLXN1Y2Nlc3MnKTtcblxuICAgICAgdGhpcy5fdGl0bGVQb3NDb250YWluZXIuaW5uZXJIVE1MID0gdGV4dDtcblxuICAgICAgdmFyIHBvaW50O1xuXG4gICAgICB2YXIgb2Zmc2V0ID0gdGhpcy5nZXRPZmZzZXQodGhpcy5fbWFwLl9jb250YWluZXIpO1xuXG4gICAgICBpZiAob2JqZWN0IGluc3RhbmNlb2YgTC5Qb2ludCkge1xuICAgICAgICBwb2ludCA9IG9iamVjdDtcbiAgICAgICAgcG9pbnQgPSB0aGlzLl9tYXAubGF5ZXJQb2ludFRvQ29udGFpbmVyUG9pbnQocG9pbnQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcG9pbnQgPSB0aGlzLl9tYXAubGF0TG5nVG9Db250YWluZXJQb2ludChvYmplY3QuZ2V0TGF0TG5nKCkpO1xuICAgICAgfVxuXG4gICAgICBwb2ludC54ICs9IG9mZnNldC54O1xuICAgICAgcG9pbnQueSArPSBvZmZzZXQueTtcblxuICAgICAgdGhpcy5fdGl0bGVQb3NDb250YWluZXIuc3R5bGUudG9wID0gKHBvaW50LnkgLSA4KSArIFwicHhcIjtcbiAgICAgIHRoaXMuX3RpdGxlUG9zQ29udGFpbmVyLnN0eWxlLmxlZnQgPSAocG9pbnQueCArIDEwKSArIFwicHhcIjtcblxuICAgICAgaWYgKHR5cGUpIHtcbiAgICAgICAgTC5Eb21VdGlsLmFkZENsYXNzKHRoaXMuX3RpdGxlUG9zQ29udGFpbmVyLCAndGl0bGUtJyArIHR5cGUpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBMLkRvbVV0aWwucmVtb3ZlQ2xhc3ModGhpcy5fdGl0bGVDb250YWluZXIsICd0aXRsZS1oaWRkZW4nKTtcbiAgICAgIEwuRG9tVXRpbC5yZW1vdmVDbGFzcyh0aGlzLl90aXRsZUNvbnRhaW5lciwgJ3RpdGxlLWVycm9yJyk7XG4gICAgICBMLkRvbVV0aWwucmVtb3ZlQ2xhc3ModGhpcy5fdGl0bGVDb250YWluZXIsICd0aXRsZS1zdWNjZXNzJyk7XG5cbiAgICAgIHRoaXMuX3RpdGxlQ29udGFpbmVyLmlubmVySFRNTCA9IHRleHQ7XG5cbiAgICAgIGlmICh0eXBlKSB7XG4gICAgICAgIEwuRG9tVXRpbC5hZGRDbGFzcyh0aGlzLl90aXRsZUNvbnRhaW5lciwgJ3RpdGxlLScgKyB0eXBlKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuX2NoYW5nZVBvcygpO1xuICAgIH1cbiAgfSxcbiAgaGlkZSAoKSB7XG4gICAgaWYgKHRoaXMuX3RpdGxlQ29udGFpbmVyKSB7XG4gICAgICBMLkRvbVV0aWwuYWRkQ2xhc3ModGhpcy5fdGl0bGVDb250YWluZXIsICd0aXRsZS1oaWRkZW4nKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fdGl0bGVQb3NDb250YWluZXIpIHtcbiAgICAgIEwuRG9tVXRpbC5hZGRDbGFzcyh0aGlzLl90aXRsZVBvc0NvbnRhaW5lciwgJ3RpdGxlLWhpZGRlbicpO1xuICAgIH1cbiAgfSxcbiAgZ2V0QnRuQ29udGFpbmVyICgpIHtcbiAgICByZXR1cm4gdGhpcy5fbWFwLl9jb250cm9sQ29ybmVyc1snbXNnY2VudGVyJ107XG4gIH0sXG4gIGdldEJ0bkF0IChwb3MpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRCdG5Db250YWluZXIoKS5jaGlsZFtwb3NdO1xuICB9LFxuICBkaXNhYmxlQnRuIChwb3MpIHtcbiAgICBMLkRvbVV0aWwuYWRkQ2xhc3ModGhpcy5nZXRCdG5BdChwb3MpLCAnZGlzYWJsZWQnKTtcbiAgfSxcbiAgZW5hYmxlQnRuIChwb3MpIHtcbiAgICBMLkRvbVV0aWwucmVtb3ZlQ2xhc3ModGhpcy5nZXRCdG5BdChwb3MpLCAnZGlzYWJsZWQnKTtcbiAgfVxufSk7XG4iLCJBcnJheS5wcm90b3R5cGUubW92ZSA9IGZ1bmN0aW9uKGZyb20sIHRvKSB7XG4gIHRoaXMuc3BsaWNlKHRvLCAwLCB0aGlzLnNwbGljZShmcm9tLCAxKVswXSk7XG59O1xuQXJyYXkucHJvdG90eXBlLl9lYWNoID0gZnVuY3Rpb24oZnVuYykge1xuICB2YXIgbGVuZ3RoID0gdGhpcy5sZW5ndGg7XG4gIHZhciBpID0gMDtcbiAgZm9yICg7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgIGZ1bmMuY2FsbCh0aGlzLCB0aGlzW2ldLCBpKTtcbiAgfVxufTtcbmV4cG9ydCBkZWZhdWx0IEFycmF5O1xuIiwiaW1wb3J0IEVWRU5UUyBmcm9tICcuLi9ldmVudC1uYW1lcy5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IEwuRmVhdHVyZUdyb3VwLmV4dGVuZCh7XG4gIGluaXRpYWxpemUgKGxhdGxuZ3MsIG9wdGlvbnMgPSB7fSkge1xuICAgIEwuRmVhdHVyZUdyb3VwLnByb3RvdHlwZS5pbml0aWFsaXplLmNhbGwodGhpcywgbGF0bG5ncywgb3B0aW9ucyk7XG5cblxuICAgIHRoaXMub24oJ2xheWVyYWRkJywgKGUpID0+IHtcbiAgICAgIHZhciBtVmlld1N0eWxlID0gdGhpcy5fbWFwLm9wdGlvbnMuc3R5bGUudmlldztcbiAgICAgIGUudGFyZ2V0LnNldFN0eWxlKE9iamVjdC5hc3NpZ24oe1xuICAgICAgICBvcGFjaXR5OiAwLjcsXG4gICAgICAgIGZpbGxPcGFjaXR5OiAwLjM1LFxuICAgICAgICBjb2xvcjogJyMwMEFCRkYnXG4gICAgICB9LCBtVmlld1N0eWxlKSk7XG5cbiAgICAgIHRoaXMuX21hcC5fbW92ZUVQb2x5Z29uT25Ub3AoKTtcbiAgICB9KTtcbiAgfSxcbiAgaXNFbXB0eSgpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRMYXllcnMoKS5sZW5ndGggPT09IDA7XG4gIH0sXG4gIG9uQWRkIChtYXApIHtcbiAgICBMLkZlYXR1cmVHcm91cC5wcm90b3R5cGUub25BZGQuY2FsbCh0aGlzLCBtYXApO1xuXG4gICAgdGhpcy5vbignbW91c2Vtb3ZlJywgKGUpID0+IHtcbiAgICAgIG1hcC5maXJlKEVWRU5UUy52aWV3X3BvbHlnb25fbW91c2Vtb3ZlLCB7IGxheWVyUG9pbnQ6IGUubGF5ZXJQb2ludCB9KTtcbiAgICB9KTtcbiAgICB0aGlzLm9uKCdtb3VzZW91dCcsICgpID0+IHtcbiAgICAgIG1hcC5maXJlKEVWRU5UUy52aWV3X3BvbHlnb25fbW91c2VvdXQpO1xuICAgIH0pO1xuICB9LFxuICBvbkNsaWNrIChlKSB7XG4gICAgTC5Eb21FdmVudC5zdG9wUHJvcGFnYXRpb24oZSk7XG5cbiAgICBjb25zdCBtYXAgPSB0aGlzLl9tYXA7XG4gICAgY29uc3Qgc2VsZWN0ZWRNR3JvdXAgPSBtYXAuZ2V0U2VsZWN0ZWRNR3JvdXAoKTtcbiAgICBjb25zdCBlTWFya2Vyc0dyb3VwID0gbWFwLmdldEVNYXJrZXJzR3JvdXAoKTtcbiAgICBpZiAoKHNlbGVjdGVkTUdyb3VwICYmIHNlbGVjdGVkTUdyb3VwLmdldEZpcnN0KCkgJiYgc2VsZWN0ZWRNR3JvdXAuZ2V0Rmlyc3QoKS5faGFzRmlyc3RJY29uKCkgJiYgIXNlbGVjdGVkTUdyb3VwLmlzRW1wdHkoKSkpIHtcbiAgICAgIGNvbnN0IGVNYXJrZXJzR3JvdXAgPSBtYXAuZ2V0RU1hcmtlcnNHcm91cCgpO1xuICAgICAgZU1hcmtlcnNHcm91cC5zZXQoZS5sYXRsbmcpO1xuICAgICAgbWFwLl9jb252ZXJ0VG9FZGl0KGVNYXJrZXJzR3JvdXApO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyByZXNldFxuICAgICAgaWYgKG1hcC5fZ2V0U2VsZWN0ZWRWTGF5ZXIoKSkge1xuICAgICAgICBtYXAuX3NldEVQb2x5Z29uX1RvX1ZHcm91cCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbWFwLl9hZGRFUG9seWdvbl9Ub19WR3JvdXAoKTtcbiAgICAgIH1cbiAgICAgIG1hcC5jbGVhcigpO1xuICAgICAgbWFwLm1vZGUoJ2RyYXcnKTtcblxuICAgICAgbWFwLl9oaWRlU2VsZWN0ZWRWTGF5ZXIoZS5sYXllcik7XG5cbiAgICAgIGVNYXJrZXJzR3JvdXAucmVzdG9yZShlLmxheWVyKTtcbiAgICAgIG1hcC5fY29udmVydFRvRWRpdChlTWFya2Vyc0dyb3VwKTtcblxuICAgICAgZU1hcmtlcnNHcm91cC5zZWxlY3QoKTtcbiAgICB9XG4gIH0sXG4gIG9uUmVtb3ZlIChtYXApIHtcbiAgICB0aGlzLm9mZignbW91c2VvdmVyJyk7XG4gICAgdGhpcy5vZmYoJ21vdXNlb3V0Jyk7XG5cbiAgICBtYXAub2ZmKEVWRU5UUy52aWV3X3BvbHlnb25fbW91c2Vtb3ZlKTtcbiAgICBtYXAub2ZmKEVWRU5UUy52aWV3X3BvbHlnb25fbW91c2VvdXQpO1xuICB9XG59KTtcbiIsImV4cG9ydCBkZWZhdWx0IEwuRmVhdHVyZUdyb3VwLmV4dGVuZCh7fSk7XG4iLCJpbXBvcnQgRXh0ZW5kZWRQb2x5Z29uIGZyb20gJy4uLy4uL2V4dGVuZGVkL1BvbHlnb24uanMnO1xuXG5pbXBvcnQgRVZFTlRTIGZyb20gJy4uLy4uL2V2ZW50LW5hbWVzLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgTC5FZGl0UGxveWdvbiA9IEV4dGVuZGVkUG9seWdvbi5leHRlbmQoe1xuICBfb2xkRTogdW5kZWZpbmVkLCAvLyB0byByZXVzZSBldmVudCBvYmplY3QgYWZ0ZXIgXCJiYWQgaG9sZVwiIHJlbW92aW5nIHRvIGJ1aWxkIG5ldyBob2xlXG4gIF9rOiAxLCAvLyB0byBkZWNyZWFzZSAnZGlmZicgdmFsdWUgd2hpY2ggaGVscHMgYnVpbGQgYSBob2xlXG4gIGluaXRpYWxpemUgKGxhdGxuZ3MgPSBbWzAsMF1dLCBvcHRpb25zKSB7XG4gICAgTC5Qb2x5Z29uLnByb3RvdHlwZS5pbml0aWFsaXplLmNhbGwodGhpcywgbGF0bG5ncywgb3B0aW9ucyk7XG5cbiAgICB0aGlzLm9wdGlvbnMuY2xhc3NOYW1lID0gJ2xlYWZsZXQtY2xpY2thYmxlIGVkaXRhYmxlLXBvbHlnb24nO1xuICB9LFxuICBfdXBkYXRlTWFya2VyIChlKSB7XG4gICAgbGV0IG1hcmtlciA9IGUubWFya2VyO1xuXG4gICAgaWYgKG1hcmtlci5fbUdyb3VwLl9pc0hvbGUpIHtcbiAgICAgIGxldCBtYXJrZXJzID0gbWFya2VyLl9tR3JvdXAuX21hcmtlcnM7XG4gICAgICBtYXJrZXJzID0gbWFya2Vycy5maWx0ZXIoKG1hcmtlcikgPT4gIW1hcmtlci5pc01pZGRsZSgpKTtcbiAgICAgIHRoaXMuX2xhdGxuZ3NbbWFya2VyLl9tR3JvdXAucG9zaXRpb24gKyAxXSA9IG1hcmtlcnMubWFwKChtYXJrZXIpID0+IG1hcmtlci5nZXRMYXRMbmcoKSk7XG4gICAgfVxuXG4gICAgdGhpcy5yZWRyYXcoKTtcbiAgfSxcbiAgX3JlbW92ZUhvbGUgKGUpIHtcbiAgICBsZXQgaG9sZVBvc2l0aW9uID0gZS5tYXJrZXIuX21Hcm91cC5wb3NpdGlvbjtcbiAgICB0aGlzLl9sYXRsbmdzLnNwbGljZShob2xlUG9zaXRpb24gKyAxLCAxKTtcblxuICAgIGNvbnN0IGVoTWFya2Vyc0dyb3VwID0gdGhpcy5fbWFwLmdldEVITWFya2Vyc0dyb3VwKCk7XG5cbiAgICBlaE1hcmtlcnNHcm91cC5yZW1vdmVMYXllcihlLm1hcmtlci5fbUdyb3VwLl9sZWFmbGV0X2lkKTtcbiAgICBlaE1hcmtlcnNHcm91cC5yZXBvcyhlLm1hcmtlci5fbUdyb3VwLnBvc2l0aW9uKTtcblxuICAgIHRoaXMucmVkcmF3KCk7XG4gIH0sXG4gIG9uQWRkIChtYXApIHtcbiAgICBMLlBvbHlsaW5lLnByb3RvdHlwZS5vbkFkZC5jYWxsKHRoaXMsIG1hcCk7XG5cbiAgICBtYXAub2ZmKEVWRU5UUy5iZWZvcmVfYWRkX21hcmtlcik7XG4gICAgbWFwLm9uKEVWRU5UUy5iZWZvcmVfYWRkX21hcmtlciwgKGUpID0+IHRoaXMuX3VwZGF0ZU1hcmtlcihlKSk7XG4gICAgbWFwLm9mZihFVkVOVFMuZHJhZ19tYXJrZXIpO1xuICAgIG1hcC5vbihFVkVOVFMuZHJhZ19tYXJrZXIsIChlKSA9PiB0aGlzLl91cGRhdGVNYXJrZXIoZSkpO1xuICAgIG1hcC5vZmYoRVZFTlRTLmRlbGV0ZV9tYXJrZXIpO1xuICAgIG1hcC5vbihFVkVOVFMuZGVsZXRlX21hcmtlciwgKGUpID0+IHRoaXMuX3VwZGF0ZU1hcmtlcihlKSk7XG4gICAgbWFwLm9mZihFVkVOVFMuZGVsZXRlX2hvbGUpO1xuICAgIG1hcC5vbihFVkVOVFMuZGVsZXRlX2hvbGUsIChlKSA9PiB0aGlzLl9yZW1vdmVIb2xlKGUpKTtcblxuICAgIHRoaXMub24oJ21vdXNlbW92ZScsIChlKSA9PiB7XG4gICAgICBtYXAuZmlyZShFVkVOVFMuZWRpdF9wb2x5Z29uX21vdXNlbW92ZSwgeyBsYXllclBvaW50OiBlLmxheWVyUG9pbnQgfSk7XG4gICAgfSk7XG5cbiAgICB0aGlzLm9uKCdtb3VzZW91dCcsICgpID0+IG1hcC5maXJlKEVWRU5UUy5lZGl0X3BvbHlnb25fbW91c2VvdXQpKTtcbiAgfSxcbiAgb25SZW1vdmUgKG1hcCkge1xuICAgIHRoaXMub2ZmKCdtb3VzZW1vdmUnKTtcbiAgICB0aGlzLm9mZignbW91c2VvdXQnKTtcblxuICAgIG1hcC5vZmYoRVZFTlRTLmVkaXRfcG9seWdvbl9tb3VzZW92ZXIpO1xuICAgIG1hcC5vZmYoRVZFTlRTLmVkaXRfcG9seWdvbl9tb3VzZW91dCk7XG5cbiAgICBMLlBvbHlsaW5lLnByb3RvdHlwZS5vblJlbW92ZS5jYWxsKHRoaXMsIG1hcCk7XG4gIH0sXG4gIGFkZEhvbGUgKGhvbGUpIHtcbiAgICB0aGlzLl9sYXRsbmdzLnB1c2goaG9sZSk7XG5cbiAgICB0aGlzLnJlZHJhdygpO1xuICB9LFxuICBoYXNIb2xlcygpIHtcbiAgICByZXR1cm4gdGhpcy5fbGF0bG5ncy5sZW5ndGggPiAxO1xuICB9XG59KTtcbiIsImV4cG9ydCBkZWZhdWx0IEwuUG9seWdvbi5leHRlbmQoe1xuICBpc0VtcHR5ICgpIHtcbiAgICBjb25zdCBsYXRMbmdzID0gdGhpcy5nZXRMYXRMbmdzKCk7XG4gICAgcmV0dXJuIGxhdExuZ3MgPT09IG51bGwgfHxcbiAgICAgIGxhdExuZ3MgPT09IHVuZGVmaW5lZCB8fFxuICAgICAgKGxhdExuZ3MgJiYgbGF0TG5ncy5sZW5ndGggPT09IDApIHx8XG4gICAgICBsYXRMbmdzLnRvU3RyaW5nKCkgPT09ICdMYXRMbmcoMCwgMCksTGF0TG5nKDAsIDApJyB8fFxuICAgICAgbGF0TG5ncy50b1N0cmluZygpID09PSAnTGF0TG5nKDAsIDApJztcbiAgfSxcbiAgX2lzSGlkZGVuRGF0YTogdHJ1ZSxcblxuICBzZXRMYXRMbmdzIChsYXRsbmdzKSB7XG4gICAgaWYgKHRoaXMuX2lzSGlkZGVuRGF0YSkge1xuICAgICAgdGhpcy5faXNIaWRkZW5EYXRhID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBMLlBvbHlnb24ucHJvdG90eXBlLnNldExhdExuZ3MuY2FsbCh0aGlzLCBsYXRsbmdzKTtcbiAgfSxcblxuICBhZGRMYXRMbmcgKGxhdGxuZykge1xuICAgIGlmICh0aGlzLl9pc0hpZGRlbkRhdGEpIHtcbiAgICAgIHRoaXMuX2lzSGlkZGVuRGF0YSA9IHRydWU7XG4gICAgfVxuXG4gICAgTC5Qb2x5Z29uLnByb3RvdHlwZS5hZGRMYXRMbmcuY2FsbCh0aGlzLCBsYXRsbmcpO1xuICB9LFxuXG4gIGdldEhvbGVzICgpIHtcbiAgICBjb25zdCBbbGF0bG5ncywgLi4uaG9sZXNdID0gdGhpcy5nZXRMYXRMbmdzKCk7XG5cbiAgICByZXR1cm4gaG9sZXM7XG4gIH0sXG5cbiAgY2xlYXJIb2xlcyAoKSB7XG4gICAgdGhpcy5fbGF0bG5ncyA9IHRoaXMuX2xhdGxuZ3NbMF0gPyBbdGhpcy5fbGF0bG5nc1swXV0gOiBbXTtcbiAgICB0aGlzLnJlZHJhdygpO1xuICB9LFxuICBjbGVhciAoKSB7XG4gICAgdGhpcy5jbGVhckhvbGVzKCk7XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLl9sYXRsbmdzKSAmJiB0aGlzLl9sYXRsbmdzWzBdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHRoaXMuX2lzSGlkZGVuRGF0YSA9IHRydWU7XG4gICAgICB0aGlzLnNldExhdExuZ3MoW1swLDBdLFswLDBdXSk7XG4gICAgfVxuICB9XG59KVxuIiwiaW1wb3J0IG9wdHMgZnJvbSAnLi4vLi4vb3B0aW9ucy5qcyc7XG5cbmxldCBzdHlsZSA9IE9iamVjdC5hc3NpZ24ob3B0cy5zdHlsZS5kcmF3TGluZSwge1xuICBjbGFzc05hbWU6ICdkYXNoLWxpbmUnXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgTC5Qb2x5bGluZS5leHRlbmQoe1xuICBvcHRpb25zOiBPYmplY3QuYXNzaWduKG9wdHMuc3R5bGUuZHJhd0xpbmUsIHtcbiAgICBjbGFzc05hbWU6ICdkYXNoLWxpbmUnXG4gIH0pLFxuICBfbGF0bG5nVG9Nb3ZlOiB1bmRlZmluZWQsXG4gIF9pc0hpZGRlbkxpbmU6IHRydWUsXG5cbiAgaW5pdGlhbGl6ZTogZnVuY3Rpb24gKGxhdGxuZ3MgPSBbWzAsMF1dLCBvcHRpb25zKSB7XG4gICAgaWYgKGxhdGxuZ3MudG9TdHJpbmcoKSA9PT0gJzAsMCcpIHtcbiAgICAgIHRoaXMuX2lzSGlkZGVuTGluZSA9IHRydWU7XG4gICAgICB0aGlzLnNldFN0eWxlKHsgb3BhY2l0eTogMCB9KTtcbiAgICB9XG4gICAgTC5Qb2x5bGluZS5wcm90b3R5cGUuaW5pdGlhbGl6ZS5jYWxsKHRoaXMsIGxhdGxuZ3MsIG9wdGlvbnMpO1xuXG4gICAgcmV0dXJuIHRoaXNcbiAgfSxcbiAgYWRkTGF0TG5nIChsYXRsbmcsIG9wdGlvbnMgPSBzdHlsZSkge1xuICAgIGlmICh0aGlzLl9pc0hpZGRlbkxpbmUpIHtcbiAgICAgIHRoaXMuX2lzSGlkZGVuTGluZSA9IGZhbHNlO1xuXG4gICAgICB0aGlzLnNldExhdExuZ3MoW2xhdGxuZ10pO1xuICAgIH1cblxuICAgIHRoaXMuc2V0U3R5bGUob3B0aW9ucyk7XG5cbiAgICBpZiAodGhpcy5fbGF0bG5nVG9Nb3ZlKSB7XG4gICAgICB0aGlzLl9sYXRsbmdUb01vdmUgPSB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX2xhdGxuZ3MubGVuZ3RoID4gMSkge1xuICAgICAgdGhpcy5fbGF0bG5ncy5zcGxpY2UoLTEpO1xuICAgIH1cblxuICAgIHRoaXMuX2xhdGxuZ3MucHVzaChMLmxhdExuZyhsYXRsbmcpKTtcblxuICAgIHJldHVybiB0aGlzLnJlZHJhdygpO1xuICB9LFxuICB1cGRhdGUgKHBvcykge1xuXG4gICAgaWYgKCF0aGlzLl9sYXRsbmdUb01vdmUgJiYgdGhpcy5fbGF0bG5ncy5sZW5ndGgpIHtcbiAgICAgIHRoaXMuX2xhdGxuZ1RvTW92ZSA9IEwubGF0TG5nKHBvcyk7XG4gICAgICB0aGlzLl9sYXRsbmdzLnB1c2godGhpcy5fbGF0bG5nVG9Nb3ZlKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuX2xhdGxuZ1RvTW92ZSkge1xuICAgICAgdGhpcy5fbGF0bG5nVG9Nb3ZlLmxhdCA9IHBvcy5sYXQ7XG4gICAgICB0aGlzLl9sYXRsbmdUb01vdmUubG5nID0gcG9zLmxuZztcblxuICAgICAgdGhpcy5yZWRyYXcoKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG4gIF9hZGRMaW5lIChsaW5lLCBncm91cCwgaXNMYXN0TWFya2VyKSB7XG4gICAgaWYgKCFpc0xhc3RNYXJrZXIpIHtcbiAgICAgIGxpbmUuYWRkVG8oZ3JvdXApO1xuICAgIH1cbiAgfSxcbiAgY2xlYXIgKCkge1xuICAgIHRoaXMuc2V0TGF0TG5ncyhbXSk7XG4gIH1cbn0pO1xuIiwiaW1wb3J0IE1hcmtlckdyb3VwIGZyb20gJy4uLy4uL21vZGVzL2VkaXQvbWFya2VyLWdyb3VwLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgTC5GZWF0dXJlR3JvdXAuZXh0ZW5kKHtcbiAgX3NlbGVjdGVkOiBmYWxzZSxcbiAgX2xhc3RIb2xlOiB1bmRlZmluZWQsXG4gIF9sYXN0SG9sZVRvRHJhdzogdW5kZWZpbmVkLFxuICBhZGRIb2xlR3JvdXAgKCkge1xuICAgIHRoaXMuX2xhc3RIb2xlID0gbmV3IE1hcmtlckdyb3VwKCk7XG4gICAgdGhpcy5fbGFzdEhvbGUuX2lzSG9sZSA9IHRydWU7XG4gICAgdGhpcy5fbGFzdEhvbGUuYWRkVG8odGhpcyk7XG5cbiAgICB0aGlzLl9sYXN0SG9sZS5wb3NpdGlvbiA9IHRoaXMuZ2V0TGVuZ3RoKCkgLSAxO1xuXG4gICAgdGhpcy5fbGFzdEhvbGVUb0RyYXcgPSB0aGlzLl9sYXN0SG9sZTtcblxuICAgIHJldHVybiB0aGlzLl9sYXN0SG9sZTtcbiAgfSxcbiAgZ2V0TGVuZ3RoICgpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRMYXllcnMoKS5sZW5ndGg7XG4gIH0sXG4gIHJlc2V0TGFzdEhvbGUgKCkge1xuICAgIHRoaXMuX2xhc3RIb2xlID0gdW5kZWZpbmVkO1xuICB9LFxuICBzZXRMYXN0SG9sZSAobGF5ZXIpIHtcbiAgICB0aGlzLl9sYXN0SG9sZSA9IGxheWVyO1xuICB9LFxuICBnZXRMYXN0SG9sZSAoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2xhc3RIb2xlO1xuICB9LFxuICByZW1vdmUgKCkge1xuICAgIHRoaXMuZWFjaExheWVyKChob2xlKSA9PiB7XG4gICAgICB3aGlsZSAoaG9sZS5nZXRMYXllcnMoKS5sZW5ndGgpIHtcbiAgICAgICAgaG9sZS5yZW1vdmVNYXJrZXJBdCgwKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcbiAgcmVwb3MgKHBvc2l0aW9uKSB7XG4gICAgdGhpcy5lYWNoTGF5ZXIoKGxheWVyKSA9PiB7XG4gICAgICBpZiAobGF5ZXIucG9zaXRpb24gPj0gcG9zaXRpb24pIHtcbiAgICAgICAgbGF5ZXIucG9zaXRpb24gLT0gMTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcbiAgcmVzZXRTZWxlY3Rpb24gKCkge1xuICAgIHRoaXMuZWFjaExheWVyKChsYXllcikgPT4ge1xuICAgICAgbGF5ZXIucmVzZXRTZWxlY3Rpb24oKTtcbiAgICB9KTtcbiAgICB0aGlzLl9zZWxlY3RlZCA9IGZhbHNlO1xuICB9LFxuXG4gIGNsZWFyICgpIHtcbiAgICB0aGlzLmVhY2hMYXllcihsYXllciA9PiB7XG4gICAgICBpZiAobGF5ZXIuX21hcmtlcnMpIHtcbiAgICAgICAgbGF5ZXIuY2xlYXIoKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5yZW1vdmVMYXllcihsYXllcik7XG4gICAgfSlcbiAgfVxufSk7XG4iLCJpbXBvcnQgTWFwIGZyb20gJy4vbWFwLmpzJztcblxud2luZG93LkxlYWZsZXRFZGl0b3IgPSBNYXA7XG4iXSwic291cmNlUm9vdCI6IiJ9